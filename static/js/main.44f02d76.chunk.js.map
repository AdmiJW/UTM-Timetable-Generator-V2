{"version":3,"sources":["components/Balloon.js","components/Blindfold.js","components/LoadScreen.js","components/Header.js","components/Nav.js","components/Footer.js","redux/slices/cartSlice.js","redux/slices/blindfoldSlice.js","redux/slices/balloonSlice.js","logic/utils.js","redux/slices/setupCoursesSlice.js","components/cart/CartSection.js","components/cart/CartCourse.js","components/cart/Cart.js","redux/slices/loadingScreenSlice.js","components/annoucementRoute/AnnouncementRoute.js","components/setupRoute/TimeSlot.js","components/setupRoute/CourseItem.js","components/setupRoute/CourseList.js","components/setupRoute/SetupRoute.js","components/generateRoute/ClashCheckState.js","logic/timetable_clash_checker.js","redux/slices/configurationSlice.js","components/generateRoute/GeneralConfiguration.js","components/generateRoute/GridConfiguration.js","components/generateRoute/CustomConfiguration.js","components/generateRoute/ConfigureState.js","logic/Timetable Generation/themeMapper.js","logic/Timetable Generation/reduceCoursesToTimeslotProperties.js","logic/Timetable Generation/KonvaUtils.js","logic/Timetable Generation/getBackgroundLayer.js","logic/Timetable Generation/getLabelAndTimeLayer.js","logic/Timetable Generation/getCoursesLayer.js","logic/Timetable Generation/drawTimetable.js","logic/Timetable Generation/initializeStage.js","logic/Timetable Generation/dataURLExtractor.js","components/generateRoute/CreationState.js","components/generateRoute/GenerateRoute.js","components/tutorialRoute/TutorialRoute.js","components/courseRoute/CatalogItem.js","components/courseRoute/Catalog.js","components/courseRoute/CourseRoute.js","App.js","redux/store.js","index.js"],"names":["Balloon","useSelector","state","balloon","shownCount","type","message","className","Blindfold","blindfold_showing","LoadScreen","loadingScreen_showing","useState","loadingQuotes","setLoadingQuotes","randomIndex","Math","floor","random","length","useEffect","fetch","process","then","res","json","quotes","catch","err","console","error","Header","alt","src","role","title","to","Nav","pathname","useLocation","Footer","href","target","rel","removeCourseFromCart","createAsyncThunk","SLICE_NAME","id","Promise","resolve","window","setTimeout","cartSlice","createSlice","name","initialState","meta","nextID","isWindowOpen","reducers","addCourseToCart","action","Object","assign","isAnimatingDelete","payload","openCart","closeCart","extraReducers","builder","addCase","pending","arg","fulfilled","cartActions","actions","blindfoldSlice","showBlindfold","hideBlindfold","showBalloon","thunkapi","balloonSlice","setTypeAndMessage","rejected","log","_dayOfWeekFullNames","_dayOfWeekShortNames","getDayOfWeekName","dayOfWeek","isFullForm","getTimeString","time","is12HourFormat","padStart","mod","div","getTimeCode","scrollMainContainerTo","selectorOfDivInMainContainer","document","querySelector","ref","scrollTop","offsetTop","scrollHeight","sliceName","generateEmptyCourse","courseName","lecturerName","courseCode","timeslots","generateEmptyTimeslot","startTime","endTime","deleteCourse","deleteTimeslot","saveCoursesToLocalStorage","thunkAPI","a","localStorage","setItem","JSON","stringify","getState","setupCourses","dispatch","loadCoursesFromLocalStorage","getItem","Error","warn","parse","addBlankCourse","addCourseFromCart","cartEnrollment","convertedCourse","cartEnrollObject","nextCourseID","course","key","lecturer","code","section","times","carttime","timeID","beginTime","adapterFromCartEnrollingInterfaceToSetupCourseObject","changeCourseName","newCourseName","changeLecturerName","newLecturerName","changeCourseCode","newCourseCode","addTimeslot","courseID","newTimeslotID","changeTimeslotDayOfWeek","timeslotID","Number","changeTimeslotStartTime","max","changeTimeslotEndTime","setupCoursesSlice","setupActions","CartSection","props","useDispatch","timeListJSX","push","onClick","enrollCourseSection","CartCourse","sectionListJSX","sections","memo","Cart","cart","cartCourseListJSX","isNaN","loadingScreenSlice","showLoadingScreen","hideLoadingScreen","AnnouncementRoute","annoucements","setAnnouncements","finally","annoucementListJSX","map","e","date","children","content","rehypePlugins","rehypeRaw","TimeSlot","timeslot","label","value","onChange","disabled","CourseItem","courseNameRef","useRef","lecturerNameRef","courseCodeRef","current","innerText","timeslotJSXList","contentEditable","onInput","suppressContentEditableWarning","CourseList","courseItems","SetupRoute","getOutputDisplay","clashCheckResult","isClashing","clashDetails","course1","course2","performClashCheck","courses","setClashCheckResult","setState","timetable","Array","fill","coursekey","timekey","timeslotReserver","checkClash","ClashCheckState","allowedFontFamilies","forEach","font","FontFaceObserver","load","configurationSlice","general","theme","orientation","weekends","timeframeBegin","timeframeEnd","grid","gridWidth","gridHeight","gap","courseNameFontSize","lecturerNameFontSize","courseCodeFontSize","custom","isCustom","backgroundColor","fontFamily","labelGridColor","labelGridFontColor","timeGridColor","timeGridFontColor","evenRowColor","oddRowColor","courseColors","defaultCustomCourseColors","fontColor","setTheme","setOrientation","setWeekends","setTimeframeBegin","setTimeframeEnd","setGridWidth","setGridHeight","setGap","setCourseNameFontSize","setLecturerNameFontSize","setCourseCodeFontSize","modifyCustomConfiguration","changeCourseBackgroundColor","color","changeCourseFontColor","configurationActions","GeneralConfiguration","config","GridConfiguration","min","step","CustomConfiguration","customConfig","defConfigCourseColors","configCourseColors","values","courseColorsListJSX","proceedToNextState","ConfigureState","themeMapper","courseBackgroundColors","courseFontColors","reduceCoursesToTimeslotArray","courseKey","timeKey","customReduceCourseToTimeslotArrayStrategy","counter","themeName","presetReduceCourseToTimeslotArrayStrategy","appendRect","layer","options","add","Konva","Rect","preventDefault","appendText","Text","align","verticalAlign","getBackgroundLayer","width","height","Layer","i","j","x","y","getHorizontalBackgroundLayer","getVerticalBackgroundLayer","getLabelAndTimeLayer","v","fontSize","fontStyle","text","drawDayOfWeekHorizontal","lowerY","halfHeight","drawLabelGridHorizontal","timeFontSize","lineHeight","drawTimeGridHorizontal","getHorizontalLabelAndTimeLayer","drawDayOfWeekVertical","drawLabelGridVertical","quarterHeight","drawTimeGridVertical","getVerticalLabelAndTimeLayer","getCoursesLayer","appendCourse","horizontalGetCoursesLayer","verticalGetCoursesLayer","property","ratio","nameHeight","lecturerHeight","codeHeight","drawTimetable","img","fakeDiv","createElement","mapToTheme","stage","Stage","container","initializeStage","dataURL","toDataURL","horizontalDataURLExtractor","verticalDataURLExtractor","dataURLExtractor","CreationState","isTimetableDrawn","setIsTimetableDrawn","timetableImgRef","containerRef","handleCreateButtonClick","anchor","download","click","handleDownloadPng","w","open","write","outerHTML","close","handleOpenInNewTab","style","display","GenerateRoute","TutorialRoute","page","guides","setGuides","pageNo","setPageNo","CatalogItem","addToCart","Catalog","url","search","setSearch","setCourses","data","keys","catalogItemJSX","regexp","RegExp","test","placeholder","CourseRoute","schools","setSchools","selectedSchool","setSelectedSchool","sort","App","path","store","configureStore","reducer","balloonSliceReducer","blindfoldSliceReducer","loadingScreenSliceReducer","setupCoursesSliceReducer","configurationSliceReducer","cartSliceReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44f02d76.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\n\r\n\r\n// Balloon notification. Sits fixed on the screen.\r\nfunction Balloon() {\r\n    const { shownCount, type, message } = useSelector((state)=> state.balloon);\r\n\r\n    return (\r\n    <div className={`balloon ${type} ${shownCount? 'shown': ''}`}>\r\n        { message }\r\n    </div>    \r\n    );\r\n}\r\n\r\nexport default Balloon;","import { useSelector } from 'react-redux';\r\n\r\n\r\n// A blindfold is simply a div that lies on top of components, darken when there is an overlay showing.\r\nfunction Blindfold() {\r\n    const blindfold_showing = useSelector((state)=> state.blindfold_showing);\r\n\r\n    return (\r\n    <div className={`blindfold ${blindfold_showing? 'shown': ''}`}></div>\r\n    )\r\n}\r\n\r\nexport default Blindfold;","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nfunction LoadScreen() {\r\n    const loadingScreen_showing = useSelector((state)=> state.loadingScreen_showing);\r\n    const [ loadingQuotes, setLoadingQuotes ] = useState([\"Loading...\"]);\r\n    const randomIndex = Math.floor( Math.random() * loadingQuotes.length );\r\n\r\n    // On component mount, attempt to load in custom loading quotes from CDN.\r\n    useEffect(()=> {\r\n        fetch( process.env.REACT_APP_LOAD_SCREEN_QUOTE_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((quotes)=> setLoadingQuotes(quotes))\r\n        .catch((err)=> {\r\n            console.error(\"Failed to fetch loading screen quotes from \" + process.env.REACT_APP_LOAD_SCREEN_QUOTE_FETCH_URL);\r\n        });\r\n    },[]);\r\n\r\n\r\n    return (\r\n    <div className={`loadScreen ${loadingScreen_showing? 'shown': ''}`}>\r\n        <h4 className='loadScreen__title'>Loading ⌛️</h4>\r\n        <p className='loadScreen__quote'> { loadingQuotes[randomIndex] } </p>\r\n        <i className=\"fab fa-github-alt loadScreen__logo\"></i>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default LoadScreen;","import { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n    <header className='header container-padded'>\r\n        <img className='header__logo' alt='Logo Universiti Tekonologi Malaysia' src='./img/utm_logo.png' />\r\n        <h1 className='header__title'>UTM Timetable Generator V2</h1>\r\n\r\n        <Link role='button' title='Announcements' to='/' className='header__button' >\r\n            <i className=\"fas fa-bullhorn\"></i>\r\n        </Link>\r\n        <Link role='button' title='View Tutorial' to='/tutorial' className='header__button' >\r\n            <i className=\"fas fa-question\"></i>\r\n        </Link>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { useLocation, Link } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const { pathname } = useLocation();\r\n\r\n    return (\r\n    <nav className='nav container'>\r\n        <Link className='nav-link' data-selected={ pathname === '/courses' } to='/courses'>Courses 📚</Link>\r\n        <Link className='nav-link' data-selected={ pathname === '/setup' } to='/setup'>Setup 🔨</Link>\r\n        <Link className='nav-link' data-selected={ pathname === '/generate' } to='/generate'>Generate 🏭</Link>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","\r\nfunction Footer() {\r\n    return (\r\n    <footer className='footer'>\r\n        <a aria-label='Link to github account' href='https://github.com/AdmiJW/UTM-Timetable-Generator-V2/issues' target='_blank'\r\n            rel='noreferrer noopener' className='footer__card'>\r\n            <p className='footer__card__text'>Support</p>\r\n            <i className=\"fab fa-github-alt footer__card__logo\"></i>\r\n        </a>\r\n        <p className='footer__desc'>An open source project</p>\r\n    </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n/** \r\n * A timeslot object format inside a cart / fetched from CDN. Not to be confused with the one in `setupCoursesSlice.js'\r\n * @typedef {Object} CartTimeslot\r\n * @property {number} id ID of the timeslot respective to the Section\r\n * @property {number} dayOfWeek Integer [0-6]. 0 represents Sunday, 1 represents Monday etc.\r\n * @property {number} beginTime Integer [0-23]. 0 represents 12AM, 1 represents 1AM etc.\r\n * @property {number} endTime Integer [0-23]. 0 represents 12AM, 1 represents 1AM etc.\r\n */\r\n\r\n/**\r\n * A section object format inside a cart / fetched from CDN. Not to be confused with the one in `setupCourseSlice.js`\r\n * @typedef {Object} CartSection\r\n * @property {number} id ID of the timeslot respective to the Course\r\n * @property {string} section A string representing the section, usually something like 01, 02...\r\n * @property {string} lecturer A string representing the lecturer teaching this section\r\n * @property {Object.<number, CartTimeslot>} times Object mapping id to {@link CartTimeslot} objects.\r\n */\r\n\r\n/**\r\n * A course object format inside a cart / fetched from CDN. Not to be confused with the one in `setupCourseSlice.js`\r\n * @typedef {Object} CartCourse\r\n * @property {number} id ID of the course\r\n * @property {string} name A string representing the course name. Eg: Ethics and Civilization\r\n * @property {string} code A string representing the course code. Eg: SECT 1234\r\n * @property {boolean} isAnimatingDelete A boolean used for animation purposes only.\r\n * @property {Object.<number, CartSection>} sections Object mapping id to {@link CartSection} objects.\r\n */\r\n\r\n/**\r\n * The state of cartSlice. \r\n * @typedef {Object.<number, CartCourse>} Cart\r\n * @property {Object} meta Contains `nextID` to indicate the next ID of cart object added. This ID assigned is independent\r\n *      of CartCourse.id, as it still may collide across different schools. Also contains `isWindowOpen` to indicate whether\r\n *      the cart is shown\r\n */\r\n\r\n/**\r\n * The format that is sent to the setupCoursesReducer when user click enroll in a section from `Courses` page\r\n * @typedef {Object} CartEnrollingInterface\r\n * @property {string} name Course name\r\n * @property {string} code Course code\r\n * @property {string} section Section Number\r\n * @property {string} lecturer Section lecturer\r\n * @property {Object.<number, CartTimeslot>} times An object mapping id to {@link CartTimeslot}, like how it originally was\r\n */\r\n\r\n\r\nconst SLICE_NAME = 'cart';\r\nconst FADE_TIMER = 1000;        // ? Animation fade out duration\r\n\r\n//  Async Thunkss\r\nconst removeCourseFromCart = createAsyncThunk(\r\n    SLICE_NAME + '/removeCourseFromCart',\r\n    (id)=> new Promise((resolve)=> window.setTimeout(()=> resolve(id), FADE_TIMER))\r\n);\r\n\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    /** @type Cart */\r\n    initialState: {\r\n        meta: {\r\n            nextID: 0,\r\n            isWindowOpen: false\r\n        },\r\n    },\r\n    reducers: {\r\n        addCourseToCart: (state, action)=> {\r\n            state[ state.meta.nextID++ ] = Object.assign({ isAnimatingDelete: false }, action.payload );\r\n        },\r\n        openCart: (state)=> {\r\n            state.meta.isWindowOpen = true;\r\n        },\r\n        closeCart: (state)=> {\r\n            state.meta.isWindowOpen = false;\r\n        },\r\n    },\r\n    extraReducers: (builder)=> {\r\n        // Remove Couse from cart\r\n        builder.addCase(removeCourseFromCart.pending, (state, action)=> {\r\n            const id = action.meta.arg;\r\n            state[id].isAnimatingDelete = true;\r\n        });\r\n        builder.addCase(removeCourseFromCart.fulfilled, (state, action)=> {\r\n            const id = action.payload;\r\n            delete state[id];\r\n        });\r\n    },\r\n});\r\n\r\n\r\n// Export as one object for namespaced access\r\nexport const cartActions = {\r\n    ...cartSlice.actions,\r\n    removeCourseFromCart,\r\n};\r\n\r\nexport default cartSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const blindfoldSlice = createSlice({\r\n    name: 'blindfold_showing',\r\n    initialState: false,    // True means show blindfold, false means to hide it.\r\n    reducers: {\r\n        showBlindfold: ()=> true,\r\n        hideBlindfold: ()=> false\r\n    }\r\n});\r\n\r\nexport const { showBlindfold, hideBlindfold } = blindfoldSlice.actions;\r\nexport default blindfoldSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// Balloon dissapears after 5 seconds\r\nconst BALLOON_TIMEOUT = 5000;\r\n\r\n// A show balloon thunk that simply resolves after \r\nconst showBalloon = createAsyncThunk(\r\n    'balloon/showBalloon',\r\n    (arg, thunkapi)=> new Promise((resolve)=> window.setTimeout(resolve, BALLOON_TIMEOUT))\r\n);\r\n\r\n\r\nexport const balloonSlice = createSlice({\r\n    name: 'balloon',\r\n    initialState: {\r\n        shownCount: 0,\r\n        type: 'primary',\r\n        message: ''\r\n    },\r\n    reducers: {\r\n        setTypeAndMessage: (state, action)=> {\r\n            const { type, message } = action.payload;\r\n            state.type = type;\r\n            state.message = message;\r\n        }\r\n    },\r\n    extraReducers: (builder)=> {\r\n        builder.addCase( showBalloon.pending, (state)=> {\r\n            ++state.shownCount;\r\n        });\r\n        builder.addCase( showBalloon.fulfilled, (state)=> {\r\n            --state.shownCount;\r\n        });\r\n        builder.addCase( showBalloon.rejected, (state, action)=> console.log(action));\r\n    }\r\n});\r\n\r\nexport const { setTypeAndMessage } = balloonSlice.actions;\r\nexport { showBalloon };\r\n\r\nexport default balloonSlice.reducer;","// ?=====================================================\r\n// ? Utility functions that are used in multiple places\r\n// ?=====================================================\r\n\r\n\r\n\r\nconst _dayOfWeekFullNames = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ];\r\nconst _dayOfWeekShortNames = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ];\r\n\r\n\r\n\r\nfunction getDayOfWeekName(dayOfWeek, isFullForm = true) {\r\n    return isFullForm? _dayOfWeekFullNames[dayOfWeek]: _dayOfWeekShortNames[dayOfWeek];\r\n}\r\n\r\n\r\nfunction getTimeString(time, is12HourFormat = true) {\r\n    if (!is12HourFormat) return `${time.padStart(2, '0')}:00`;\r\n\r\n    const mod = time % 12;\r\n    const div = time / 12;\r\n    return `${ mod === 0? '12': mod } ${ div >= 1? ':00PM': ':00AM'}`;\r\n}\r\n\r\nfunction getTimeCode(time) {\r\n    if (time < 7 ) return '-';\r\n    return `${time - 6}`.padStart(2, '0');\r\n}\r\n\r\n\r\n/**\r\n * Controls the scrolling inside of the '.main--scrollable-wrapper' container.\r\n * @param {?string} selectorOfDivInMainContainer The query selector for the div inside of the container to scroll to (top).\r\n *      If left null, then scroll to the bottom of the container.\r\n */\r\nconst scrollMainContainerTo = (selectorOfDivInMainContainer = null)=> {\r\n    const div = document.querySelector('.main--scrollable-wrapper');\r\n    // Set some timeout so that the document has time to render new course\r\n    window.setTimeout(()=> {\r\n        if (!selectorOfDivInMainContainer)\r\n            div.scrollTop = div.scrollHeight;\r\n        else {\r\n            const ref = document.querySelector(selectorOfDivInMainContainer);\r\n            div.scrollTop = ref.offsetTop;\r\n        }\r\n    }, 100);\r\n}\r\n\r\n\r\n\r\n\r\nexport { getDayOfWeekName, getTimeString, getTimeCode, scrollMainContainerTo }","\r\n// ? The slice of state that is responsible for every course item inside /setup route.\r\n// ? The state will be an Object of courses. This allow easy access if we have a lot of courses with id as key.\r\n// ? Javascript object keeps keys in order: If key is number, then it is guaranteed order. If string, then it is insertion order\r\n// ? Due to this reason, ensure the id is always increas\r\n\r\n\r\n/**\r\n * A single Timeslot object\r\n * @typedef {Object} Timeslot\r\n * @property {number} id ID number for said timeslot in respective course\r\n * @property {number} dayOfWeek Integer in range [0-6]. 0 represents Sunday, 1 represents Monday and so on. Think chinese (1 - 星期一)\r\n * @property {number} startTime Integer in range [0-23]. 24 hour format. Indicates beginning time for this timeslot\r\n * @property {number} endTime Integer in range [0-23]. 24 hour format. Indicates ending time for this timeslot. Should always be later than `startTime`\r\n * @property {boolean} isAnimatingDelete Boolean, used to provide deletion animation\r\n */\r\n\r\n/**\r\n * Timeslot list. Contains `nextID` key and other integer keys mapping to {@link Timeslot}.\r\n * @typedef TimeslotList\r\n * @type {Object.<number, Timeslot>}\r\n */\r\n\r\n/**\r\n * A single Course object\r\n * @typedef {Object} Course\r\n * @property {number} id ID number for said course\r\n * @property {string} courseName A string representing the course's name\r\n * @property {string} lecturerName A string representing the lecturer's name for this course\r\n * @property {string} courseCode A string representing the course's code\r\n * @property {string} isAnimatingDelete Boolean, used to provide deletion animation\r\n * @property {TimeslotList} timeslots An object containing mappings from `id` (number) to {@link Timeslot} objects. \r\n *      Contains unique key `nextID` which maps to a number.\r\n */\r\n\r\n/**\r\n * setupCoursesSlice State structure\r\n * @typedef SetupCoursesSliceState\r\n * @type {Object.<number, Course>}\r\n */\r\n\r\n// ?? For example, see `initialState` below. Remember any changes shall be carefully done\r\n\r\n\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { setTypeAndMessage, showBalloon } from './balloonSlice';\r\nimport { scrollMainContainerTo } from \"../../logic/utils\";\r\n\r\n\r\n\r\nconst sliceName = 'setupCourses';\r\nconst fadeOutTime = 500;                // !! IF YOU CHANGE THIS, THE CSS VALUE FOR ANIMATION DURATION MAY ALSO NEED TO CHANGE\r\n                                        // !! REFER TO FADEOUT TIME IN CSS ANIMATIONS (INSIDE _courseItem.scss)\r\n\r\n//=======================================================================\r\n// Default state that the user will see when first use this application\r\n//=======================================================================\r\nconst initialState = {\r\n    nextID: 0,\r\n};\r\n\r\n\r\n//=======================================================================\r\n// Some utilities\r\n//=======================================================================\r\nconst generateEmptyCourse = (id)=> {\r\n    return {\r\n        id,\r\n        courseName: 'Course Name Here',\r\n        lecturerName: 'Lecturer Name Here',\r\n        courseCode: 'Course Code Here',\r\n        isAnimatingDelete: false,\r\n        timeslots: {\r\n            nextID: 0\r\n        }\r\n    }\r\n}\r\n\r\nconst generateEmptyTimeslot = (id)=> {\r\n    return {\r\n        id,\r\n        dayOfWeek: 0,\r\n        startTime: 8,\r\n        endTime: 9,\r\n        isAnimatingDelete: false\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {import('../slices/cartSlice').CartEnrollingInterface} CartEnrollingInterface\r\n */\r\n/**\r\n * Adapter pattern. Will convert from {@link CartEnrollingInterface} into {@link Course} which can be \r\n * directly inserted into the state.\r\n * \r\n * @param {CartEnrollingInterface} cartEnrollObject The object sent from the cart when user clicks the enroll button on\r\n *      a section\r\n * @param {number} nextCourseID The ID number to be set on `{@link Course}.id`. Usually retrieved from `setupCoursesSlice`'s state\r\n * @returns {Course} The converted course object ready to be inserted into state\r\n */\r\nfunction adapterFromCartEnrollingInterfaceToSetupCourseObject(cartEnrollObject, nextCourseID) {\r\n    const course = generateEmptyCourse(nextCourseID);\r\n    course.courseName = cartEnrollObject.name;\r\n    course.lecturerName = cartEnrollObject.lecturer;\r\n    course.courseCode = cartEnrollObject.code + \" - Section \" + cartEnrollObject.section;\r\n    \r\n    for (let key in cartEnrollObject.times) {\r\n        const carttime = cartEnrollObject.times[key];\r\n        const timeID = course.timeslots.nextID++;\r\n        const time = generateEmptyTimeslot( timeID );\r\n\r\n        time.dayOfWeek = carttime.dayOfWeek;\r\n        time.startTime = carttime.beginTime;\r\n        time.endTime = carttime.endTime;\r\n        // Insert into Course.\r\n        course.timeslots[ timeID ] = time;\r\n    }\r\n    return course;\r\n}\r\n\r\n\r\n\r\n//===========================\r\n// Async Reducers\r\n//===========================\r\nconst deleteCourse = createAsyncThunk(\r\n    sliceName + '/deleteCourse',\r\n    (id)=> new Promise((resolve)=> window.setTimeout(()=> resolve(id), fadeOutTime))\r\n);\r\n\r\nconst deleteTimeslot = createAsyncThunk(\r\n    sliceName + '/deleteTimeslot',\r\n    (arg)=> new Promise((resolve)=> window.setTimeout(()=> resolve(arg), fadeOutTime))\r\n);\r\n\r\n// Not really async process, but I want to use dispatch to show balloons\r\nconst saveCoursesToLocalStorage = createAsyncThunk(\r\n    sliceName + '/saveCoursesToLocalStorage',\r\n    async (arg, thunkAPI)=> {\r\n        try {\r\n            window.localStorage.setItem('app-version', process.env.REACT_APP_VERSION_NUMBER );\r\n            window.localStorage.setItem('saved-state', JSON.stringify( thunkAPI.getState().setupCourses ) );\r\n            thunkAPI.dispatch( setTypeAndMessage({ type: 'success', message: 'Successfully saved courses into local storage!'} ));\r\n            thunkAPI.dispatch( showBalloon() );\r\n        } catch (err) {\r\n            thunkAPI.dispatch( setTypeAndMessage({ type: 'danger', message: 'Failed to save courses into local storage. See console for more info!'} ));\r\n            thunkAPI.dispatch( showBalloon() );\r\n            console.error(err);\r\n        }\r\n    }\r\n);\r\n\r\nconst loadCoursesFromLocalStorage = createAsyncThunk(\r\n    sliceName + '/loadCoursesFromLocalStorage',\r\n    async (arg, thunkAPI)=> {\r\n        try {\r\n            if (!window.localStorage.getItem('saved-state')) throw new Error('not-found');\r\n\r\n            // * APPLICATION VERSION MISMATCH. SO FAR ONLY WARNING\r\n            if (window.localStorage.getItem('app-version') !== process.env.REACT_APP_VERSION_NUMBER )\r\n                console.warn('The saved data in local storage has different application version number' + \r\n                             ' than the current application version')\r\n            \r\n            const res = JSON.parse( localStorage.getItem('saved-state') );\r\n            thunkAPI.dispatch( setTypeAndMessage({ type: 'success', message: 'Successfully loaded courses from local storage!'} ));\r\n            thunkAPI.dispatch( showBalloon() );\r\n            return res;\r\n        } catch (err) {\r\n            if (err.message === 'not-found') {\r\n                thunkAPI.dispatch( setTypeAndMessage({ type: 'warning', message: 'No previous save data found in local storage.'}))\r\n                thunkAPI.dispatch( showBalloon() );\r\n            } \r\n            else {\r\n                thunkAPI.dispatch( setTypeAndMessage({ type: 'danger', message: 'Failed to load courses from local storage. See console for more info!'} ));\r\n                thunkAPI.dispatch( showBalloon() );\r\n                console.error(err);\r\n            }\r\n        }\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n//=============================\r\n// Sync Reducers - (Non thunk)\r\n//=============================\r\nconst reducers = {\r\n    //=========================\r\n    // Course + Meta Info\r\n    //=========================\r\n    addBlankCourse: (state)=> {\r\n        const id = state.nextID++;\r\n        state[id] = generateEmptyCourse(id);\r\n        scrollMainContainerTo();\r\n    },\r\n    addCourseFromCart: (state, action)=> {\r\n        /** @type CartEnrollingInterface */\r\n        const cartEnrollment = action.payload;\r\n        const nextID = state.nextID++;\r\n        const convertedCourse = adapterFromCartEnrollingInterfaceToSetupCourseObject(cartEnrollment, nextID);\r\n        state[nextID] = convertedCourse;\r\n    },\r\n    changeCourseName: (state, action)=> {\r\n        const { id, newCourseName } = action.payload;\r\n        state[id].courseName = newCourseName;\r\n    },\r\n    changeLecturerName: (state, action)=> {\r\n        const { id, newLecturerName } = action.payload;\r\n        state[id].lecturerName = newLecturerName;\r\n    },\r\n    changeCourseCode: (state, action)=> {\r\n        const { id, newCourseCode } = action.payload;\r\n        state[id].courseCode = newCourseCode;\r\n    },\r\n    //=========================\r\n    // Timeslot\r\n    //=========================\r\n    addTimeslot: (state, action)=> {\r\n        const courseID = action.payload;\r\n        const newTimeslotID = state[courseID].timeslots.nextID++;\r\n        state[courseID].timeslots[newTimeslotID] = generateEmptyTimeslot(newTimeslotID);\r\n    },\r\n    changeTimeslotDayOfWeek: (state, action)=> {\r\n        const { courseID, timeslotID, dayOfWeek } = action.payload;\r\n        state[courseID].timeslots[timeslotID].dayOfWeek = Number(dayOfWeek);\r\n    },\r\n    changeTimeslotStartTime: (state, action)=> {\r\n        const { courseID, timeslotID, startTime } = action.payload;\r\n        state[courseID].timeslots[timeslotID].startTime = Number(startTime);\r\n        // Adjust so that endtime doesn't go before starttime!\r\n        state[courseID].timeslots[timeslotID].endTime = Math.max( Number(startTime)+1, \r\n                                                                  state[courseID].timeslots[timeslotID].endTime );\r\n    },\r\n    changeTimeslotEndTime: (state, action)=> {\r\n        const { courseID, timeslotID, endTime } = action.payload;\r\n        state[courseID].timeslots[timeslotID].endTime = Number(endTime);\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n//===============================================\r\n// Creation of slice + Adding in Async Thunks\r\n//===============================================\r\nexport const setupCoursesSlice = createSlice({\r\n    name: 'setupCourses',\r\n    initialState,\r\n    reducers,\r\n    extraReducers: (builder)=> {\r\n        // Delete Course\r\n        // In pending state, the ID of course passed in is in action.meta.arg\r\n        builder.addCase( deleteCourse.pending, (state, action)=> {\r\n            const id = action.meta.arg;\r\n            state[id].isAnimatingDelete = true;\r\n        });\r\n        builder.addCase( deleteCourse.fulfilled, (state, action)=> {\r\n            const id = action.payload;\r\n            delete state[id];\r\n        });\r\n        builder.addCase( deleteTimeslot.pending, (state, action)=> {\r\n            const { courseID, timeslotID } = action.meta.arg;\r\n            state[courseID].timeslots[timeslotID].isAnimatingDelete = true;\r\n        });\r\n        builder.addCase( deleteTimeslot.fulfilled, (state, action)=> {\r\n            const { courseID, timeslotID } = action.payload;\r\n            delete state[courseID].timeslots[timeslotID];\r\n        });\r\n        builder.addCase( loadCoursesFromLocalStorage.fulfilled, (state, action)=> {\r\n            const loadedState = action.payload;\r\n            return loadedState;\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Export one large action object to be namespaced\r\nexport const setupActions = { \r\n    ...setupCoursesSlice.actions,\r\n    deleteCourse,\r\n    deleteTimeslot,\r\n    saveCoursesToLocalStorage,\r\n    loadCoursesFromLocalStorage\r\n};\r\n\r\n// export const { addBlankCourse, changeCourseName, changeLecturerName, changeCourseCode,\r\n//                addTimeslot, changeTimeslotDayOfWeek, changeTimeslotStartTime, changeTimeslotEndTime } = setupCoursesSlice.actions;\r\n// export { deleteCourse, deleteTimeslot, saveCoursesToLocalStorage, loadCoursesFromLocalStorage };\r\nexport default setupCoursesSlice.reducer;","import { useDispatch } from 'react-redux';\r\n\r\nimport { showBalloon, setTypeAndMessage } from '../../redux/slices/balloonSlice';\r\nimport { setupActions } from '../../redux/slices/setupCoursesSlice';\r\n\r\nimport { getDayOfWeekName, getTimeString } from '../../logic/utils';\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/cartSlice').CartSection } CartSection\r\n * @typedef {import('../../redux/slices/cartSlice').CartEnrollingInterface } CartEnrollingInterface\r\n */\r\n\r\n\r\n\r\n/**\r\n * \r\n * @param {*} dispatch \r\n * @param {*} name \r\n * @param {*} code \r\n * @param {CartSection} section \r\n */\r\nfunction enrollCourseSection(dispatch, name, code, section) {\r\n    /** @type CartEnrollingInterface */\r\n    const cartEnrollment = {\r\n        name, code,\r\n        section: section.section,\r\n        lecturer: section.lecturer,\r\n        times: section.times\r\n    }\r\n    dispatch( setupActions.addCourseFromCart(cartEnrollment) );\r\n    dispatch(setTypeAndMessage({ type: 'success', message: `Added ${code} - Section ${section.section} to Setup page!`}));\r\n    dispatch(showBalloon());\r\n}\r\n\r\n\r\n\r\nfunction CartSection(props) {\r\n    const { name, code } = props;\r\n    /** @type CartSection */\r\n    const section = props.section;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // List of class times\r\n    const timeListJSX = [];\r\n    for (let key in section.times) {\r\n        const time = section.times[key];\r\n        timeListJSX.push(\r\n            <li key={key} className='carttime'>\r\n                👉 <strong>{ getDayOfWeekName(time.dayOfWeek, false)}</strong> From <strong>{ getTimeString(time.beginTime) }</strong> To <strong>{ getTimeString(time.endTime) }</strong>\r\n            </li>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <li className='cartsection'>\r\n        <div className='cartsection--meta'>\r\n            <p className='cartsection--section'>\r\n                Sec { section.section }\r\n            </p>\r\n            <p className='cartsection--lecturer'>\r\n                { section.lecturer }\r\n            </p>\r\n\r\n            <button type='button' className='cartsection--enroll' aria-label='Select this section of course' title='Select this section'\r\n                onClick={()=> enrollCourseSection(dispatch, name, code, section)} >\r\n                    Enroll\r\n            </button>\r\n        </div>\r\n\r\n        <ol className='cartsection--times'>\r\n            { timeListJSX }\r\n        </ol>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default CartSection;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { cartActions } from '../../redux/slices/cartSlice';\r\n\r\nimport CartSection from './CartSection';\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/cartSlice').CartCourse } CartCourse\r\n */\r\n\r\n\r\nfunction CartCourse(props) {\r\n    const { id } = props;\r\n    /** @type CartCourse */\r\n    const course = props.course;\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    // List of sections\r\n    const sectionListJSX = [];\r\n    for (let key in course.sections) {\r\n        const section = course.sections[key];\r\n        sectionListJSX.push(\r\n            <CartSection key={key} name={course.name} code={course.code} section={section} />\r\n        );\r\n    }\r\n    \r\n\r\n    return (\r\n    <li className={`cartcourse ${course.isAnimatingDelete? 'removing': ''}`} >\r\n        <div className='cartcourse--meta'>\r\n            <p className='cartcourse--name'>{ course.name }</p>\r\n            <p className='cartcourse--code'>{ course.code }</p>\r\n\r\n            <button type='button' className='cartcourse--delete' aria-label='Remove this course from cart' title='Remove this course from cart'\r\n                onClick={()=> dispatch(cartActions.removeCourseFromCart(id)) }>\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <ul className='cartcourse--sections'>\r\n            { sectionListJSX }\r\n        </ul>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default memo(CartCourse);","\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// Actions\r\nimport { cartActions } from '../../redux/slices/cartSlice';\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\n\r\nimport CartCourse from './CartCourse';\r\n\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/cartSlice').Cart } Cart\r\n */\r\n\r\n\r\nfunction Cart() {\r\n    /** @type Cart */\r\n    const cart = useSelector((state)=> state.cart);\r\n    const { isWindowOpen } = cart.meta;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatch( (isWindowOpen? showBlindfold: hideBlindfold)() );\r\n    }, [dispatch, isWindowOpen]);\r\n\r\n    \r\n    const cartCourseListJSX = [];\r\n    for (let key in cart) {\r\n        if (isNaN(key)) continue;\r\n        cartCourseListJSX.push(\r\n            <CartCourse key={key} id={key} course={ cart[key] } />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <div className={`cart ${isWindowOpen? 'show': ''}`} >\r\n        {/* Close button */}\r\n        <button type='button' aria-label='Close cart' title='Close cart' className='cart--close'\r\n            onClick={()=> dispatch(cartActions.closeCart())} >\r\n                <i className=\"fas fa-times\"></i>\r\n        </button>\r\n\r\n        <h4 className='cart--title'>Cart 🛒</h4>\r\n        <p className='cart--desc'>Wait are we shopping or what?</p>\r\n\r\n        <ul className='cart--list'>\r\n            { cartCourseListJSX }\r\n        </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const loadingScreenSlice = createSlice({\r\n    name: 'loadingScreen_showing',\r\n    initialState: false,\r\n    reducers: {\r\n        showLoadingScreen: ()=> true,\r\n        hideLoadingScreen: ()=> false\r\n    }\r\n});\r\n\r\nexport const { showLoadingScreen, hideLoadingScreen } = loadingScreenSlice.actions;\r\nexport default loadingScreenSlice.reducer;","import ReactMarkdown from 'react-markdown';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n\r\nfunction AnnouncementRoute() {\r\n\r\n    const [annoucements, setAnnouncements] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    // Once mounted, attempt to fetch annoucements from /data/announcements.json\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( process.env.REACT_APP_ANNOUCEMENT_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((annoucements)=> {\r\n            setAnnouncements(annoucements);\r\n        })\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching announcements. See console for more info\"} ));\r\n            dispatch(showBalloon());\r\n        })\r\n        .finally(()=> {\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    const annoucementListJSX = annoucements.map((e)=> {\r\n        return (\r\n        <article className='announcement' key={e.id} >\r\n            <h4 className='annoucement--title'>{e.title}</h4>\r\n            <p className='announcement--date'>{e.date}</p>\r\n            <ReactMarkdown className='announcement--content'\r\n                children={e.content}\r\n                rehypePlugins={[rehypeRaw]} />\r\n        </article>\r\n        );\r\n    });\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Announcements 📡</h2>\r\n\r\n        { annoucementListJSX }\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default AnnouncementRoute;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { setupActions } from '../../redux/slices/setupCoursesSlice';\r\n\r\n\r\n// Timeslots for a course - Controls the course's\r\n// - Day of the week\r\n// - Start time\r\n// - End time\r\nfunction TimeSlot(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { courseID } = props;\r\n    const { id, dayOfWeek, startTime, endTime, isAnimatingDelete } = props.timeslot;\r\n\r\n    return (\r\n    <li className={`setup__timeslotitem ${isAnimatingDelete? 'deleting': ''}`} >\r\n        {/* Button to discard this timeslot */}\r\n        <button type='button' aria-label='Discard this timeslot' label='Discard this timeslot' className='setup__timeslotitem--discardbtn'\r\n            onClick={ ()=> dispatch(setupActions.deleteTimeslot({ courseID, timeslotID: id })) } >\r\n            <i className=\"fas fa-times\"></i>\r\n        </button>\r\n\r\n        <select className='setup__timeslot--select setup__timeslot--dayOfWeek' value={dayOfWeek} \r\n            onChange={ (e)=> dispatch(setupActions.changeTimeslotDayOfWeek({\r\n                courseID, timeslotID: id, dayOfWeek: e.target.value\r\n            })) } >\r\n                <option value='0'>Sunday</option>\r\n                <option value='1'>Monday</option>\r\n                <option value='2'>Tuesday</option>\r\n                <option value='3'>Wednesday</option>\r\n                <option value='4'>Thursday</option>\r\n                <option value='5'>Friday</option>\r\n                <option value='6'>Saturday</option>\r\n        </select>\r\n\r\n        <div className='setup__timeslot--timegrp'>\r\n            <select className='setup__timeslot--select setup__timeslot--startTime' value={startTime}\r\n                onChange={ (e)=> dispatch(setupActions.changeTimeslotStartTime({\r\n                    courseID, timeslotID: id, startTime: e.target.value\r\n                })) } >\r\n                    <option value='8'>02 (8:00 AM)</option>\r\n                    <option value='9'>03 (9:00 AM)</option>\r\n                    <option value='10'>04 (10:00 AM)</option>\r\n                    <option value='11'>05 (11:00 AM)</option>\r\n                    <option value='12'>06 (12:00 AM)</option>\r\n                    <option value='13'>07 (1:00 PM)</option>\r\n                    <option value='14'>08 (2:00 PM)</option>\r\n                    <option value='15'>09 (3:00 PM)</option>\r\n                    <option value='16'>10 (4:00 PM)</option>\r\n                    <option value='17'>11 (5:00 PM)</option>\r\n                    <option value='18'>12 (6:00 PM)</option>\r\n                    <option value='19'>13 (7:00 PM)</option>\r\n            </select>\r\n\r\n            To\r\n\r\n            <select className='setup__timeslot--select setup__timeslot--endTime' value={endTime}\r\n                onChange={ (e)=> dispatch(setupActions.changeTimeslotEndTime({\r\n                    courseID, timeslotID: id, endTime: e.target.value\r\n                })) } >\r\n                    <option value='9' disabled={ startTime > 8 } >03 (9:00 AM)</option>\r\n                    <option value='10' disabled={ startTime > 9 } >04 (10:00 AM)</option>\r\n                    <option value='11' disabled={ startTime > 10 } >05 (11:00 AM)</option>\r\n                    <option value='12' disabled={ startTime > 11 } >06 (12:00 AM)</option>\r\n                    <option value='13' disabled={ startTime > 12 } >07 (1:00 PM)</option>\r\n                    <option value='14' disabled={ startTime > 13 } >08 (2:00 PM)</option>\r\n                    <option value='15' disabled={ startTime > 14 } >09 (3:00 PM)</option>\r\n                    <option value='16' disabled={ startTime > 15 } >10 (4:00 PM)</option>\r\n                    <option value='17' disabled={ startTime > 16 } >11 (5:00 PM)</option>\r\n                    <option value='18' disabled={ startTime > 17 } >12 (6:00 PM)</option>\r\n                    <option value='19' disabled={ startTime > 18 } >13 (7:00 PM)</option>\r\n                    <option value='20' disabled={ startTime > 19 } >14 (8:00 PM)</option>\r\n            </select>\r\n        </div>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default memo(TimeSlot);","import { useRef, useEffect, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Components\r\nimport TimeSlot from \"./TimeSlot\";\r\n\r\n// Actions\r\nimport { setupActions } from '../../redux/slices/setupCoursesSlice';\r\n\r\nfunction CourseItem(props) {\r\n\r\n    const { id, courseName, lecturerName, courseCode, timeslots, isAnimatingDelete } = props.course;\r\n    const dispatch = useDispatch();\r\n\r\n    // There has been problems with ContentEditable on React. Here's why:\r\n    // Using <input>, it is unable to span multiple lines.\r\n    // Using <textarea>, I forgot why but is also not desired\r\n    // With ContentEditable, if we use it in React's controlled component way, it will keep resetting the caret position\r\n    // Therefore, I have no choice but to use Uncontrolled component\r\n    const courseNameRef = useRef();\r\n    const lecturerNameRef = useRef();\r\n    const courseCodeRef = useRef();\r\n\r\n    // We cannot put directly the values into the JSX as it triggers rerender and reset caret position.\r\n    // We only want to set initial value on mount, and subsequent edit is handled by DOM, only to be updated to Redux\r\n    // ? On component initial mount, set the courseName etc to the initial value. Anything after that is handled by the DOM.\r\n    useEffect(()=> {\r\n        courseNameRef.current.innerText = courseName;\r\n        lecturerNameRef.current.innerText = lecturerName;\r\n        courseCodeRef.current.innerText = courseCode;\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    // Generate Timeslots\r\n    const timeslotJSXList = [];\r\n    for (let key in timeslots) {\r\n        if (key === 'nextID') continue;\r\n        const timeslot = timeslots[key];\r\n        timeslotJSXList.push(\r\n            <TimeSlot key={timeslot.id} courseID={id} timeslot={timeslot} />\r\n        );\r\n    }\r\n\r\n\r\n    // JSX\r\n    return (\r\n    <li className={`setup__courseitem ${isAnimatingDelete? 'deleting': ''}`} data-nth={ id % 10 }>\r\n\r\n        {/* Left side: Contains meta information and control on the course */}\r\n        <div className='setup__courseitem--meta'>\r\n            {/* Course Name */}\r\n            <div role='textbox' contentEditable className='setup__courseitem--input setup__courseitem--coursename'\r\n                onInput={ ()=> dispatch(setupActions.changeCourseName({ id, newCourseName: courseNameRef.current.innerText})) } \r\n                ref={courseNameRef} suppressContentEditableWarning>\r\n            </div>\r\n            {/* Lecturer Name */}\r\n            <div role='textbox' contentEditable className='setup__courseitem--input setup__courseitem--lecturername'\r\n                onInput={ ()=> dispatch(setupActions.changeLecturerName({ id, newLecturerName: lecturerNameRef.current.innerText})) } \r\n                ref={lecturerNameRef} suppressContentEditableWarning >\r\n            </div>\r\n            {/* Course Code */}\r\n            <div role='textbox' contentEditable className='setup__courseitem--input setup__courseitem--coursecode'\r\n                onInput={ ()=> dispatch(setupActions.changeCourseCode({ id, newCourseCode: courseCodeRef.current.innerText })) } \r\n                ref={courseCodeRef} suppressContentEditableWarning >\r\n            </div>\r\n\r\n            <div className='setup__courseitem--btn-grp'>\r\n                <button type='button' aria-label='Add new time slot' title='Add new time slot' \r\n                    className='setup__courseitem--btn setup__courseitem--addtime'\r\n                    onClick={ ()=> dispatch(setupActions.addTimeslot( id )) } >\r\n                        <i className=\"far fa-clock\"></i>\r\n                </button>\r\n\r\n                <button type='button' aria-label='Discard course' title='Discard course' \r\n                    className='setup__courseitem--btn setup__courseitem--delcourse'\r\n                    onClick={ ()=> dispatch(setupActions.deleteCourse( id )) } >\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/* Right side: Contains time slots for the course */}\r\n        <ul className='setup__timeslots'>\r\n            { timeslotJSXList }\r\n        </ul>\r\n    </li>\r\n    );\r\n}\r\n\r\n// Use memoization to optimize rendering - Expensive\r\nexport default memo(CourseItem);","import { useSelector } from 'react-redux';\r\n\r\nimport CourseItem from './CourseItem';\r\n\r\n// Contain a list of Course items\r\nfunction CourseList() {\r\n    const setupCourses = useSelector((state)=> state.setupCourses);\r\n\r\n    // JSX CourseItems - Inside contains a nextID, we don't want that\r\n    const courseItems = [];\r\n    for (let key in setupCourses) {\r\n        if (key === 'nextID') continue;\r\n        const course = setupCourses[key];\r\n        courseItems.push(\r\n            <CourseItem key={course.id} course={course} />\r\n        );\r\n    }\r\n\r\n    return (\r\n    <ul className='setup__list'>\r\n        { courseItems }\r\n    </ul>\r\n    );\r\n}\r\n\r\nexport default CourseList;","import { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// Components\r\nimport CourseList from './CourseList';\r\n\r\n// Actions\r\nimport { setupActions } from '../../redux/slices/setupCoursesSlice';\r\nimport { cartActions } from '../../redux/slices/cartSlice';\r\n\r\n\r\n// The content shown on Setup Route.\r\nfunction SetupRoute() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Setup 🧾</h2>\r\n        <p className='main__desc'>\r\n            Add courses here from the cart, or manually add courses yourself.<br />\r\n            These courses will appear in your timetable. Go to <strong><Link to='/generate'>Generate</Link></strong> page to generate your timetable\r\n        </p>\r\n\r\n        <CourseList />\r\n    </div>\r\n\r\n    {/* Two buttons for loading and saving courses from/to local storage */}\r\n    <div className='setup__savingbtn-grp'>\r\n        <button type='button' aria-label='Save courses into local storage' title='Save courses into local storage' className='setup__btn setup_save-course'\r\n            onClick={ ()=> dispatch(setupActions.saveCoursesToLocalStorage()) } >\r\n                <i className=\"fas fa-save\"></i>\r\n        </button>\r\n        <button type='button' aria-label='Load saved courses from local storage' title='Load saved courses from local storage' className='setup__btn setup__load-course'\r\n            onClick={ ()=> dispatch(setupActions.loadCoursesFromLocalStorage()) } >\r\n                <i className=\"fas fa-file-upload\"></i>\r\n        </button>\r\n    </div>\r\n\r\n    {/* Two buttons for Adding courses, one adds a blank course, one opens a window for selected courses */}\r\n    <div className='setup__addbtn-grp'>\r\n        <button type='button' aria-label='Add new blank course' title='Add new blank course' className='setup__btn setup__add-blank-course'\r\n            onClick={ ()=> dispatch(setupActions.addBlankCourse()) } >\r\n                <i className=\"fas fa-sticky-note\"></i>\r\n        </button>\r\n        <button type='button' aria-label='Open shopping cart' title='Open shopping cart' className='setup__btn setup__cart'\r\n            onClick={ ()=> dispatch(cartActions.openCart()) }>\r\n                <i className=\"fas fa-shopping-cart\"></i>\r\n        </button>\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default SetupRoute;","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n/**\r\n * @typedef {import('../../logic/timetable_clash_checker').ClashReport} ClashReport\r\n */\r\n\r\n// Logic\r\nimport { checkClash } from '../../logic/timetable_clash_checker';\r\nimport { getDayOfWeekName, getTimeString, scrollMainContainerTo } from '../../logic/utils';\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Outputs a div that displays the result of clash check nicely.\r\n * @param {?ClashReport} clashCheckResult Result of clash checking.\r\n */\r\nfunction getOutputDisplay(clashCheckResult) {\r\n    if (clashCheckResult === null) return null;\r\n    if (!clashCheckResult.isClashing)\r\n        return (\r\n        <div className='clashcheck__output'>\r\n            <strong className='clashcheck__output__title'>✅ No Clash Found ✅</strong>\r\n        </div>\r\n        );\r\n\r\n    const [ course1, course2 ] = clashCheckResult.clashDetails;\r\n\r\n    return (\r\n    <div className='clashcheck__output'>\r\n        <strong className='clashcheck__output__title'>⛔️ Clash Detected ⛔️</strong>\r\n        <div className='clashcheck__output__detail'>\r\n            Clash occur between\r\n            <strong className='clashcheck__output__detail--info'>\r\n                {`\"${course1.courseName}\" on ${getDayOfWeekName(course1.dayOfWeek)}`}\r\n            </strong>\r\n            and\r\n            <strong className='clashcheck__output__detail--info'>\r\n                {`\"${course2.courseName}\" on ${getDayOfWeekName(course2.dayOfWeek)}`}\r\n            </strong>\r\n            at\r\n            <strong className='clashcheck__output__detail--info'>\r\n                { `${getTimeString(course1.time)} - ${getTimeString(course1.time + 1)}` }\r\n            </strong>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n// Performs checking whether there is a clash in the timetable. Shows balloon messages, or set state to 1 - Scrolling to\r\n// Configure state.\r\nfunction performClashCheck( courses, setClashCheckResult, setState, dispatch ) {\r\n    const res = checkClash( courses );\r\n    setClashCheckResult(res);\r\n    if (!res.isClashing) {\r\n        setState(1);\r\n        scrollMainContainerTo('.configure');\r\n    }\r\n    else {\r\n        dispatch(setTypeAndMessage({ type:'danger', message: 'There is a clash in your timetable. Go back to Setup page to fix the clash.'} ));\r\n        dispatch(showBalloon());\r\n    }\r\n}\r\n\r\n\r\n// ? Step 1 - Check if there is any clashes in the timetable.\r\n// ? If there is, then display nicely to inform the user.\r\nfunction ClashCheckState(props) {\r\n    const setupCourses = useSelector((state)=> state.setupCourses);\r\n    const { setState } = props;\r\n    const [clashCheckResult, setClashCheckResult] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <section className='generate__section clashcheck'>\r\n        <h4 className='generate__title'>Step 1: Clash Check 💣</h4>\r\n        <p className='generate__desc'>Check your timetable for any clashes</p>\r\n\r\n        <button className='clashcheck__btn' type='button' aria-label='Trigger check the timetable for clashes'\r\n            label='Trigger check the timetable for clashes' disabled={clashCheckResult !== null}\r\n            onClick={ ()=> performClashCheck(setupCourses, setClashCheckResult, setState, dispatch) } >\r\n                Check Clash\r\n        </button>\r\n\r\n        { getOutputDisplay(clashCheckResult) }\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default ClashCheckState;","// ?? Logic used to check whether a clash occurred or not.\r\n// ?? Pass in the timetable in the form same as in the state of setupCoursesSlice.js\r\n\r\n\r\n/**\r\n * @typedef {import('../redux/slices/setupCoursesSlice').SetupCoursesSliceState} SetupCoursesSliceState\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} TimeslotReserver\r\n * A 'reserver' used to reserve a 1-hour timeframe in the virtual timetable when checking for clashes\r\n * \r\n * @property {string} courseName The name of the course reserving this slot\r\n * @property {number} dayOfWeek Integer in range [0-6]. 0 is Sunday, 1 is Monday etc.\r\n * @property {number} time Integer in range [0-23]. Correspond to 24 hour format. The beginning time in which this course reserves\r\n */\r\n\r\n/**\r\n * @typedef {Object} ClashReport\r\n * An object reporting whether clash had occurred in the timetable.\r\n * \r\n * @property {boolean} isClashing Boolean. `true` if a clash had occurred. Detail of clash goes into `clashDetails`\r\n * @property {?TimeslotReserver[]} clashDetails If clashing occurred, this is an array of size 2 containing {@link TimeslotReserver}\r\n *      which is the 2 courses that clash against each other.\r\n */\r\n\r\n\r\n\r\n/**\r\n * Checks whether the timetable has clashing courses\r\n * @param {SetupCoursesSliceState} setupCourses Redux state as defined in `src/components/redux/slices/setupCoursesSlice.js`. See {@link SetupCoursesSliceState}\r\n * @return {ClashReport} An object containing a boolean `isClashing`. If `true`, also contains `clashedCourses` which is an array\r\n *                  containing details of first clashing course detected.\r\n */\r\nfunction checkClash(setupCourses) {\r\n    // Step 1 - Initialize an 2D array of size 7 x 23. Rows represent dayOfWeek, Cols represent 1 hour timeframe.\r\n    // First row is Sunday, Second is Monday...\r\n    // First column is 00:00 to 01:00, second column is 01:00 to 02:00...\r\n    let timetable = new Array(7).fill(null);\r\n    timetable = timetable.map(()=> new Array(23).fill(null));\r\n\r\n    // Step 2 - Iterate through the courses and fill in timetable.\r\n    // If clash occurs, already can return the result\r\n    for (let coursekey in setupCourses) {\r\n        if (coursekey === 'nextID') continue;\r\n        const course = setupCourses[coursekey];\r\n        \r\n        for (let timekey in course.timeslots) {\r\n            if (timekey === 'nextID') continue;\r\n            const timeslot = course.timeslots[timekey];\r\n\r\n            for (let time = timeslot.startTime; time < timeslot.endTime; ++time) {\r\n\r\n                // Construct a timeslotInfo object\r\n                /** @type TimeslotReserver */\r\n                const timeslotReserver = {\r\n                    courseName: course.courseName,\r\n                    dayOfWeek: timeslot.dayOfWeek,\r\n                    time\r\n                };\r\n\r\n                // If the timetable slot is already occupied, report clash immediately\r\n                if ( timetable[timeslot.dayOfWeek][time] )\r\n                    return {\r\n                        isClashing: true,\r\n                        clashDetails: [timeslotReserver, timetable[timeslot.dayOfWeek][time] ]\r\n                    };\r\n                // Otherwise we can reserve this slot in timetable\r\n                timetable[timeslot.dayOfWeek][time] = timeslotReserver;\r\n            }\r\n        }\r\n    }\r\n\r\n    // So far no problemo. Report no clashes\r\n    return { isClashing: false, clashDetails: null };\r\n}\r\n\r\n\r\nexport { checkClash };","import { createSlice } from '@reduxjs/toolkit';\r\nimport FontFaceObserver from 'fontfaceobserver';\r\n\r\n\r\n/**\r\n * @typedef {Object} CustomCourseColors\r\n * @property {string} id\r\n * @property {string} name Course name\r\n * @property {string} fontColor Font color for this course\r\n * @property {string} backgroundColor Background color for this course\r\n */\r\n\r\n/**\r\n * The custom configuration object.\r\n * @typedef {Object} CustomConfig\r\n * @property {boolean} isCustom Boolean, indicates whether the user chooses custom theme or not. Decides whether <CustomConfiguration /> is shown\r\n *      or not\r\n * @property {string} backgroundColor Base color of the timetable\r\n * @property {string} fontFamily Font name to be used in the timetable\r\n * @property {string} labelGridColor The background color for the topleft most grid - Label grid\r\n * @property {string} labelGridFontColor The font color for the topleft most grid - Label grid\r\n * @property {string} timeGridColor The background color for the day of week and time grids\r\n * @property {string} timeGridFontColor The font color for the day of week and time grids\r\n * @property {string} evenRowColor The background color for every even rows\r\n * @property {string} oddRowColor The background color for every odd rows\r\n * @property {Object.<number, CustomCourseColors>} courseColors An object mapping id of courses to {@link CustomCourseColors}\r\n *      deciding what color they'll be drawn.\r\n * @property {{ fontColor: string, backgroundColor: string }} defaultCustomCourseColors An object containing default \r\n *      background color / font color to use if the course is not in `courseColors`\r\n */\r\n\r\n\r\n// Properties\r\nconst defaultCustomCourseColors = {\r\n    fontColor: \"#ffffff\",\r\n    backgroundColor: \"#3498db\"\r\n};\r\n\r\n\r\n// ! Fonts are added in `main.scss`\r\n// List of allowed font families. Will be shown as possible options in dropdown list\r\n// during configuration\r\nexport const allowedFontFamilies = [\r\n    \"Roboto\",\r\n    \"Orbitron\",\r\n    \"Grandstander\",\r\n    \"Marvel\",\r\n    \"Cantora One\",\r\n];\r\n\r\n// ? Loads in the webfonts - Initially the font are not loaded, until it is used in HTML\r\n// ? DOM elements will update automatically once loaded, but not for canvas.\r\nallowedFontFamilies.forEach((font)=> {\r\n    (new FontFaceObserver(font)).load().then(()=> {\r\n        console.log(`Loaded webfont ${font}`);\r\n    }).catch((err)=> {\r\n        console.log(`Failed loading webfont ${font}`);\r\n    });\r\n})\r\n\r\n\r\n\r\n\r\n// Slice\r\nexport const configurationSlice = createSlice({\r\n    name: 'config',\r\n    initialState: {\r\n        general: {\r\n            theme: 'default',\r\n            orientation: 'horizontal',\r\n            weekends: 'fri/sat',\r\n            timeframeBegin: 8,\r\n            timeframeEnd: 17,\r\n        },\r\n        grid: {\r\n            gridWidth: 200,\r\n            gridHeight: 150,\r\n            gap: 5,\r\n            courseNameFontSize: 25,\r\n            lecturerNameFontSize: 15,\r\n            courseCodeFontSize: 13,\r\n        },\r\n        custom: {\r\n            isCustom: false,\r\n            backgroundColor: '#ffffff',\r\n            fontFamily: 'Roboto',\r\n            labelGridColor: '#7f8082',\r\n            labelGridFontColor: \"#ffffff\", \r\n            timeGridColor: '#70ad46',\r\n            timeGridFontColor: \"#ffffff\",\r\n            evenRowColor: '#c6e0b3',\r\n            oddRowColor: '#a9d08f',\r\n            courseColors: {},\r\n            // The default Custom Course Color used if not set\r\n            defaultCustomCourseColors,\r\n        },\r\n    },\r\n    reducers: {\r\n        // General Config\r\n        setTheme: (state, action)=> {\r\n            state.general.theme = action.payload;\r\n            state.custom.isCustom = (action.payload === 'custom');\r\n        },\r\n        setOrientation: (state, action)=> {\r\n            state.general.orientation = action.payload;\r\n        },\r\n        setWeekends: (state, action)=> {\r\n            state.general.weekends = action.payload;\r\n        },\r\n        setTimeframeBegin: (state, action)=> {\r\n            state.general.timeframeBegin = Number(action.payload);\r\n            state.general.timeframeEnd = Math.max( Number(action.payload) + 1, state.general.timeframeEnd );\r\n        },\r\n        setTimeframeEnd: (state, action)=> {\r\n            state.general.timeframeEnd = Number(action.payload);\r\n        },\r\n        \r\n        // Grid Config\r\n        setGridWidth: (state, action)=> {\r\n            state.grid.gridWidth = Math.max(0, Number(action.payload) );\r\n        },\r\n        setGridHeight: (state, action)=> {\r\n            state.grid.gridHeight = Math.max(0, Number(action.payload) );\r\n        },\r\n        setGap: (state, action)=> {\r\n            state.grid.gap = Math.max(0, Number(action.payload) );\r\n        },\r\n        setCourseNameFontSize: (state, action)=> {\r\n            state.grid.courseNameFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n        setLecturerNameFontSize: (state, action)=> {\r\n            state.grid.lecturerNameFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n        setCourseCodeFontSize: (state, action)=> {\r\n            state.grid.courseCodeFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n\r\n        // Custom Configuration\r\n        // action.payload contains an object with the properties to change - AKA will overwrite properties while keeping\r\n        // others unchanged\r\n        modifyCustomConfiguration: (state, action)=> {\r\n            state.custom = Object.assign({}, state.custom, action.payload);\r\n        },\r\n        // Modifying `courseColors` with `modifyCustomConfiguration` above is too messy, use these instead \r\n        changeCourseBackgroundColor: (state, action)=> {\r\n            const {id, color} = action.payload;\r\n            if (!state.custom.courseColors[id]) return;\r\n            state.custom.courseColors[id].backgroundColor = color;\r\n        },\r\n        changeCourseFontColor: (state, action)=> {\r\n            const {id, color} = action.payload;\r\n            if (!state.custom.courseColors[id]) return;\r\n            state.custom.courseColors[id].fontColor = color;\r\n        },\r\n    },\r\n});\r\n\r\nexport const configurationActions = { \r\n    ...configurationSlice.actions,  \r\n};\r\n\r\nexport default configurationSlice.reducer;","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { configurationActions } from '../../redux/slices/configurationSlice';\r\n\r\n\r\nfunction GeneralConfiguration() {\r\n\r\n    const {\r\n        theme, orientation, weekends, timeframeBegin, timeframeEnd\r\n    } = useSelector((state)=> state.config.general);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n    <section className='configure__section'>\r\n        <h4 className='configure__grptitle'>General Configurations</h4>\r\n        <ul className='configure__grp'>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Theme 🎨</span> \r\n                <select className='configure__iteminput' aria-label='Select the theme for the timetable generated'\r\n                    value={theme} onChange={(e)=> dispatch(configurationActions.setTheme(e.target.value)) }>\r\n                        <option value='default'>Default</option>\r\n                        <option value='futuristic'>Futuristic</option>\r\n                        <option value='cuteness'>Cuteness</option>\r\n                        <option value='spidey'>Spidey</option>\r\n                        <option value='nature'>Nature</option>\r\n                        <option value='custom'>Custom</option>\r\n                </select>\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Orientation 🔍</span>\r\n                <select className='configure__iteminput' aria-label='Select timetable orientation'\r\n                    title='Select timetable orientation'\r\n                    value={orientation} onChange={(e)=> dispatch(configurationActions.setOrientation(e.target.value)) }>\r\n                        <option value='horizontal'>Horizontal</option>\r\n                        <option value='vertical'>Vertical</option>\r\n                </select>\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Weekends 📆</span>\r\n                <select className='configure__iteminput' aria-label='Select to exclude/include the weekends on timetable'\r\n                    title='Select to exclude/include the weekends on timetable'\r\n                    value={weekends} onChange={(e)=> dispatch(configurationActions.setWeekends(e.target.value)) }>\r\n                        <option value='fri/sat'>Hide Fri/Sat</option>\r\n                        <option value='sat/sun'>Hide Sat/Sun</option>\r\n                        <option value='all'>i want all</option>\r\n                </select>\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Visible Timeframe ⌚️</span>\r\n                <select className='configure__iteminput' aria-label='Select the starting timeframe for the timetable generated'\r\n                    title='Select the starting timeframe for the timetable generated'\r\n                    value={timeframeBegin} onChange={(e)=> dispatch(configurationActions.setTimeframeBegin(e.target.value)) }>\r\n                        <option value='8'>02 (8:00 AM)</option>\r\n                        <option value='9'>03 (9:00 AM)</option>\r\n                        <option value='10'>04 (10:00 AM)</option>\r\n                        <option value='11'>05 (11:00 AM)</option>\r\n                        <option value='12'>06 (12:00 AM)</option>\r\n                        <option value='13'>07 (1:00 PM)</option>\r\n                        <option value='14'>08 (2:00 PM)</option>\r\n                        <option value='15'>09 (3:00 PM)</option>\r\n                        <option value='16'>10 (4:00 PM)</option>\r\n                        <option value='17'>11 (5:00 PM)</option>\r\n                        <option value='18'>12 (6:00 PM)</option>\r\n                        <option value='19'>13 (7:00 PM)</option>\r\n                </select>\r\n                to\r\n                <select className='configure__iteminput' aria-label='Select the ending timeframe for the timetable generated'\r\n                    title='Select the ending timeframe for the timetable generated'\r\n                    value={timeframeEnd} onChange={(e)=> dispatch(configurationActions.setTimeframeEnd(e.target.value)) }>\r\n                        <option value='9' disabled={ timeframeBegin > 8 } >03 (9:00 AM)</option>\r\n                        <option value='10' disabled={ timeframeBegin > 9 } >04 (10:00 AM)</option>\r\n                        <option value='11' disabled={ timeframeBegin > 10 } >05 (11:00 AM)</option>\r\n                        <option value='12' disabled={ timeframeBegin > 11 } >06 (12:00 AM)</option>\r\n                        <option value='13' disabled={ timeframeBegin > 12 } >07 (1:00 PM)</option>\r\n                        <option value='14' disabled={ timeframeBegin > 13 } >08 (2:00 PM)</option>\r\n                        <option value='15' disabled={ timeframeBegin > 14 } >09 (3:00 PM)</option>\r\n                        <option value='16' disabled={ timeframeBegin > 15 } >10 (4:00 PM)</option>\r\n                        <option value='17' disabled={ timeframeBegin > 16 } >11 (5:00 PM)</option>\r\n                        <option value='18' disabled={ timeframeBegin > 17 } >12 (6:00 PM)</option>\r\n                        <option value='19' disabled={ timeframeBegin > 18 } >13 (7:00 PM)</option>\r\n                        <option value='20' disabled={ timeframeBegin > 19 } >14 (8:00 PM)</option>\r\n                </select>\r\n            </li>\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default GeneralConfiguration;","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { configurationActions } from '../../redux/slices/configurationSlice';\r\n\r\n\r\nfunction GridConfiguration() {\r\n\r\n    const {\r\n        gridWidth, gridHeight, courseNameFontSize, lecturerNameFontSize, courseCodeFontSize, gap\r\n    } = useSelector((state)=> state.config.grid);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n    <section className='configure__section'>\r\n        <h4 className='configure__grptitle'>Grid Configurations 📐</h4>\r\n        <ul className='configure__grp'>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Grid Width</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the width for each grid in timetable'\r\n                    title='Select the width for each grid in timetable'\r\n                    value={gridWidth} onChange={(e)=> dispatch(configurationActions.setGridWidth(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Grid Height</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the height for each grid in timetable'\r\n                    title='Select the height for each grid in timetable'\r\n                    value={gridHeight} onChange={(e)=> dispatch(configurationActions.setGridHeight(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Grid Gap</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the gap size (spacing between grids) in timetable'\r\n                    title='Select the gap size (spacing between grids) in timetable'\r\n                    value={gap} onChange={(e)=> dispatch(configurationActions.setGap(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Course Name Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for course names in timetable'\r\n                    title='Select the font size for course names in timetable'\r\n                    value={courseNameFontSize} onChange={(e)=> dispatch(configurationActions.setCourseNameFontSize(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Lecturer Name Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for lecturer name in timetable'\r\n                    title='Select the font size for lecturer name in timetable'\r\n                    value={lecturerNameFontSize} onChange={(e)=> dispatch(configurationActions.setLecturerNameFontSize(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Course Code Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for course code in timetable'\r\n                    title='Select the font size for course code in timetable'\r\n                    value={courseCodeFontSize} onChange={(e)=> dispatch(configurationActions.setCourseCodeFontSize(e.target.value))} />\r\n            </li>\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default GridConfiguration;","\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { configurationActions, allowedFontFamilies } from '../../redux/slices/configurationSlice';\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomCourseColors} CustomCourseColors\r\n */\r\n\r\n\r\nfunction CustomConfiguration() {\r\n\r\n    /** @type CustomConfig */\r\n    const customConfig = useSelector((state)=> state.config.custom);\r\n    const courses = useSelector((state)=> state.setupCourses);\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const defConfigCourseColors = customConfig.defaultCustomCourseColors;\r\n    // When component mounts / course list in Setup page updates, we need to update the customCourseColors\r\n    useEffect(()=> {\r\n        const configCourseColors = {};\r\n\r\n        Object.values(courses).forEach((course)=> {\r\n            if ( typeof(course) !== 'object' ) return;  // SKip the 'nextID' property\r\n            configCourseColors[ course.id ] = {\r\n                id: course.id,\r\n                name: course.courseName,\r\n                ...defConfigCourseColors\r\n            };\r\n        });\r\n\r\n        dispatch(configurationActions.modifyCustomConfiguration({ courseColors: configCourseColors }));\r\n    }, [dispatch, courses, defConfigCourseColors]);\r\n\r\n\r\n    // The user didn't choose custom as theme option. Return nothing.\r\n    if (!customConfig.isCustom) return <Fragment></Fragment>;\r\n\r\n\r\n    // For each of the courses, provide with option to change background color and font color\r\n    const courseColorsListJSX = Object.values(customConfig.courseColors).map((course)=> {\r\n        return (\r\n        <li key={course.id} className='configure__item'>\r\n            <strong className='configure__itemtitle configure__coursename'>{ course.name }</strong>\r\n\r\n            {/* Background Color */}\r\n            <small className='configure__itemtitle'>Background Color</small>\r\n            <input type='color' className='configure__iteminput' aria-label='Select background color' title='Select background color' \r\n                value={ course.backgroundColor } \r\n                onChange={(e)=> dispatch(configurationActions.changeCourseBackgroundColor({\r\n                    id: course.id, color: e.target.value\r\n                }))} />\r\n\r\n            {/* Font Color */}\r\n            <small className='configure__itemtitle'>Font Color</small>\r\n            <input type='color' className='configure__iteminput' aria-label='Select font color' title='Select font color' \r\n                value={ course.fontColor } \r\n                onChange={(e)=> dispatch(configurationActions.changeCourseFontColor({\r\n                    id: course.id, color: e.target.value\r\n                }))} />\r\n        </li>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n    <section className='configure__section'>\r\n        <h4 className='configure__grptitle'>Customization 🧐</h4>\r\n\r\n        <img alt='guide to customization timetable' src='/img/custom_guide.png' className='configure__guidepic'/>\r\n\r\n        <ul className='configure__grp'>\r\n\r\n            {/* Background color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Background Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select background color' title='Select background color' \r\n                    value={customConfig.backgroundColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        backgroundColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Font Family */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Font</span> \r\n                <select className='configure__iteminput' aria-label='Select font style for timetable' title='Select font style for timetable'\r\n                    value={customConfig.fontFamily} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        fontFamily: e.target.value\r\n                    }))} >\r\n                        { allowedFontFamilies.map(e=> <option key={e} value={e}>{e}</option>) }\r\n                </select>\r\n            </li>\r\n\r\n            {/* Label grid color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Label Grid Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Label Grid Color' title='Select Label Grid Color' \r\n                    value={customConfig.labelGridColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        labelGridColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Time Grid Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Time Grid Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Timegrid Color' title='Select Timegrid Color' \r\n                    value={customConfig.timeGridColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        timeGridColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Label Grid Font Color*/}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Label Grid Font Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Label Grid Font Color' title='Select Label Grid Font Color' \r\n                    value={customConfig.labelGridFontColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        labelGridFontColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Time Grid Font Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Time Grid Font Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Timegrid font color 2' title='Select Timegrid font color 2' \r\n                    value={customConfig.timeGridFontColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        timeGridFontColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Odd row Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Odd Row Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select odd row colors' title='Select odd row colors'\r\n                    value={customConfig.oddRowColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        oddRowColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Even row Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Even Row Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select even row colors' title='Select even row colors'\r\n                    value={customConfig.evenRowColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        evenRowColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n            \r\n        </ul>\r\n\r\n        {/* Provide user a way to choose their own color */}\r\n        <ul className='configure__grp'>\r\n            { courseColorsListJSX }\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default CustomConfiguration;","\r\nimport GeneralConfiguration from './GeneralConfiguration';\r\nimport GridConfiguration from './GridConfiguration';\r\nimport CustomConfiguration from './CustomConfiguration';\r\n\r\nimport { scrollMainContainerTo } from '../../logic/utils';\r\n\r\n\r\n\r\n// Simply set state to 2, and scrolls to the next container: creation\r\nfunction proceedToNextState(setState) {\r\n    setState(2);\r\n    scrollMainContainerTo('.creation');\r\n}\r\n\r\n\r\n\r\nfunction ConfigureState(props) {\r\n    const { setState } = props;\r\n    \r\n    return (\r\n    <section className='generate__section configure'>\r\n        <h4 className='generate__title'>Step 2: Configure Timetable ⚙️</h4>\r\n        <p className='generate__desc'>Try changing the theme! or perhaps be artistic and set everything yourself?</p>\r\n\r\n        {/* For lazy people that just want a timetable */}\r\n        <button type='button' aria-label='Proceed to Step 3 - Generate Timetable' title='Proceed to Step 3 - Create Timetable'\r\n            className='configure__btn configure__btnskip' onClick={()=> proceedToNextState(setState)}>\r\n                Just give me the timetable! 😡\r\n        </button>\r\n\r\n\r\n        {/* General Configurations */}\r\n        <GeneralConfiguration />\r\n\r\n        {/* Grid Configuration */}\r\n        <GridConfiguration />\r\n\r\n        {/* Custom Configuration */}\r\n        <CustomConfiguration />\r\n\r\n        {/* Previewer */}\r\n\r\n        {/* Go to step 3 */}\r\n        <button type='button' aria-label='Proceed to Step 3 - Generate Timetable' title='Proceed to Step 3 - Create Timetable'\r\n            className='configure__btn configure__btnproceed' onClick={()=> proceedToNextState(setState)}>\r\n                Proceed 💪\r\n        </button>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default ConfigureState;","/**\r\n * ! To add a new theme:\r\n * !    1. Import font in `main.scss`\r\n * !    2. In `configurationSlice.js`, include the font as available option in custom configuration\r\n * !    3. Write up the theme mapping here below\r\n */\r\n/**\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n */\r\n\r\n\r\n/**\r\n * An object containing informations on how the timetable shall be drawn. This object is usually related to a specific theme.\r\n * Should resemble the same properties in reduxState.config.custom, so to maintain maximum compatibility between each other.\r\n * @typedef {Object} Theme\r\n * @property {string} theme Name of the theme. Easier debug perhaps?\r\n * @property {string} backgroundColor Base color of the timetable\r\n * @property {string} fontFamily Font name to be used in the timetable\r\n * @property {string} labelGridColor The background color for the topleft most grid - Label grid\r\n * @property {string} labelGridFontColor The font color for the topleft most grid - Label grid\r\n * @property {string} timeGridColor The background color for the day of week and time grids\r\n * @property {string} timeGridFontColor The font color for the day of week and time grids\r\n * @property {string} evenRowColor The background color for every even rows\r\n * @property {string} oddRowColor The background color for every odd rows\r\n * @property {string[]} courseBackgroundColors A list of colors that will be used as background of the courses\r\n * @property {string[]} courseFontColors A list of colors that will be used as font color of the course text\r\n * \r\n */\r\n\r\n\r\n/** An object that map theme strings to {@link Theme} objects. Used in step 1 - Get timetable properties from\r\n *  config file\r\n */\r\n/** @type {Object.<string, Theme>} */\r\nconst themeMapper = {\r\n    // Default Theme\r\n    'default': {\r\n        theme: 'default',\r\n        backgroundColor : '#ffffff',\r\n        labelGridColor : '#7f8082',\r\n        timeGridColor : '#70ad46',\r\n        oddRowColor : '#c6e0b3',\r\n        evenRowColor : '#a9d08f',\r\n        fontFamily: 'Roboto',\r\n        labelGridFontColor: '#ffffff',\r\n        timeGridFontColor: '#ffffff',\r\n        courseBackgroundColors: [\r\n            '#3498db',\r\n            '#6ab04c',\r\n            '#e74c3c',\r\n            '#9b59b6',\r\n            '#34495e',\r\n            '#f1c40f',\r\n            '#3a40b6',\r\n            '#2ecc71',\r\n            '#e67e22',\r\n            '#686de0'\r\n        ],\r\n        courseFontColors: [\r\n            '#ffffff'\r\n        ]\r\n    },\r\n\r\n    'futuristic': {\r\n        theme: 'futuristic',\r\n        backgroundColor : '#2ecc71',\r\n        labelGridColor : '#000000',\r\n        timeGridColor : '#000000',\r\n        oddRowColor : '#1b242e',\r\n        evenRowColor : '#212d3b',\r\n        fontFamily: 'Orbitron',\r\n        labelGridFontColor: '#29e679',\r\n        timeGridFontColor: '#29e679',\r\n        courseBackgroundColors : [\r\n            '#000000'\r\n        ],\r\n        courseFontColors: [\r\n            '#29e679'\r\n        ]\r\n    }, \r\n\r\n    'cuteness': {\r\n        theme: 'cuteness',\r\n        backgroundColor : '#ffffff',\r\n        labelGridColor : '#ff7199',\r\n        timeGridColor : '#ff7199',\r\n        oddRowColor : '#ffbada',\r\n        evenRowColor : '#ffe2ea',\r\n        fontFamily: 'Grandstander',\r\n        labelGridFontColor: '#ffffff',\r\n        timeGridFontColor : '#ffffff',\r\n        courseBackgroundColors : [\r\n            '#ff90c3'\r\n        ],\r\n        courseFontColors: [\r\n            '#ffffff'\r\n        ]\r\n    },\r\n\r\n    'spidey': {\r\n        theme: 'spidey',\r\n        backgroundColor : '#cccee3',\r\n        labelGridColor : '#0861a3',\r\n        timeGridColor : '#0268d7',\r\n        oddRowColor : '#ca141d',\r\n        evenRowColor : '#b31219',\r\n        fontFamily: 'Marvel',\r\n        labelGridFontColor: '#ffffff',\r\n        timeGridFontColor : '#ffffff',\r\n        courseBackgroundColors : [\r\n            '#8f0505'\r\n        ],\r\n        courseFontColors: [\r\n            '#ffffff'\r\n        ]\r\n    },\r\n\r\n    'nature': {\r\n        theme: 'nature',\r\n        backgroundColor : '#392c1d',\r\n        labelGridColor : '#55422b',\r\n        timeGridColor : '#907a48',\r\n        oddRowColor : '#4f6336',\r\n        evenRowColor : '#4b6b3c',\r\n        fontFamily: 'Cantora One',\r\n        labelGridFontColor: '#e6deb9',\r\n        timeGridFontColor : '#3b2e1e',\r\n        courseBackgroundColors : [\r\n            '#d4bf88'\r\n        ],\r\n        courseFontColors: [\r\n            '#3b2e1e'\r\n        ]\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @param {Object} config The state (slice) of `configurationSlice.js`. Used to map themes\r\n * @returns {(Theme | CustomConfig)} The theme details to be used to draw the timetable.\r\n */\r\nexport function mapToTheme(config) {\r\n    if (config.general.theme === 'custom')\r\n        return config.custom;\r\n    return themeMapper[config.general.theme];\r\n}","/**\r\n * @typedef {import('../../redux/slices/setupCoursesSlice').SetupCoursesSliceState} SetupCoursesSliceState\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n */\r\n\r\n\r\n\r\n/**\r\n * @typedef {Object} TimeslotProperty\r\n * @property {string} name Course name\r\n * @property {string} lecturer Lecturer name\r\n * @property {string} code Course code\r\n * @property {number} dayOfWeek Day of week - Integer [0-6]\r\n * @property {number} startTime Starting time - Integer [0-23] \r\n * @property {number} endTime Ending time - Integer [0-23]\r\n * @property {string} theme The name of theme applied\r\n * @property {string} backgroundColor Background color of the grid of said timeslot\r\n * @property {string} fontColor Font color of the grid of said timeslot\r\n */\r\n\r\n\r\n/**\r\n * @param {SetupCoursesSliceState} courses The courses straight from the redux state.\r\n * @param {(Theme | CustomConfig)} theme The {@link Theme} or {@link CustomConfig} object returned from \r\n *      `mapToTheme` function (Step 1). Used to deduce the rendering information in the courses\r\n *      (IE: Background color and font color)\r\n * @returns {TimeslotProperty[]} An array of {@link TimeslotProperty} ready to be pass into the timeslot drawer\r\n */\r\nexport function reduceCoursesToTimeslotArray(courses, theme) {\r\n    if (theme.isCustom)\r\n        return customReduceCourseToTimeslotArrayStrategy(courses, theme);\r\n    return presetReduceCourseToTimeslotArrayStrategy(courses, theme);\r\n}\r\n\r\n\r\n\r\n/**\r\n * Strategy pattern 1 - Custom Theme - To get background color and font color straight from `theme` \r\n * which is {@link CustomConfig} itself.\r\n * \r\n * @param {SetupCoursesSliceState} courses \r\n * @param {CustomConfig} customConfig \r\n * @returns {TimeslotProperty[]} An array of {@link TimeslotProperty} ready to be pass into the timeslot drawer\r\n */\r\nfunction customReduceCourseToTimeslotArrayStrategy(courses, customConfig) {\r\n    /** @type {TimeslotProperty[]} */\r\n    const res = [];\r\n\r\n    // Nest iteration to obtain every timeslot object\r\n    for (let courseKey in courses) {\r\n        if (isNaN(courseKey)) continue;\r\n        const course = courses[courseKey];\r\n        const { id, courseName, lecturerName, courseCode } = course;\r\n\r\n        // * Obtains the course's custom set background color and font color from customConfig.courseColors\r\n        // * If the said id is not found from customConfig (Which shouldn't even happen, fallback to defaultCustomCourseColors)\r\n        const { fontColor, backgroundColor } = customConfig.courseColors[id] || customConfig.defaultCustomCourseColors;\r\n        \r\n        for (let timeKey in course.timeslots) {\r\n            if (isNaN(timeKey)) continue;\r\n            const time = course.timeslots[timeKey];\r\n            const { dayOfWeek, startTime, endTime } = time;\r\n\r\n            res.push({\r\n                name: courseName,\r\n                lecturer: lecturerName,\r\n                code: courseCode,\r\n                dayOfWeek,\r\n                startTime,\r\n                endTime,\r\n                theme: 'custom',\r\n                backgroundColor,\r\n                fontColor,\r\n            });\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Strategy pattern 2 - Preset Theme - To get background color and font color from\r\n * {@link Theme}'s `courseBackgroundColors` and `courseFontColors` array. Involves counting\r\n * \r\n * \r\n * @param {SetupCoursesSliceState} courses \r\n * @param {Theme} theme \r\n * @returns {TimeslotProperty[]} An array of {@link TimeslotProperty} ready to be pass into the timeslot drawer\r\n */\r\nfunction presetReduceCourseToTimeslotArrayStrategy(courses, theme) {\r\n    /** @type {TimeslotProperty[]} */\r\n    const res = [];\r\n    // Counts the timeslot\r\n    let counter = 0;        \r\n    const { theme: themeName, courseBackgroundColors, courseFontColors } = theme;\r\n\r\n    // Nest iteration to obtain every timeslot object\r\n    for (let courseKey in courses) {\r\n        if (isNaN(courseKey)) continue;\r\n        const course = courses[courseKey];\r\n        const { courseName, lecturerName, courseCode } = course;\r\n\r\n        for (let timeKey in course.timeslots) {\r\n            if (isNaN(timeKey)) continue;\r\n            const time = course.timeslots[timeKey];\r\n            const { dayOfWeek, startTime, endTime } = time;\r\n\r\n            res.push({\r\n                name: courseName,\r\n                lecturer: lecturerName,\r\n                code: courseCode,\r\n                dayOfWeek,\r\n                startTime,\r\n                endTime,\r\n                theme: themeName,\r\n                backgroundColor: courseBackgroundColors[ counter % courseBackgroundColors.length ], \r\n                fontColor: courseFontColors[ counter % courseFontColors.length ],\r\n            });\r\n        }\r\n        ++counter;  // Don't forget to update counter.\r\n    }\r\n    return res;\r\n}","import Konva from \"konva\";\r\n\r\n/**\r\n * \r\n * @param {Konva.Layer} layer The konva layer to append a rectangle onto\r\n * @param {Object} options options to initialize the rectangle. Eg: `fill`, `width`, `x`\r\n */\r\nexport function appendRect(layer, options) {\r\n    layer.add( new Konva.Rect({\r\n        preventDefault: false,          // ? Allow mobile device scrolling\r\n        ...options,\r\n    }));\r\n}\r\n\r\n\r\nexport function appendText(layer, options) {\r\n    layer.add( new Konva.Text({\r\n        preventDefault: false,          // ? Allow mobile device scrolling\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        ...options,\r\n    }));\r\n}","import Konva from 'konva';\r\nimport { appendRect } from './KonvaUtils'\r\n\r\n/**\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n */\r\n\r\n// ! Every shapes added by Konva should have preventDefault: false - To allow mobile scrolling. Otherwise\r\n// ! user will be unable to scroll by touch\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap` and most importantly `orientation`.\r\n * @param {Theme} theme Theme object to refer `oddRowColor`, `evenRowColor` and `backgroundColor`\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nexport function getBackgroundLayer(config, theme) {    \r\n    const { orientation } = config.general;\r\n\r\n    if (orientation === 'horizontal') \r\n        return getHorizontalBackgroundLayer(config, theme);\r\n    return getVerticalBackgroundLayer(config, theme);\r\n}\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap` and most importantly `orientation`.\r\n * @param {Theme} theme Theme object to refer `oddRowColor`, `evenRowColor` and `backgroundColor`\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nfunction getVerticalBackgroundLayer(config, theme) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { oddRowColor, evenRowColor, backgroundColor } = theme;\r\n    const width = 8 * gridWidth + 9 * gap;\r\n    const height = 25 * gridHeight + 26 * gap;\r\n\r\n    const layer = new Konva.Layer();\r\n\r\n    appendRect(layer, {\r\n        fill: backgroundColor,\r\n        width, height\r\n    });\r\n\r\n    // 24 rows\r\n    for (let i = 0; i < 25; ++i) {\r\n        // 8 columns\r\n        for (let j = 0; j < 8; ++j) {\r\n            appendRect(layer, {\r\n                fill: (j & 1)? oddRowColor: evenRowColor,\r\n                width: gridWidth, \r\n                height: gridHeight,\r\n                x: gap + ( gridWidth + gap ) * j,\r\n                y: gap + ( gridHeight + gap ) * i,\r\n            });\r\n        }\r\n    }\r\n    return layer;\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap` and most importantly `orientation`.\r\n * @param {Theme} theme Theme object to refer `oddRowColor`, `evenRowColor` and `backgroundColor`\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\n function getHorizontalBackgroundLayer(config, theme) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { oddRowColor, evenRowColor, backgroundColor } = theme;\r\n    const width = 25 * gridWidth + 26 * gap;\r\n    const height = 8 * gridHeight + 9 * gap;\r\n\r\n    const layer = new Konva.Layer();\r\n\r\n    // Background\r\n    appendRect( layer, {\r\n        fill: backgroundColor,\r\n        width, height,\r\n    });\r\n\r\n    // 8 rows\r\n    for (let i = 0; i < 8; ++i) {\r\n        // 24 columns\r\n        for (let j = 0; j < 25; ++j) {\r\n            appendRect(layer, {\r\n                fill: (i & 1)? oddRowColor: evenRowColor,\r\n                width: gridWidth,\r\n                height: gridHeight,\r\n                x: gap + ( gridWidth + gap ) * j,\r\n                y: gap + ( gridHeight + gap ) * i,\r\n            });\r\n        }\r\n    }\r\n\r\n    return layer;\r\n}","import Konva from 'konva';\r\nimport { appendRect, appendText } from './KonvaUtils';\r\nimport { getTimeString, getTimeCode } from '../utils';\r\n\r\n/**\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n */\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nexport function getLabelAndTimeLayer(config, theme) {\r\n    const { orientation } = config.general;\r\n\r\n    if (orientation === 'horizontal') \r\n        return getHorizontalLabelAndTimeLayer(config, theme);\r\n    return getVerticalLabelAndTimeLayer(config, theme);\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nfunction getVerticalLabelAndTimeLayer(config, theme) {\r\n    const layer = new Konva.Layer();\r\n    drawDayOfWeekVertical(layer, config, theme);\r\n    drawLabelGridVertical(layer, config, theme);\r\n    drawTimeGridVertical(layer, config, theme);\r\n    return layer;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\n function getHorizontalLabelAndTimeLayer(config, theme) {\r\n    const layer = new Konva.Layer();\r\n    drawDayOfWeekHorizontal(layer, config, theme);\r\n    drawLabelGridHorizontal(layer, config, theme);\r\n    drawTimeGridHorizontal(layer, config, theme);\r\n    return layer;\r\n}\r\n\r\n\r\n// * =======================================\r\n// * Day Of Week\r\n// * =======================================\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\nfunction drawDayOfWeekHorizontal(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const x = gap + (gap + gridWidth) * timeframeBegin;\r\n\r\n    // Day of Weeks\r\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].forEach((v,i)=> {\r\n        if (i === 0 && weekends === 'sat/sun') return;\r\n        if (i === 5 && weekends === 'fri/sat') return;\r\n        if (i === 6 && weekends !== 'all') return;\r\n\r\n        const y = gap + (gap + gridHeight) * (i + 1);\r\n\r\n        // Background\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n        });\r\n\r\n        // Texts\r\n        appendText(layer, {\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            text: v,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\n function drawDayOfWeekVertical(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const y = gap + (gap + gridHeight) * timeframeBegin;\r\n\r\n    // Day of Weeks\r\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].forEach((v,i)=> {\r\n        if (i === 0 && weekends === 'sat/sun') return;\r\n        if (i === 5 && weekends === 'fri/sat') return;\r\n        if (i === 6 && weekends !== 'all') return;\r\n\r\n        const x = gap + (gap + gridWidth) * (i + 1);\r\n\r\n        // Background\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n        })\r\n\r\n        // Texts\r\n        appendText(layer, {\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            text: v,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// * =======================================\r\n// * Label Grid\r\n// * =======================================\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\nfunction drawLabelGridHorizontal(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { backgroundColor, labelGridColor, labelGridFontColor, fontFamily } = theme;\r\n\r\n    const y = weekends === 'sat/sun'?\r\n        gap + gridHeight + gap:\r\n        gap;\r\n    const x = gap + (gridWidth + gap) * timeframeBegin;\r\n\r\n    // Cover with background color first\r\n    appendRect(layer, {\r\n        x, y,\r\n        width: gridWidth, height: gridHeight,\r\n        fill: backgroundColor\r\n    });\r\n\r\n    // Divide into 2 halves\r\n    const lowerY = y + (gridHeight / 2) + (gap / 2);\r\n    const halfHeight = (gridHeight / 2) - (gap / 2);\r\n\r\n    // Upper half\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Time',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n\r\n\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Day of Week',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\n function drawLabelGridVertical(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { backgroundColor, labelGridColor, labelGridFontColor, fontFamily } = theme;\r\n\r\n    const x = weekends === 'sat/sun'?\r\n        gap + gridWidth + gap:\r\n        gap;\r\n    const y = gap + (gridHeight + gap) * timeframeBegin;\r\n\r\n    // Cover with background color\r\n    appendRect(layer, {\r\n        x, y,\r\n        width: gridWidth, height: gridHeight,\r\n        fill: backgroundColor\r\n    });\r\n\r\n    // Divide into 2 halves\r\n    const lowerY = y + (gridHeight / 2) + (gap / 2);\r\n    const halfHeight = (gridHeight / 2) - (gap / 2);\r\n\r\n    // Upper half\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Day of Week',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n\r\n\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Time',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// * =======================================\r\n// * Time Grid\r\n// * =======================================\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\nfunction drawTimeGridHorizontal(layer, config, theme) {\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { backgroundColor, timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const timeFontSize = courseNameFontSize * 0.75;\r\n\r\n    const y = weekends === 'sat/sun'? gap * 2 + gridHeight : gap;\r\n    const lowerY = y + (gridHeight / 2) + (gap / 2);\r\n    const halfHeight =  (gridHeight / 2) - (gap / 2);\r\n\r\n    for (let i = timeframeBegin; i < timeframeEnd; ++i) {\r\n        const x = gap + (i+1) * (gap + gridWidth);\r\n\r\n        // Fill with background first\r\n        appendRect(layer, {\r\n            fill: backgroundColor,\r\n            x, y,\r\n            height: gridHeight, width: gridWidth\r\n        });\r\n\r\n        // Upper half\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            height: halfHeight, width: gridWidth\r\n        });\r\n        appendText(layer, {\r\n            text: `${getTimeString(i)}\\n${getTimeString(i+1)}`,\r\n            fontFamily,\r\n            fontSize: timeFontSize,\r\n            fill: timeGridFontColor,\r\n            x, y,\r\n            height: halfHeight, width: gridWidth,\r\n            lineHeight: 1.6,\r\n        });\r\n\r\n        // Lower half\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y: lowerY,\r\n            height: halfHeight, width: gridWidth\r\n        });\r\n        appendText(layer, {\r\n            text: `${getTimeCode(i)}`,\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            x, y: lowerY,\r\n            height: halfHeight, width: gridWidth,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n*/\r\nfunction drawTimeGridVertical(layer, config, theme) {\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const timeFontSize = courseNameFontSize * 0.75;\r\n\r\n    const x = weekends === 'sat/sun'? gap * 2 + gridWidth : gap;\r\n    const quarterHeight = (gridHeight * 0.25);\r\n\r\n    for (let i = timeframeBegin; i < timeframeEnd; ++i) {\r\n        const y = gap + (i+1) * (gap + gridHeight);\r\n        const lowerY = y + (gridHeight * 0.75);\r\n\r\n        // Fill with background first\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            height: gridHeight, width: gridWidth\r\n        });\r\n\r\n        // Upper half\r\n        appendText(layer, {\r\n            text: `${getTimeString(i)}\\n${getTimeString(i+1)}`,\r\n            fontFamily,\r\n            fontSize: timeFontSize,\r\n            fill: timeGridFontColor,\r\n            x, y,\r\n            height: gridHeight - quarterHeight, width: gridWidth,\r\n            lineHeight: 1.6,\r\n        });\r\n\r\n        // Lower half\r\n        appendText(layer, {\r\n            text: `${getTimeCode(i)}`,\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            x, y: lowerY,\r\n            height: quarterHeight, width: gridWidth,\r\n        });\r\n    }\r\n}","/**\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n * @typedef {import('./reduceCoursesToTimeslotProperties').TimeslotProperty} TimeslotProperty\r\n */\r\n\r\nimport Konva from 'konva';\r\nimport { appendRect, appendText } from './KonvaUtils';\r\n\r\n\r\n/**\r\n * @param {Object} config The config object from the `configurationSlice.js`, used to deduce information like\r\n *      `gridWidth`, `gap` etc\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {TimeslotProperty[]} timeslots Array of {@link TimeslotProperty} returned from step 2\r\n */\r\nexport function getCoursesLayer(config, theme, timeslots) {\r\n    const { orientation } = config.general;\r\n    if (orientation === 'horizontal')\r\n        return horizontalGetCoursesLayer(config, theme, timeslots);\r\n    return verticalGetCoursesLayer(config, theme, timeslots);\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} config The config object from the `configurationSlice.js`, used to deduce information like\r\n *      `gridWidth`, `gap` etc\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {TimeslotProperty[]} timeslots Array of {@link TimeslotProperty} returned from step 2\r\n */\r\nfunction horizontalGetCoursesLayer(config, theme, timeslots) {\r\n    const layer = new Konva.Layer();\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n\r\n    for (let timeslot of timeslots) {\r\n        const { dayOfWeek, startTime, endTime } = timeslot;\r\n        const y = gap + (dayOfWeek + 1) * (gap + gridHeight);\r\n        const x = gap + (startTime + 1) * (gap + gridWidth);\r\n        const width = (endTime - startTime) * (gridWidth + gap) - gap;\r\n        appendCourse(layer, timeslot, theme, config, x, y, width, gridHeight);\r\n    }\r\n    return layer;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config The config object from the `configurationSlice.js`, used to deduce information like\r\n *      `gridWidth`, `gap` etc\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {TimeslotProperty[]} timeslots Array of {@link TimeslotProperty} returned from step 2\r\n */\r\nfunction verticalGetCoursesLayer(config, theme, timeslots) {\r\n    const layer = new Konva.Layer();\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n\r\n    for (let timeslot of timeslots) {\r\n        const { dayOfWeek, startTime, endTime } = timeslot;\r\n        const x = gap + (dayOfWeek + 1) * (gap + gridWidth);\r\n        const y = gap + (startTime + 1) * (gap + gridHeight);\r\n        const height = (endTime - startTime) * (gridHeight + gap) - gap;\r\n        appendCourse(layer, timeslot, theme, config, x, y, gridWidth, height);\r\n    }\r\n    return layer;\r\n}\r\n\r\n\r\n/**\r\n * Draws a timeslot on the provided layer.\r\n * ! Here, the courseName:lecturerName:courseCode ratio is 60:20:20\r\n * ! If the lecturer name is absent, then the ratio goes to 75:25\r\n * ! The same goes if \r\n * \r\n * @param {Konva.Layer} layer Layer to draw course on\r\n * @param {TimeslotProperty} property The {@link TimeslotProperty} that contains information how to draw the course\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {Object} config Config object from `configurationSlice.js`. Grid width, course font sizes etc obtainedd from it.\r\n * @param {number} x X offset to draw on the layer\r\n * @param {number} y Y offset to draw on layer\r\n * @param {number} width width of the grid\r\n * @param {number} height height of the grid\r\n */\r\nfunction appendCourse(layer, property, theme, config, x, y, width, height) {\r\n    const ratio = \r\n        (property.lecturer && property.code)? [0.6, 0.2, 0.2]:\r\n        (property.lecturer)? [0.75, 0.25, 0]:\r\n        (property.code)? [0.75, 0, 0.25]:\r\n        [1, 0, 0];\r\n\r\n    const { courseNameFontSize, lecturerNameFontSize, courseCodeFontSize } = config.grid;\r\n\r\n    \r\n    const nameHeight = height * ratio[0];\r\n    const lecturerHeight = height * ratio[1];\r\n    const codeHeight = height * ratio[2];\r\n\r\n\r\n    // Background\r\n    appendRect(layer, {\r\n        x, y, width, height,\r\n        fill: property.backgroundColor\r\n    });\r\n\r\n    // Course name\r\n    appendText(layer, {\r\n        x, y,\r\n        width,\r\n        height: nameHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        text: property.name,\r\n        fontStyle: 'bold',\r\n    });\r\n\r\n    // Lecturer name\r\n    appendText(layer, {\r\n        x, y: y + nameHeight,\r\n        width,\r\n        height: lecturerHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: lecturerNameFontSize,\r\n        text: property.lecturer,\r\n        fontStyle: 'bold'\r\n    });\r\n\r\n    // Course code\r\n    appendText(layer, {\r\n        x, y: y + nameHeight + lecturerHeight,\r\n        width,\r\n        height: codeHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: courseCodeFontSize,\r\n        text: property.code,\r\n    });\r\n}","/**\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n * @typedef {import('../../redux/slices/setupCoursesSlice').SetupCoursesSliceState} SetupCoursesSliceState\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n * @typedef {import('./reduceCoursesToTimeslotProperties').TimeslotProperty} TimeslotProperty\r\n */\r\n\r\n\r\n\r\n/** Step 1 executor - Map theme to {@link Theme} */ \r\nimport { mapToTheme } from './themeMapper'; \r\n/** Step 2 executor - Reduce timeslots into {@link TimeslotProperty} */ \r\nimport { reduceCoursesToTimeslotArray } from './reduceCoursesToTimeslotProperties';\r\n/** Step 3 executor - Initialize the Konva.Stage to draw in */\r\nimport { initializeStage } from './initializeStage';\r\n/** Step 4 executor - Get layer with background color, evenrow and oddrows drawn */\r\nimport { getBackgroundLayer } from './getBackgroundLayer';\r\n/** Step 5 executor - Get layer with time grid and label grid */\r\nimport { getLabelAndTimeLayer } from './getLabelAndTimeLayer';\r\n/** Step 6 executor - Get layer with courses grid drawn */\r\nimport { getCoursesLayer } from './getCoursesLayer';\r\n/** Step 7 executor - Get DataURL from canvas with only visible portion */\r\nimport { dataURLExtractor } from './dataURLExtractor';\r\n\r\n\r\n\r\n// \r\n/**\r\n * This is the main function called when user clicks the 'Create' button.\r\n * The process of creating timetable is broken down into a series of steps\r\n * \r\n * @param {HTMLImageElement} img The image HTML element to contain the timetable \r\n * @param {SetupCoursesSliceState} courses The setupCourses state straight from redux state. \r\n * @param {Object} config The config state straight from redux state.\r\n */\r\nexport function drawTimetable(img, courses, config) {\r\n    \r\n    // We won't actually draw out the canvas. Instead, draw it virtually first\r\n    const fakeDiv = document.createElement('div');\r\n\r\n    /** ==================================================================================================================\r\n    * Step 1 - Obtaining {@link Theme} object that contains information on how the timetable should be styled based on the\r\n    *            config's theme property\r\n    ================================================================================================================== */\r\n    const theme = mapToTheme(config);\r\n\r\n    /** ==================================================================================================================\r\n    * Step 2 - Reduce the courses into an array of {@link TimeslotProperty} objects that can be iterated when drawing the timetable\r\n    ================================================================================================================== */\r\n    const timeslots = reduceCoursesToTimeslotArray(courses, theme);\r\n\r\n    /** ==================================================================================================================\r\n    * Step 3 - Initalize the {@link Konva.Stage} to draw timetable on. The stage size will initialize based on orientation\r\n    * and other properties. Pass in the `config` object. The stage will always be 24x8 or 8x24 grids (Every hour in a week)\r\n    ================================================================================================================== */\r\n    const stage = initializeStage(fakeDiv, config);\r\n\r\n    /** ==================================================================================================================\r\n    * Step 4 - Draw the background and even / odd rows of the timetable. Obtain the Konva.Layer and add to stage.\r\n    ================================================================================================================== */\r\n    stage.add( getBackgroundLayer(config, theme) );\r\n\r\n    /** ==================================================================================================================\r\n    * Step 5 - Draw the time grid and label grid. Obtain the Konva.Layer and add to stage.\r\n    ================================================================================================================== */\r\n    stage.add( getLabelAndTimeLayer(config, theme) );\r\n\r\n    /** ==================================================================================================================\r\n    * Step 6 - Draw the courses. Obtain the Konva layer and add to stage\r\n    ================================================================================================================== */\r\n    stage.add( getCoursesLayer(config, theme, timeslots) );\r\n\r\n    const dataURL = dataURLExtractor(stage, config);\r\n    img.src = dataURL;\r\n}","import Konva from 'konva';\r\n\r\n\r\n/**\r\n * @param {HTMLDivElement} div The div for the Konva to initialize the stage at.\r\n * @param {Object} config The state from `configurationSlice.js` We want the gridWidth, gridHeight, gap, orientation from it.\r\n * @returns {Konva.Stage} Konva Stage\r\n */\r\nexport function initializeStage(div, config) {\r\n    const { orientation } = config.general;\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n\r\n    // HORIZONTAL\r\n    if (orientation === 'horizontal') {\r\n        const width = 25 * gridWidth + 26 * gap;\r\n        const height = 8 * gridHeight + 9 * gap;\r\n    \r\n        return new Konva.Stage({\r\n            container: div,\r\n            width, height\r\n        });\r\n    }\r\n    // VERTICAL\r\n    const width = 8 * gridWidth + 9 * gap;\r\n    const height = 25 * gridHeight + 26 * gap;\r\n\r\n    return new Konva.Stage({\r\n        container: div,\r\n        width, height\r\n    });\r\n}","\r\n/**\r\n *\r\n * @param {Konva.Stage} stage Konva stage to extract the timetable from into DataURL\r\n * @param {Object} config `configurationSlice.js`'s state - Used to extract informations like `gridHeight`, `gridWidth`\r\n *      etc\r\n * @returns {string} The DataURL of the extracted part.\r\n */\r\nexport function dataURLExtractor(stage, config) {\r\n    const { orientation } = config.general;\r\n    if (orientation === 'horizontal')\r\n        return horizontalDataURLExtractor(stage, config);\r\n    return verticalDataURLExtractor(stage, config);\r\n}\r\n\r\n\r\n/**\r\n * @param {Konva.Stage} stage Konva stage to extract the timetable from into DataURL\r\n * @param {Object} config `configurationSlice.js`'s state - Used to extract informations like `gridHeight`, `gridWidth`\r\n *      etc\r\n * @returns {string} The DataURL of the extracted part.\r\n */\r\nfunction horizontalDataURLExtractor(stage, config) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n\r\n    const y = weekends === 'sat/sun'?\r\n        gap + gridHeight:\r\n        0;\r\n    const height = weekends === 'all'?\r\n            (8 * gridHeight) + (9 * gap):\r\n            (6 * gridHeight) + (7 * gap);\r\n\r\n    const x = (gap + gridWidth) * timeframeBegin;\r\n    const width = gap + (timeframeEnd - timeframeBegin + 1) * (gridWidth + gap);\r\n        \r\n    return stage.toDataURL({\r\n        x, y, width, height\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {Konva.Stage} stage Konva stage to extract the timetable from into DataURL\r\n * @param {Object} config `configurationSlice.js`'s state - Used to extract informations like `gridHeight`, `gridWidth`\r\n *      etc\r\n * @returns {string} The DataURL of the extracted part.\r\n */\r\nfunction verticalDataURLExtractor(stage, config) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n\r\n    const x = weekends === 'sat/sun'?\r\n        gap + gridWidth:\r\n        0;\r\n    const width = weekends === 'all'?\r\n            (8 * gridWidth) + (9 * gap):\r\n            (6 * gridWidth) + (7 * gap);\r\n\r\n    const y = (gap + gridHeight) * timeframeBegin;\r\n    const height = gap + (timeframeEnd - timeframeBegin + 1) * (gridHeight + gap);\r\n        \r\n    return stage.toDataURL({\r\n        x, y, width, height\r\n    });\r\n}","import { useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { drawTimetable } from '../../logic/Timetable Generation/drawTimetable';\r\nimport { scrollMainContainerTo } from '../../logic/utils';\r\n\r\n\r\n\r\n\r\n// Handles \"Create\" button click\r\nfunction handleCreateButtonClick(setIsTimetableDrawn, containerRef, courses, config) {\r\n    setIsTimetableDrawn(true);\r\n    drawTimetable(containerRef.current, courses, config);\r\n    scrollMainContainerTo('.creation');\r\n}\r\n\r\n// Handles 'Open in new tab' click\r\nfunction handleOpenInNewTab(containerRef) {\r\n    const w = window.open('');\r\n    w.document.write( containerRef.current.outerHTML );\r\n    w.document.close();\r\n}\r\n\r\n// Handles 'Download png' click\r\nfunction handleDownloadPng(containerRef) {\r\n    const anchor = document.createElement('a');\r\n    anchor.href = containerRef.current.src;\r\n    anchor.download = 'timetable.png';\r\n    anchor.click();\r\n}\r\n\r\n\r\n\r\nfunction CreationState() {\r\n    const config = useSelector((state)=> state.config);\r\n    const courses = useSelector((state)=> state.setupCourses);\r\n    const [ isTimetableDrawn, setIsTimetableDrawn ] = useState(false);\r\n    const timetableImgRef = useRef(null);\r\n\r\n\r\n    return (\r\n    <section className='generate__section creation'>\r\n        <h4 className='generate__title'>Step 3: Creation 🎇</h4>\r\n        <p className='generate__desc'>Minor lag spike incoming (Don't worry it's normal)</p>\r\n\r\n        <div className='creation__btngrp'>\r\n            <button className='creation__btn creation__create' type='button' aria-label='Create timetable' title='Create timetable' \r\n                onClick={()=> handleCreateButtonClick(setIsTimetableDrawn, timetableImgRef, courses, config) } >\r\n                    Create\r\n            </button>\r\n\r\n            {/* Export as png. SHown only after timetable is drawn */}\r\n            {\r\n                isTimetableDrawn?\r\n                <button className='creation__btn creation__png' type='button' aria-label='Download timetable as png image'\r\n                    title='Download timetable as png image' \r\n                    onClick={ ()=> handleDownloadPng(timetableImgRef) } >\r\n                        Download png\r\n                </button>\r\n                : null\r\n            }\r\n\r\n            {/* Open in new tab. SHown only after timetable is drawn */}\r\n            {\r\n                isTimetableDrawn?\r\n                <button className='creation__btn creation__newtab' type='button' aria-label='Open timetable in new tab' \r\n                    title='Open timetable in new tab' \r\n                    onClick={ ()=> handleOpenInNewTab(timetableImgRef) } >\r\n                        Open in new tab\r\n                </button>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n        <div className='creation__view'>\r\n            <img className='creation__img' alt='generated timetable' id='timetable-img' ref={timetableImgRef} \r\n                style={ isTimetableDrawn? null: { display: 'none'} } />\r\n        </div>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default CreationState;","import { useState } from 'react';\r\n\r\nimport ClashCheckState from './ClashCheckState';\r\nimport ConfigureState from './ConfigureState';\r\nimport CreationState from './CreationState';\r\n\r\n\r\n// The content shown on Setup Route.\r\nfunction GenerateRoute() {\r\n    // To generate a timetable, a user needs to go through 3 states:\r\n    // State 0 - Check for clashes\r\n    // State 1 - Configure / Customize timetable\r\n    // State 2 - Actual generation of timetable\r\n    const [state, setState] = useState(0);\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Generate Timetable 🏭</h2>\r\n        <p className='main__desc'>Here, you check clashes, customize, and finally generate your timetable</p>\r\n        \r\n        { state >= 0? <ClashCheckState setState={setState} />: null }\r\n        { state >= 1? <ConfigureState setState={setState} />: null }\r\n        { state >= 2? <CreationState />: null }\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default GenerateRoute;","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\nimport { showBalloon, setTypeAndMessage } from '../../redux/slices/balloonSlice';\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\n\r\n\r\nfunction TutorialRoute() {\r\n\r\n    const [ guides, setGuides ] = useState([{\r\n        page: 0,\r\n        content: ''\r\n    }]);\r\n    const [ pageNo, setPageNo ] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( process.env.REACT_APP_TUTORIAL_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((guides)=> {\r\n            setGuides(guides);\r\n        })\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching tutorials. See console for more info\"} ));\r\n            dispatch(showBalloon());\r\n        })\r\n        .finally(()=> {\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Tutorial 📚</h2>\r\n\r\n        <div className='tutorial__btngrp'>\r\n            <button type='button' className='tutorial__btn tutorial__prev'\r\n                onClick={ ()=> setPageNo( Math.max(0, pageNo-1) ) }>\r\n                    <i className=\"fas fa-angle-left\"></i>\r\n            </button>\r\n            Page { pageNo + 1 } of { guides.length }\r\n            <button type='button' className='tutorial__btn tutorial__next'\r\n                onClick={ ()=> setPageNo( Math.min(pageNo+1, guides.length - 1) ) }>\r\n                    <i className=\"fas fa-angle-right\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <ReactMarkdown className='tutorial__markdown'\r\n            children={ guides[pageNo].content }\r\n            rehypePlugins={[rehypeRaw]}\r\n        />\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\n\r\nexport default TutorialRoute;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { cartActions } from '../../redux/slices/cartSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n\r\n// Handles add to cart button\r\nfunction addToCart(dispatch, course) {\r\n    dispatch(cartActions.addCourseToCart(course));\r\n    dispatch(setTypeAndMessage({ type: 'success', message: `Successfully added \"${course.name}\" - ${course.code} into the cart! 🛒`}));\r\n    dispatch(showBalloon());\r\n}\r\n\r\n\r\n\r\nfunction CatalogItem(props) {\r\n    const { course } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <li className='catalog--item'>\r\n        <h4 className='catalog--item--name'>\r\n            { course.name }\r\n        </h4>\r\n\r\n        <p className='catalog--item--code'>\r\n            { course.code }\r\n        </p>\r\n\r\n        <button className='catalog--item--addtocart'\r\n            onClick={()=> addToCart(dispatch, course)}>\r\n                <i className=\"fas fa-cart-plus\"></i>\r\n        </button>\r\n    </li>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(CatalogItem);","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\nimport CatalogItem from './CatalogItem';\r\n\r\n\r\nfunction Catalog(props) {\r\n    const { url } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const [ search, setSearch ] = useState('');\r\n    const [ courses, setCourses ] = useState({});\r\n\r\n\r\n    // Fetch the list of courses\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( url )\r\n        .then((res)=> res.json())\r\n        .then((data)=> {\r\n            setCourses(data);\r\n            dispatch(setTypeAndMessage({ type:'success', message: `Succesfully fetched ${Object.keys(data).length} course(s)`} ));\r\n        })\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching courses. See console for more info\"} ));\r\n        })\r\n        .finally(()=> {\r\n            dispatch(showBalloon());\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [url, dispatch]);\r\n\r\n\r\n    // Filtered CourseItem using Regular Expressions\r\n    const catalogItemJSX = [];\r\n    const regexp = new RegExp( search, 'gi');\r\n    for (let key in courses) {\r\n        const course = courses[key];\r\n        // Push to the list if:\r\n        // - No search specified.\r\n        // - Regex matches in course name\r\n        // - Regex matches in course code\r\n        if (!search.length || regexp.test( course.name ) || regexp.test( course.code ))\r\n            catalogItemJSX.push(\r\n                <CatalogItem key={ course.id } course={ course } />\r\n            );\r\n    }\r\n\r\n\r\n    return (\r\n    <div className='catalog'>\r\n        <h4 className='courses--title'>\r\n            Step 2: Select Courses\r\n        </h4>\r\n\r\n        {/* Search bar */}\r\n        <input type='text' aria-label='search/filter bar' value={search} className='catalog--search' placeholder='Search...'\r\n            onChange={(e)=> setSearch(e.target.value)} />\r\n\r\n        {/* List of courses */}\r\n        <ul className='catalog--list'>\r\n            { catalogItemJSX }\r\n        </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Catalog;","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\nimport { cartActions } from '../../redux/slices/cartSlice';\r\n\r\n\r\nimport Catalog from './Catalog';\r\n\r\n\r\nfunction CourseRoute() {\r\n\r\n    const [ schools, setSchools ] = useState([]);\r\n    const [ selectedSchool, setSelectedSchool ] = useState('');\r\n    const dispatch = useDispatch();\r\n    \r\n    // Fetch a list of available schools.\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( process.env.REACT_APP_SCHOOL_LIST_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((data)=> {\r\n            // Sort school name lexicographically\r\n            data = data.sort((x,y)=> x.name < y.name? -1: 1 );\r\n            setSchools(data);\r\n            dispatch(setTypeAndMessage({ type:'success', message: `Succesfully fetched ${data.length} school(s)`} ));\r\n        })\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching school list. See console for more info\"} ));\r\n        })\r\n        .finally(()=> {\r\n            dispatch(showBalloon());\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper courses'>\r\n        <h2 className='main__title'>UTM Courses 📖</h2>\r\n        <p className='main__desc'>Add readily available UTM courses into your cart, which you can use later in <strong><Link to='/setup'>Setup</Link></strong> page</p>\r\n    \r\n        {/* Step 1 - Select school */}\r\n        <h4 className='courses--title'>\r\n            Step 1: Select School/Faculty\r\n        </h4>\r\n        <p className='courses--desc'>\r\n            Doesn't see your school/faculty listed? Incorrect course information?\r\n            <a href='https://forms.gle/YhgPcBSBCoiDipQk6' target=\"_blank\" rel='noopener noreferrer'> Send Feedback</a>\r\n        </p>\r\n\r\n        <select aria-label='Select school/faculty' value={selectedSchool} className='courses--select'\r\n            onChange={(e)=> setSelectedSchool(e.target.value)} >\r\n                <option disabled={true} value=''> -- select an option -- </option>\r\n                { schools.map((e)=> <option value={e.url} key={e.name}>{e.name}</option> ) }\r\n        </select>\r\n\r\n        { selectedSchool !== ''? <Catalog url={selectedSchool} />: null }\r\n    \r\n    </div>\r\n\r\n    {/* Open cart button. It should not scroll with main container */}\r\n    <button type='button' aria-label='Open shopping cart' title='Open shopping cart' className='course__btn course__cart'\r\n        onClick={()=> dispatch(cartActions.openCart())}>\r\n            Cart <i className=\"fas fa-shopping-cart\"></i>\r\n    </button>\r\n    </main>    \r\n    );\r\n}\r\n\r\nexport default CourseRoute;","import { HashRouter, Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport Balloon from './components/Balloon';\nimport Blindfold from './components/Blindfold';\nimport LoadScreen from './components/LoadScreen';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Cart from './components/cart/Cart';\n\nimport AnnouncementRoute from './components/annoucementRoute/AnnouncementRoute';\nimport SetupRoute from './components/setupRoute/SetupRoute';\nimport GenerateRoute from './components/generateRoute/GenerateRoute';\nimport TutorialRoute from './components/tutorialRoute/TutorialRoute';\nimport CourseRoute from './components/courseRoute/CourseRoute';\n\nimport { setTypeAndMessage, showBalloon } from './redux/slices/balloonSlice';\nimport { useEffect } from 'react';\n\n\n// Top level application React component.\nfunction App() {\n\n    const dispatch = useDispatch();\n    useEffect(()=> {\n        dispatch(setTypeAndMessage({ type:'primary', message:'Welcome! If you are new here, you can click tutorial button on top-right corner!'}));\n        dispatch(showBalloon());\n    }, [dispatch]);\n\n    \n    return (\n    <HashRouter>\n        <Blindfold />\n        <Balloon />\n        <LoadScreen />\n        <Cart />\n\n        {/* The Header + Nav + Content will AT LEAST take up screen height */}\n        <div className='min-height-screen-height'>\n            <Header />\n            <Nav />\n\n            <Switch>\n                <Route path='/setup'>\n                    <SetupRoute />\n                </Route>\n                <Route path='/generate'>\n                    <GenerateRoute />\n                </Route>\n                <Route path='/courses'>\n                    <CourseRoute />\n                </Route>\n                <Route path='/tutorial'>\n                    <TutorialRoute />\n                </Route>\n                <Route path='/'>\n                    <AnnouncementRoute />\n                </Route>\n            </Switch>\n        </div>\n\n        <Footer />\n    </HashRouter>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\n// Reducer from slices\r\nimport balloonSliceReducer from './slices/balloonSlice';\r\nimport blindfoldSliceReducer from './slices/blindfoldSlice';\r\nimport loadingScreenSliceReducer from './slices/loadingScreenSlice';\r\nimport cartSliceReducer from './slices/cartSlice';\r\nimport setupCoursesSliceReducer from './slices/setupCoursesSlice';\r\nimport configurationSliceReducer from './slices/configurationSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        balloon: balloonSliceReducer,\r\n        blindfold_showing: blindfoldSliceReducer,\r\n        loadingScreen_showing: loadingScreenSliceReducer,\r\n        setupCourses: setupCoursesSliceReducer,\r\n        config: configurationSliceReducer,\r\n        cart: cartSliceReducer,\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Redux store\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// CSS\nimport \"./styles/main.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store} >\n        <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}