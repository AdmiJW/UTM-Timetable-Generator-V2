{"version":3,"sources":["components/Balloon.js","components/Blindfold.js","components/LoadScreen.js","components/Header.js","components/Nav.js","components/Footer.js","redux/slices/sectionsSlice.js","redux/slices/balloonSlice.js","logic/utils.js","redux/slices/classCoursesSlice.js","components/sectionsRoute/SectionsSection.js","components/sectionsRoute/SectionsCourse.js","components/sectionsRoute/SectionsRoute.js","redux/slices/blindfoldSlice.js","redux/slices/loadingScreenSlice.js","components/annoucementRoute/AnnouncementRoute.js","components/classRoute/TimeSlot.js","components/classRoute/CourseItem.js","components/classRoute/CourseList.js","components/classRoute/ClassRoute.js","components/generateRoute/ClashCheckState.js","logic/timetable_clash_checker.js","redux/slices/configurationSlice.js","components/generateRoute/GeneralConfiguration.js","components/generateRoute/GridConfiguration.js","components/generateRoute/CustomConfiguration.js","components/generateRoute/ConfigureState.js","logic/Timetable Generation/themeMapper.js","logic/Timetable Generation/reduceCoursesToTimeslotProperties.js","logic/Timetable Generation/KonvaUtils.js","logic/Timetable Generation/getBackgroundLayer.js","logic/Timetable Generation/getLabelAndTimeLayer.js","logic/Timetable Generation/getCoursesLayer.js","logic/Timetable Generation/drawTimetable.js","logic/Timetable Generation/initializeStage.js","logic/Timetable Generation/dataURLExtractor.js","components/generateRoute/CreationState.js","components/generateRoute/GenerateRoute.js","components/tutorialRoute/TutorialRoute.js","components/courseRoute/CatalogItem.js","components/courseRoute/Catalog.js","components/courseRoute/CourseRoute.js","components/venueRoute/VenueRoute.js","App.js","redux/store.js","index.js"],"names":["Balloon","useSelector","state","balloon","shownCount","type","message","className","Blindfold","blindfold_showing","LoadScreen","loadingScreen_showing","useState","loadingQuotes","setLoadingQuotes","randomIndex","Math","floor","random","length","useEffect","fetch","process","then","res","json","quotes","catch","err","console","error","Header","alt","src","role","title","to","Nav","pathname","useLocation","Footer","href","target","rel","removeCourseFromSections","createAsyncThunk","SLICE_NAME","id","Promise","resolve","window","setTimeout","sectionsSlice","createSlice","name","initialState","meta","nextID","reducers","addCourseToSections","action","Object","assign","isAnimatingDelete","payload","extraReducers","builder","addCase","pending","arg","fulfilled","sectionsActions","actions","showBalloon","thunkapi","balloonSlice","setTypeAndMessage","rejected","log","_dayOfWeekFullNames","_dayOfWeekShortNames","getDayOfWeekName","dayOfWeek","isFullForm","getTimeString","time","is12HourFormat","padStart","mod","div","getTimeCode","scrollMainContainerTo","selectorOfDivInMainContainer","document","querySelector","ref","scrollTop","offsetTop","scrollHeight","sliceName","generateEmptyCourse","courseName","lecturerName","courseCode","timeslots","generateEmptyTimeslot","startTime","endTime","venue","deleteCourse","deleteTimeslot","saveCoursesToLocalStorage","thunkAPI","a","localStorage","setItem","JSON","stringify","getState","classCourses","dispatch","loadCoursesFromLocalStorage","getItem","Error","warn","parse","addBlankCourse","addCourseFromSections","sectionEnrollment","convertedCourse","sectionEnrollObject","nextCourseID","course","key","lecturer","code","section","times","sectiontime","timeID","beginTime","adapterFromSectionEnrollingInterfaceToClassCourseObject","changeCourseName","newCourseName","changeLecturerName","newLecturerName","changeCourseCode","newCourseCode","addTimeslot","courseID","newTimeslotID","changeTimeslotDayOfWeek","timeslotID","Number","changeTimeslotStartTime","max","changeTimeslotEndTime","changeTimeslotVenue","classCoursesSlice","classActions","SectionsSection","props","useDispatch","timeListJSX","push","program","capacity","onClick","enrollCourseSection","SectionsCourse","sectionListJSX","sections","memo","SectionsRoute","sectionsCourseListJSX","isNaN","blindfoldSlice","showBlindfold","hideBlindfold","loadingScreenSlice","showLoadingScreen","hideLoadingScreen","AnnouncementRoute","annoucements","setAnnouncements","announcementLinks","all","map","link","annoucementsResponse","text","finally","annoucementListJSX","e","i","children","rehypePlugins","rehypeRaw","TimeSlot","timeslot","label","value","onChange","disabled","placeholder","CourseItem","courseNameRef","useRef","lecturerNameRef","courseCodeRef","current","innerText","timeslotJSXList","contentEditable","onInput","suppressContentEditableWarning","CourseList","courseItems","ClassRoute","getOutputDisplay","clashCheckResult","isClashing","clashDetails","course1","course2","performClashCheck","courses","setClashCheckResult","setState","timetable","Array","fill","coursekey","timekey","timeslotReserver","checkClash","ClashCheckState","allowedFontFamilies","forEach","font","FontFaceObserver","load","configurationSlice","general","theme","orientation","weekends","timeframeBegin","timeframeEnd","grid","gridWidth","gridHeight","gap","courseNameFontSize","venueFontSize","lecturerNameFontSize","courseCodeFontSize","custom","isCustom","backgroundColor","fontFamily","labelGridColor","labelGridFontColor","timeGridColor","timeGridFontColor","evenRowColor","oddRowColor","courseColors","defaultCustomCourseColors","fontColor","setTheme","setOrientation","setWeekends","setTimeframeBegin","setTimeframeEnd","setGridWidth","setGridHeight","setGap","setCourseNameFontSize","setVenueFontSize","setLecturerNameFontSize","setCourseCodeFontSize","modifyCustomConfiguration","changeCourseBackgroundColor","color","changeCourseFontColor","configurationActions","GeneralConfiguration","config","style","fontSize","GridConfiguration","min","step","CustomConfiguration","customConfig","defConfigCourseColors","configCourseColors","values","courseColorsListJSX","proceedToNextState","ConfigureState","themeMapper","courseBackgroundColors","courseFontColors","reduceCoursesToTimeslotArray","courseKey","timeKey","customReduceCourseToTimeslotArrayStrategy","counter","themeName","presetReduceCourseToTimeslotArrayStrategy","appendRect","layer","options","add","Konva","Rect","preventDefault","appendText","Text","align","verticalAlign","getBackgroundLayer","width","height","Layer","j","x","y","getHorizontalBackgroundLayer","getVerticalBackgroundLayer","getLabelAndTimeLayer","v","fontStyle","drawDayOfWeekHorizontal","lowerY","halfHeight","drawLabelGridHorizontal","timeFontSize","lineHeight","drawTimeGridHorizontal","getHorizontalLabelAndTimeLayer","drawDayOfWeekVertical","drawLabelGridVertical","quarterHeight","drawTimeGridVertical","getVerticalLabelAndTimeLayer","getCoursesLayer","appendCourse","horizontalGetCoursesLayer","verticalGetCoursesLayer","property","ratio","nameHeight","venueHeight","lecturerHeight","codeHeight","drawTimetable","img","fakeDiv","createElement","mapToTheme","stage","Stage","container","initializeStage","dataURL","toDataURL","horizontalDataURLExtractor","verticalDataURLExtractor","dataURLExtractor","CreationState","isTimetableDrawn","setIsTimetableDrawn","timetableImgRef","containerRef","handleCreateButtonClick","anchor","download","click","handleDownloadPng","w","open","write","outerHTML","close","handleOpenInNewTab","display","GenerateRoute","TutorialRoute","guides","setGuides","pageNo","setPageNo","guideLinks","guideResponses","CatalogItem","addToSections","Catalog","url","search","setSearch","setCourses","searchResult","setSearchResult","data","keys","regexp","RegExp","match","CourseRoute","schools","setSchools","selectedSchool","setSelectedSchool","sort","VenueRoute","App","path","store","configureStore","reducer","balloonSliceReducer","blindfoldSliceReducer","loadingScreenSliceReducer","configurationSliceReducer","classCoursesSliceReducer","sectionSliceReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ded296a.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\n\r\n\r\n// Balloon notification. Sits fixed on the screen.\r\nfunction Balloon() {\r\n    const { shownCount, type, message } = useSelector((state)=> state.balloon);\r\n\r\n    return (\r\n    <div className={`balloon ${type} ${shownCount? 'shown': ''}`}>\r\n        { message }\r\n    </div>    \r\n    );\r\n}\r\n\r\nexport default Balloon;","import { useSelector } from 'react-redux';\r\n\r\n\r\n// A blindfold is simply a div that lies on top of components, darken when there is an overlay showing.\r\nfunction Blindfold() {\r\n    const blindfold_showing = useSelector((state)=> state.blindfold_showing);\r\n\r\n    return (\r\n    <div className={`blindfold ${blindfold_showing? 'shown': ''}`}></div>\r\n    )\r\n}\r\n\r\nexport default Blindfold;","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nfunction LoadScreen() {\r\n    const loadingScreen_showing = useSelector((state)=> state.loadingScreen_showing);\r\n    const [ loadingQuotes, setLoadingQuotes ] = useState([\"Loading...\"]);\r\n    const randomIndex = Math.floor( Math.random() * loadingQuotes.length );\r\n\r\n    // On component mount, attempt to load in custom loading quotes from CDN.\r\n    useEffect(()=> {\r\n        fetch( process.env.REACT_APP_LOAD_SCREEN_QUOTE_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((quotes)=> setLoadingQuotes(quotes))\r\n        .catch((err)=> {\r\n            console.error(\"Failed to fetch loading screen quotes from \" + process.env.REACT_APP_LOAD_SCREEN_QUOTE_FETCH_URL);\r\n        });\r\n    },[]);\r\n\r\n\r\n    return (\r\n    <div className={`loadScreen ${loadingScreen_showing? 'shown': ''}`}>\r\n        <h4 className='loadScreen__title'>Loading ⌛️</h4>\r\n        <p className='loadScreen__quote'> { loadingQuotes[randomIndex] } </p>\r\n        <i className=\"fab fa-github-alt loadScreen__logo\"></i>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default LoadScreen;","import { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n    <header className='header container-padded'>\r\n        <img className='header__logo' alt='Logo Universiti Tekonologi Malaysia' src='./img/utm_logo.png' />\r\n        <h1 className='header__title'>UTM Timetable Generator V2</h1>\r\n        \r\n        <Link role='button' title='Venue' to='/venue' className='header__button' >\r\n            <i className=\"fas fa-map-marker-alt\"></i>\r\n        </Link>\r\n        <Link role='button' title='Announcements' to='/' className='header__button' >\r\n            <i className=\"fas fa-bullhorn\"></i>\r\n        </Link>\r\n        <Link role='button' title='View Tutorial' to='/tutorial' className='header__button' >\r\n            <i className=\"fas fa-question\"></i>\r\n        </Link>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { useLocation, Link } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const { pathname } = useLocation();\r\n\r\n    return (\r\n    <nav className='nav container'>\r\n        <Link className='nav-link' data-selected={ pathname === '/courses' } to='/courses'>Courses 1️⃣</Link>\r\n        <Link className='nav-link' data-selected={ pathname === '/sections' } to='/sections'>Sections 2️⃣</Link>\r\n        <Link className='nav-link' data-selected={ pathname === '/classes' } to='/classes'>Classes 3️⃣</Link>\r\n        <Link className='nav-link' data-selected={ pathname === '/generate' } to='/generate'>Generate 4️⃣</Link>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","\r\nfunction Footer() {\r\n    return (\r\n    <footer className='footer'>\r\n        <a aria-label='Link to github account' href='https://github.com/AdmiJW/UTM-Timetable-Generator-V2/issues' target='_blank'\r\n            rel='noreferrer noopener' className='footer__card'>\r\n            <p className='footer__card__text'>Support</p>\r\n            <i className=\"fab fa-github-alt footer__card__logo\"></i>\r\n        </a>\r\n        <p className='footer__desc'>An open source project</p>\r\n    </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n/** \r\n * A timeslot object format inside a Sections page / fetched from CDN. Not to be confused with the one in `classCoursesSlice.js'\r\n * @typedef {Object} SectionsTimeslot\r\n * @property {number} id ID of the timeslot respective to the Section\r\n * @property {number} dayOfWeek Integer [0-6]. 0 represents Sunday, 1 represents Monday etc.\r\n * @property {number} beginTime Integer [0-23]. 0 represents 12AM, 1 represents 1AM etc.\r\n * @property {number} endTime Integer [0-23]. 0 represents 12AM, 1 represents 1AM etc.\r\n * @property {string} venue String. The venue of the class. Optional\r\n */\r\n\r\n/**\r\n * A section object format inside a Sections / fetched from CDN. Not to be confused with the one in `setupCourseSlice.js`\r\n * @typedef {Object} SectionsSection\r\n * @property {number} id ID of the timeslot respective to the Course\r\n * @property {string} section A string representing the section, usually something like 01, 02...\r\n * @property {string} lecturer A string representing the lecturer teaching this section\r\n * @property {number} capacity The maximum number of students allowed in this section. Optional\r\n * @property {string} program The program this section is for. Optional\r\n * @property {Object.<number, SectionsTimeslot>} times Object mapping id to {@link SectionsTimeslot} objects.\r\n */\r\n\r\n/**\r\n * A course object format inside a Sections / fetched from CDN. Not to be confused with the one in `setupCourseSlice.js`\r\n * @typedef {Object} SectionsCourse\r\n * @property {number} id ID of the course\r\n * @property {string} name A string representing the course name. Eg: Ethics and Civilization\r\n * @property {string} code A string representing the course code. Eg: SECT 1234\r\n * @property {boolean} isAnimatingDelete A boolean used for animation purposes only.\r\n * @property {Object.<number, SectionsSection>} sections Object mapping id to {@link SectionsSection} objects.\r\n */\r\n\r\n/**\r\n * The state of SectionsSlice. \r\n * @typedef {Object.<number, SectionsCourse>} Sections\r\n * @property {Object} meta Contains `nextID` to indicate the next ID of Sections object added. This ID assigned is independent\r\n *      of SectionsCourse.id, as it still may collide across different schools.\r\n */\r\n\r\n/**\r\n * The format that is sent to the setupCoursesReducer when user click enroll in a section from `Courses` page\r\n * @typedef {Object} SectionsEnrollingInterface\r\n * @property {string} name Course name\r\n * @property {string} code Course code\r\n * @property {string} section Section Number\r\n * @property {string} lecturer Section lecturer\r\n * @property {Object.<number, SectionsTimeslot>} times An object mapping id to {@link SectionsTimeslot}, like how it originally was\r\n */\r\n\r\n\r\nconst SLICE_NAME = 'sections';\r\nconst FADE_TIMER = 1000;        // ? Animation fade out duration\r\n\r\n//  Async Thunkss\r\nconst removeCourseFromSections = createAsyncThunk(\r\n    SLICE_NAME + '/removeCourseFromSections',\r\n    (id)=> new Promise((resolve)=> window.setTimeout(()=> resolve(id), FADE_TIMER))\r\n);\r\n\r\n\r\n\r\nconst sectionsSlice = createSlice({\r\n    name: 'sections',\r\n    /** @type {Sections} */\r\n    initialState: {\r\n        meta: {\r\n            nextID: 0\r\n        },\r\n    },\r\n    reducers: {\r\n        addCourseToSections: (state, action)=> {\r\n            state[ state.meta.nextID++ ] = Object.assign({ isAnimatingDelete: false }, action.payload );\r\n        }\r\n    },\r\n    extraReducers: (builder)=> {\r\n        // Remove Couse from sections - Includes animation\r\n        builder.addCase(removeCourseFromSections.pending, (state, action)=> {\r\n            const id = action.meta.arg;\r\n            state[id].isAnimatingDelete = true;\r\n        });\r\n        builder.addCase(removeCourseFromSections.fulfilled, (state, action)=> {\r\n            const id = action.payload;\r\n            delete state[id];\r\n        });\r\n    },\r\n});\r\n\r\n\r\n// Export as one object for namespaced access\r\nexport const sectionsActions = {\r\n    ...sectionsSlice.actions,\r\n    removeCourseFromSections,\r\n};\r\n\r\nexport default sectionsSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// Balloon dissapears after 5 seconds\r\nconst BALLOON_TIMEOUT = 5000;\r\n\r\n// A show balloon thunk that simply resolves after \r\nconst showBalloon = createAsyncThunk(\r\n    'balloon/showBalloon',\r\n    (arg, thunkapi)=> new Promise((resolve)=> window.setTimeout(resolve, BALLOON_TIMEOUT))\r\n);\r\n\r\n\r\nexport const balloonSlice = createSlice({\r\n    name: 'balloon',\r\n    initialState: {\r\n        shownCount: 0,\r\n        type: 'primary',\r\n        message: ''\r\n    },\r\n    reducers: {\r\n        setTypeAndMessage: (state, action)=> {\r\n            const { type, message } = action.payload;\r\n            state.type = type;\r\n            state.message = message;\r\n        }\r\n    },\r\n    extraReducers: (builder)=> {\r\n        builder.addCase( showBalloon.pending, (state)=> {\r\n            ++state.shownCount;\r\n        });\r\n        builder.addCase( showBalloon.fulfilled, (state)=> {\r\n            --state.shownCount;\r\n        });\r\n        builder.addCase( showBalloon.rejected, (state, action)=> console.log(action));\r\n    }\r\n});\r\n\r\nexport const { setTypeAndMessage } = balloonSlice.actions;\r\nexport { showBalloon };\r\n\r\nexport default balloonSlice.reducer;","// ?=====================================================\r\n// ? Utility functions that are used in multiple places\r\n// ?=====================================================\r\n\r\n\r\n\r\nconst _dayOfWeekFullNames = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ];\r\nconst _dayOfWeekShortNames = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ];\r\n\r\n\r\n\r\nfunction getDayOfWeekName(dayOfWeek, isFullForm = true) {\r\n    return isFullForm? _dayOfWeekFullNames[dayOfWeek]: _dayOfWeekShortNames[dayOfWeek];\r\n}\r\n\r\n\r\nfunction getTimeString(time, is12HourFormat = true) {\r\n    if (!is12HourFormat) return `${time.padStart(2, '0')}:00`;\r\n\r\n    const mod = time % 12;\r\n    const div = time / 12;\r\n    return `${ mod === 0? '12': mod }${ div >= 1? ':00PM': ':00AM'}`;\r\n}\r\n\r\nfunction getTimeCode(time) {\r\n    if (time < 7 ) return '-';\r\n    return `${time - 6}`.padStart(2, '0');\r\n}\r\n\r\n\r\n/**\r\n * Controls the scrolling inside of the '.main--scrollable-wrapper' container.\r\n * @param {?string} selectorOfDivInMainContainer The query selector for the div inside of the container to scroll to (top).\r\n *      If left null, then scroll to the bottom of the container.\r\n */\r\nconst scrollMainContainerTo = (selectorOfDivInMainContainer = null)=> {\r\n    const div = document.querySelector('.main--scrollable-wrapper');\r\n    // Set some timeout so that the document has time to render new course\r\n    window.setTimeout(()=> {\r\n        if (!selectorOfDivInMainContainer)\r\n            div.scrollTop = div.scrollHeight;\r\n        else {\r\n            const ref = document.querySelector(selectorOfDivInMainContainer);\r\n            div.scrollTop = ref.offsetTop;\r\n        }\r\n    }, 100);\r\n}\r\n\r\n\r\n\r\n\r\nexport { getDayOfWeekName, getTimeString, getTimeCode, scrollMainContainerTo }","\r\n// ? The slice of state that is responsible for every course item inside /classes route.\r\n// ? The state will be an Object of courses. This allow easy access if we have a lot of courses with id as key.\r\n// ? Javascript object keeps keys in order: If key is number, then it is guaranteed order. If string, then it is insertion order\r\n// ? Due to this reason, ensure the id is always increasing\r\n\r\n\r\n/**\r\n * A single Timeslot object\r\n * @typedef {Object} Timeslot\r\n * @property {number} id ID number for said timeslot in respective course\r\n * @property {number} dayOfWeek Integer in range [0-6]. 0 represents Sunday, 1 represents Monday and so on. Think chinese (1 - 星期一)\r\n * @property {number} startTime Integer in range [0-23]. 24 hour format. Indicates beginning time for this timeslot\r\n * @property {number} endTime Integer in range [0-23]. 24 hour format. Indicates ending time for this timeslot. Should always be later than `startTime`\r\n * @property {string} venue Where the class is held. Optional\r\n * @property {boolean} isAnimatingDelete Boolean, used to provide deletion animation\r\n */\r\n\r\n/**\r\n * Timeslot list. Contains `nextID` key and other integer keys mapping to {@link Timeslot}.\r\n * @typedef TimeslotList\r\n * @type {Object.<number, Timeslot>}\r\n */\r\n\r\n/**\r\n * A single Course object\r\n * @typedef {Object} Course\r\n * @property {number} id ID number for said course\r\n * @property {string} courseName A string representing the course's name\r\n * @property {string} lecturerName A string representing the lecturer's name for this course\r\n * @property {string} courseCode A string representing the course's code\r\n * @property {string} isAnimatingDelete Boolean, used to provide deletion animation\r\n * @property {TimeslotList} timeslots An object containing mappings from `id` (number) to {@link Timeslot} objects. \r\n *      Contains unique key `nextID` which maps to a number.\r\n */\r\n\r\n/**\r\n * classCoursesSlice State structure\r\n * @typedef ClassCoursesSliceState\r\n * @type {Object.<number, Course>}\r\n */\r\n\r\n// ?? For example, see `initialState` below. Remember any changes shall be carefully done\r\n\r\n\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { setTypeAndMessage, showBalloon } from './balloonSlice';\r\nimport { scrollMainContainerTo } from \"../../logic/utils\";\r\n\r\n\r\n\r\nconst sliceName = 'classCourses';\r\nconst fadeOutTime = 500;                // !! IF YOU CHANGE THIS, THE CSS VALUE FOR ANIMATION DURATION MAY ALSO NEED TO CHANGE\r\n                                        // !! REFER TO FADEOUT TIME IN CSS ANIMATIONS (INSIDE _courseItem.scss)\r\n\r\n//=======================================================================\r\n// Default state that the user will see when first use this application\r\n//=======================================================================\r\nconst initialState = {\r\n    nextID: 0,\r\n};\r\n\r\n\r\n//=======================================================================\r\n// Some utilities\r\n//=======================================================================\r\nconst generateEmptyCourse = (id)=> {\r\n    return {\r\n        id,\r\n        courseName: 'Course Name Here',\r\n        lecturerName: 'Lecturer Name Here',\r\n        courseCode: 'Course Code Here',\r\n        isAnimatingDelete: false,\r\n        timeslots: {\r\n            nextID: 0\r\n        }\r\n    }\r\n}\r\n\r\nconst generateEmptyTimeslot = (id)=> {\r\n    return {\r\n        id,\r\n        dayOfWeek: 0,\r\n        startTime: 8,\r\n        endTime: 9,\r\n        venue: '',\r\n        isAnimatingDelete: false\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {import('./sectionsSlice').SectionsEnrollingInterface} SectionsEnrollingInterface\r\n */\r\n/**\r\n * Adapter pattern. Will convert from {@link SectionsEnrollingInterface} into {@link Course} which can be \r\n * directly inserted into the state.\r\n * \r\n * @param {SectionsEnrollingInterface} sectionEnrollObject The object sent from the Sections when user clicks the enroll button on\r\n *      a section\r\n * @param {number} nextCourseID The ID number to be set on `{@link Course}.id`. Usually retrieved from `classCoursesSlice`'s state\r\n * @returns {Course} The converted course object ready to be inserted into state\r\n */\r\nfunction adapterFromSectionEnrollingInterfaceToClassCourseObject(sectionEnrollObject, nextCourseID) {\r\n    const course = generateEmptyCourse(nextCourseID);\r\n    course.courseName = sectionEnrollObject.name;\r\n    course.lecturerName = sectionEnrollObject.lecturer;\r\n    course.courseCode = sectionEnrollObject.code + \" - Section \" + sectionEnrollObject.section;\r\n    \r\n    for (let key in sectionEnrollObject.times) {\r\n        const sectiontime = sectionEnrollObject.times[key];\r\n        const timeID = course.timeslots.nextID++;\r\n        const time = generateEmptyTimeslot( timeID );\r\n\r\n        time.dayOfWeek = sectiontime.dayOfWeek;\r\n        time.startTime = sectiontime.beginTime;\r\n        time.endTime = sectiontime.endTime;\r\n        time.venue = sectiontime.venue || '';\r\n        // Insert into Course.\r\n        course.timeslots[ timeID ] = time;\r\n    }\r\n    return course;\r\n}\r\n\r\n\r\n\r\n//===========================\r\n// Async Reducers\r\n//===========================\r\nconst deleteCourse = createAsyncThunk(\r\n    sliceName + '/deleteCourse',\r\n    (id)=> new Promise((resolve)=> window.setTimeout(()=> resolve(id), fadeOutTime))\r\n);\r\n\r\nconst deleteTimeslot = createAsyncThunk(\r\n    sliceName + '/deleteTimeslot',\r\n    (arg)=> new Promise((resolve)=> window.setTimeout(()=> resolve(arg), fadeOutTime))\r\n);\r\n\r\n// Not really async process, but I want to use dispatch to show balloons\r\nconst saveCoursesToLocalStorage = createAsyncThunk(\r\n    sliceName + '/saveCoursesToLocalStorage',\r\n    async (arg, thunkAPI)=> {\r\n        try {\r\n            window.localStorage.setItem('app-version', process.env.REACT_APP_VERSION_NUMBER );\r\n            window.localStorage.setItem('saved-state', JSON.stringify( thunkAPI.getState().classCourses ) );\r\n            thunkAPI.dispatch( setTypeAndMessage({ type: 'success', message: 'Successfully saved courses into local storage!'} ));\r\n            thunkAPI.dispatch( showBalloon() );\r\n        } catch (err) {\r\n            thunkAPI.dispatch( setTypeAndMessage({ type: 'danger', message: 'Failed to save courses into local storage. See console for more info!'} ));\r\n            thunkAPI.dispatch( showBalloon() );\r\n            console.error(err);\r\n        }\r\n    }\r\n);\r\n\r\nconst loadCoursesFromLocalStorage = createAsyncThunk(\r\n    sliceName + '/loadCoursesFromLocalStorage',\r\n    async (arg, thunkAPI)=> {\r\n        try {\r\n            if (!window.localStorage.getItem('saved-state')) throw new Error('not-found');\r\n\r\n            // * APPLICATION VERSION MISMATCH. SO FAR ONLY WARNING\r\n            if (window.localStorage.getItem('app-version') !== process.env.REACT_APP_VERSION_NUMBER )\r\n                console.warn('The saved data in local storage has different application version number' + \r\n                             ' than the current application version')\r\n            \r\n            const res = JSON.parse( localStorage.getItem('saved-state') );\r\n            thunkAPI.dispatch( setTypeAndMessage({ type: 'success', message: 'Successfully loaded courses from local storage!'} ));\r\n            thunkAPI.dispatch( showBalloon() );\r\n            return res;\r\n        } catch (err) {\r\n            if (err.message === 'not-found') {\r\n                thunkAPI.dispatch( setTypeAndMessage({ type: 'warning', message: 'No previous save data found in local storage.'}))\r\n                thunkAPI.dispatch( showBalloon() );\r\n            } \r\n            else {\r\n                thunkAPI.dispatch( setTypeAndMessage({ type: 'danger', message: 'Failed to load courses from local storage. See console for more info!'} ));\r\n                thunkAPI.dispatch( showBalloon() );\r\n                console.error(err);\r\n            }\r\n        }\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n//=============================\r\n// Sync Reducers - (Non thunk)\r\n//=============================\r\nconst reducers = {\r\n    //=========================\r\n    // Course + Meta Info\r\n    //=========================\r\n    addBlankCourse: (state)=> {\r\n        const id = state.nextID++;\r\n        state[id] = generateEmptyCourse(id);\r\n        scrollMainContainerTo();\r\n    },\r\n    addCourseFromSections: (state, action)=> {\r\n        /** @type {SectionsEnrollingInterface} */\r\n        const sectionEnrollment = action.payload;\r\n        const nextID = state.nextID++;\r\n        const convertedCourse = adapterFromSectionEnrollingInterfaceToClassCourseObject(sectionEnrollment, nextID);\r\n        state[nextID] = convertedCourse;\r\n    },\r\n    changeCourseName: (state, action)=> {\r\n        const { id, newCourseName } = action.payload;\r\n        state[id].courseName = newCourseName;\r\n    },\r\n    changeLecturerName: (state, action)=> {\r\n        const { id, newLecturerName } = action.payload;\r\n        state[id].lecturerName = newLecturerName;\r\n    },\r\n    changeCourseCode: (state, action)=> {\r\n        const { id, newCourseCode } = action.payload;\r\n        state[id].courseCode = newCourseCode;\r\n    },\r\n    //=========================\r\n    // Timeslot\r\n    //=========================\r\n    addTimeslot: (state, action)=> {\r\n        const courseID = action.payload;\r\n        const newTimeslotID = state[courseID].timeslots.nextID++;\r\n        state[courseID].timeslots[newTimeslotID] = generateEmptyTimeslot(newTimeslotID);\r\n    },\r\n    changeTimeslotDayOfWeek: (state, action)=> {\r\n        const { courseID, timeslotID, dayOfWeek } = action.payload;\r\n        state[courseID].timeslots[timeslotID].dayOfWeek = Number(dayOfWeek);\r\n    },\r\n    changeTimeslotStartTime: (state, action)=> {\r\n        const { courseID, timeslotID, startTime } = action.payload;\r\n        state[courseID].timeslots[timeslotID].startTime = Number(startTime);\r\n        // Adjust so that endtime doesn't go before starttime!\r\n        state[courseID].timeslots[timeslotID].endTime = Math.max( Number(startTime)+1, \r\n                                                                  state[courseID].timeslots[timeslotID].endTime );\r\n    },\r\n    changeTimeslotEndTime: (state, action)=> {\r\n        const { courseID, timeslotID, endTime } = action.payload;\r\n        state[courseID].timeslots[timeslotID].endTime = Number(endTime);\r\n    },\r\n    changeTimeslotVenue: (state, action)=> {\r\n        const { courseID, timeslotID, venue } = action.payload;\r\n        state[courseID].timeslots[timeslotID].venue = venue;\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n//===============================================\r\n// Creation of slice + Adding in Async Thunks\r\n//===============================================\r\nexport const classCoursesSlice = createSlice({\r\n    name: 'classCourses',\r\n    initialState,\r\n    reducers,\r\n    extraReducers: (builder)=> {\r\n        // Delete Course\r\n        // In pending state, the ID of course passed in is in action.meta.arg\r\n        builder.addCase( deleteCourse.pending, (state, action)=> {\r\n            const id = action.meta.arg;\r\n            state[id].isAnimatingDelete = true;\r\n        });\r\n        builder.addCase( deleteCourse.fulfilled, (state, action)=> {\r\n            const id = action.payload;\r\n            delete state[id];\r\n        });\r\n        builder.addCase( deleteTimeslot.pending, (state, action)=> {\r\n            const { courseID, timeslotID } = action.meta.arg;\r\n            state[courseID].timeslots[timeslotID].isAnimatingDelete = true;\r\n        });\r\n        builder.addCase( deleteTimeslot.fulfilled, (state, action)=> {\r\n            const { courseID, timeslotID } = action.payload;\r\n            delete state[courseID].timeslots[timeslotID];\r\n        });\r\n        builder.addCase( loadCoursesFromLocalStorage.fulfilled, (state, action)=> {\r\n            const loadedState = action.payload;\r\n            return loadedState;\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Export one large action object to be namespaced\r\nexport const classActions = { \r\n    ...classCoursesSlice.actions,\r\n    deleteCourse,\r\n    deleteTimeslot,\r\n    saveCoursesToLocalStorage,\r\n    loadCoursesFromLocalStorage\r\n};\r\nexport default classCoursesSlice.reducer;","import { useDispatch } from 'react-redux';\r\n\r\nimport { showBalloon, setTypeAndMessage } from '../../redux/slices/balloonSlice';\r\nimport { classActions } from '../../redux/slices/classCoursesSlice';\r\n\r\nimport { getDayOfWeekName, getTimeString } from '../../logic/utils';\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/sectionsSlice').SectionsSection } SectionsSection\r\n * @typedef {import('../../redux/slices/sectionsSlice').SectionsEnrollingInterface } SectionsEnrollingInterface\r\n */\r\n\r\n\r\n\r\n/**\r\n * \r\n * @param {*} dispatch \r\n * @param {*} name \r\n * @param {*} code \r\n * @param {SectionsSection} section \r\n */\r\nfunction enrollCourseSection(dispatch, name, code, section) {\r\n    /** @type {SectionsEnrollingInterface} */\r\n    const sectionEnrollment = {\r\n        name, \r\n        code,\r\n        section: section.section,\r\n        lecturer: section.lecturer,\r\n        times: section.times,\r\n    }\r\n    dispatch( classActions.addCourseFromSections(sectionEnrollment) );\r\n    dispatch(setTypeAndMessage({ type: 'success', message: `Added ${code} - Section ${section.section} to Classes 3️⃣!`}));\r\n    dispatch(showBalloon());\r\n}\r\n\r\n\r\n\r\nfunction SectionsSection(props) {\r\n    const { name, code } = props;\r\n    /** @type {SectionsSection} */\r\n    const section = props.section;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // List of class times\r\n    const timeListJSX = [];\r\n    for (let key in section.times) {\r\n        const time = section.times[key];\r\n        timeListJSX.push(\r\n            <li key={key} className='sectionstime'>\r\n                👉 <strong>{ getDayOfWeekName(time.dayOfWeek, false)}</strong> From&nbsp;\r\n                <strong>{ getTimeString(time.beginTime) }</strong> To&nbsp;\r\n                <strong>{ getTimeString(time.endTime) }</strong>&nbsp;\r\n                { time.venue? <strong>({time.venue})</strong>: null }\r\n            </li>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <li className='sectionssection'>\r\n        <div className='sectionssection--meta'>\r\n            <p className='sectionssection--section'>\r\n                Sec { section.section } { section.program? `(${section.program})` : '' }\r\n            </p>\r\n            <p className='sectionssection--lecturer'>\r\n                { section.lecturer }\r\n            </p>\r\n            <p className='sectionssection--capacity'>\r\n                { (section.capacity && section.capacity !== 0)? `Capacity: ${section.capacity}` : '' }\r\n            </p>\r\n        </div>\r\n\r\n        <ol className='sectionssection--times'>\r\n            { timeListJSX }\r\n        </ol>\r\n\r\n        \r\n        <button \r\n            type='button' \r\n            className='sectionssection--enroll' \r\n            aria-label='Select this section of course' \r\n            title='Select this section'\r\n            onClick={()=> enrollCourseSection(dispatch, name, code, section)} \r\n        >\r\n            Add to Classes\r\n        </button>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default SectionsSection;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { sectionsActions } from '../../redux/slices/sectionsSlice';\r\n\r\nimport SectionsSection from './SectionsSection';\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/sectionsSlice').SectionsCourse } SectionsCourse\r\n */\r\n\r\n\r\nfunction SectionsCourse(props) {\r\n    const { id } = props;\r\n    /** @type {SectionsCourse} */\r\n    const course = props.course;\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    // List of sections\r\n    const sectionListJSX = [];\r\n    for (let key in course.sections) {\r\n        const section = course.sections[key];\r\n        sectionListJSX.push(\r\n            <SectionsSection key={key} name={course.name} code={course.code} section={section} />\r\n        );\r\n    }\r\n    \r\n\r\n    return (\r\n    <li className={`sectionscourse ${course.isAnimatingDelete? 'removing': ''}`} >\r\n        <div className='sectionscourse--meta'>\r\n            <p className='sectionscourse--name'>{ course.name }</p>\r\n            <p className='sectionscourse--code'>{ course.code }</p>\r\n\r\n            <button type='button' className='sectionscourse--delete' aria-label='Remove this course from sections' title='Remove this course from sections'\r\n                onClick={()=> dispatch(sectionsActions.removeCourseFromSections(id)) }>\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <ul className='sectionscourse--sections'>\r\n            { sectionListJSX }\r\n        </ul>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default memo(SectionsCourse);","import { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SectionsCourse from './SectionsCourse';\r\n\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/sectionsSlice').Sections } Sections\r\n */\r\n\r\n\r\nfunction SectionsRoute() {\r\n    /** @type {Sections} */\r\n    const sections = useSelector((state)=> state.sections);\r\n\r\n    \r\n    const sectionsCourseListJSX = [];\r\n    for (let key in sections) {\r\n        if (isNaN(key)) continue;\r\n        sectionsCourseListJSX.push(\r\n            <SectionsCourse key={key} id={key} course={ sections[key] } />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h4 className='main__title'>Sections 📮</h4>\r\n        <p className='main__desc'>\r\n            From the courses you've added from <Link to='/courses'>Courses 1️⃣</Link>, select your section.<br/>\r\n            The section will be added to <Link to='/classes'>Classes 3️⃣</Link> page.\r\n        </p>\r\n\r\n        <ul className='sections--list'>\r\n            { sectionsCourseListJSX }\r\n        </ul>\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default SectionsRoute;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const blindfoldSlice = createSlice({\r\n    name: 'blindfold_showing',\r\n    initialState: false,    // True means show blindfold, false means to hide it.\r\n    reducers: {\r\n        showBlindfold: ()=> true,\r\n        hideBlindfold: ()=> false\r\n    }\r\n});\r\n\r\nexport const { showBlindfold, hideBlindfold } = blindfoldSlice.actions;\r\nexport default blindfoldSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const loadingScreenSlice = createSlice({\r\n    name: 'loadingScreen_showing',\r\n    initialState: false,\r\n    reducers: {\r\n        showLoadingScreen: ()=> true,\r\n        hideLoadingScreen: ()=> false\r\n    }\r\n});\r\n\r\nexport const { showLoadingScreen, hideLoadingScreen } = loadingScreenSlice.actions;\r\nexport default loadingScreenSlice.reducer;","import ReactMarkdown from 'react-markdown';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n\r\nfunction AnnouncementRoute() {\r\n\r\n    const [annoucements, setAnnouncements] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    // Once mounted, attempt to fetch annoucements from /data/announcements.json\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( process.env.REACT_APP_ANNOUCEMENT_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((announcementLinks)=> Promise.all( [...announcementLinks.map(link => fetch(link) )] ))\r\n        .then((annoucementsResponse)=> Promise.all( [...annoucementsResponse.map(a => a.text() ) ] ))\r\n        .then((annoucements)=> setAnnouncements(annoucements) )\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching announcements. See console for more info\"} ));\r\n            dispatch(showBalloon());\r\n        })\r\n        .finally(()=> {\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    const annoucementListJSX = annoucements.map((e, i)=> {\r\n        return (\r\n        <article className='announcement' key={i} >\r\n            {/* <h4 className='annoucement--title'>{e.title}</h4>\r\n            <p className='announcement--date'>{e.date}</p> */}\r\n            <ReactMarkdown \r\n                className='announcement--content'\r\n                children={e}\r\n                rehypePlugins={[rehypeRaw]} \r\n            />\r\n        </article>\r\n        );\r\n    });\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Announcements 📡</h2>\r\n        <h4 className='main__subtitle'>( Tutorial is on the top right corner ↗️ )</h4>\r\n\r\n        { annoucementListJSX }\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default AnnouncementRoute;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { classActions } from '../../redux/slices/classCoursesSlice';\r\n\r\n\r\n// Timeslots for a course - Controls the course's\r\n// - Day of the week\r\n// - Start time\r\n// - End time\r\nfunction TimeSlot(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { courseID } = props;\r\n    const { id, dayOfWeek, startTime, endTime, venue, isAnimatingDelete } = props.timeslot;\r\n\r\n    return (\r\n    <li className={`class__timeslotitem ${isAnimatingDelete? 'deleting': ''}`} >\r\n        {/* Button to discard this timeslot */}\r\n        <button type='button' aria-label='Discard this timeslot' label='Discard this timeslot' className='class__timeslotitem--discardbtn'\r\n            onClick={ ()=> dispatch(classActions.deleteTimeslot({ courseID, timeslotID: id })) } >\r\n            <i className=\"fas fa-times\"></i>\r\n        </button>\r\n\r\n        <select className='class__timeslot--select class__timeslot--dayOfWeek' value={dayOfWeek} \r\n            onChange={ (e)=> dispatch(classActions.changeTimeslotDayOfWeek({\r\n                courseID, timeslotID: id, dayOfWeek: e.target.value\r\n            })) } >\r\n                <option value='0'>Sunday</option>\r\n                <option value='1'>Monday</option>\r\n                <option value='2'>Tuesday</option>\r\n                <option value='3'>Wednesday</option>\r\n                <option value='4'>Thursday</option>\r\n                <option value='5'>Friday</option>\r\n                <option value='6'>Saturday</option>\r\n        </select>\r\n\r\n        <div className='class__timeslot--timegrp'>\r\n            <select className='class__timeslot--select class__timeslot--startTime' value={startTime}\r\n                onChange={ (e)=> dispatch(classActions.changeTimeslotStartTime({\r\n                    courseID, timeslotID: id, startTime: e.target.value\r\n                })) } >\r\n                    <option value='8'>02 (8:00 AM)</option>\r\n                    <option value='9'>03 (9:00 AM)</option>\r\n                    <option value='10'>04 (10:00 AM)</option>\r\n                    <option value='11'>05 (11:00 AM)</option>\r\n                    <option value='12'>06 (12:00 AM)</option>\r\n                    <option value='13'>07 (1:00 PM)</option>\r\n                    <option value='14'>08 (2:00 PM)</option>\r\n                    <option value='15'>09 (3:00 PM)</option>\r\n                    <option value='16'>10 (4:00 PM)</option>\r\n                    <option value='17'>11 (5:00 PM)</option>\r\n                    <option value='18'>12 (6:00 PM)</option>\r\n                    <option value='19'>13 (7:00 PM)</option>\r\n            </select>\r\n\r\n            To\r\n\r\n            <select className='class__timeslot--select class__timeslot--endTime' value={endTime}\r\n                onChange={ (e)=> dispatch(classActions.changeTimeslotEndTime({\r\n                    courseID, timeslotID: id, endTime: e.target.value\r\n                })) } >\r\n                    <option value='9' disabled={ startTime > 8 } >03 (9:00 AM)</option>\r\n                    <option value='10' disabled={ startTime > 9 } >04 (10:00 AM)</option>\r\n                    <option value='11' disabled={ startTime > 10 } >05 (11:00 AM)</option>\r\n                    <option value='12' disabled={ startTime > 11 } >06 (12:00 AM)</option>\r\n                    <option value='13' disabled={ startTime > 12 } >07 (1:00 PM)</option>\r\n                    <option value='14' disabled={ startTime > 13 } >08 (2:00 PM)</option>\r\n                    <option value='15' disabled={ startTime > 14 } >09 (3:00 PM)</option>\r\n                    <option value='16' disabled={ startTime > 15 } >10 (4:00 PM)</option>\r\n                    <option value='17' disabled={ startTime > 16 } >11 (5:00 PM)</option>\r\n                    <option value='18' disabled={ startTime > 17 } >12 (6:00 PM)</option>\r\n                    <option value='19' disabled={ startTime > 18 } >13 (7:00 PM)</option>\r\n                    <option value='20' disabled={ startTime > 19 } >14 (8:00 PM)</option>\r\n            </select>\r\n        </div>\r\n\r\n        <input \r\n            type='text' \r\n            className='class__timeslot--venue' \r\n            placeholder='Enter Venue Here' \r\n            value={venue}\r\n            onChange={ (e)=> dispatch(classActions.changeTimeslotVenue({\r\n                courseID, timeslotID: id, venue: e.target.value\r\n            })) }\r\n        />\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default memo(TimeSlot);","import { useRef, useEffect, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Components\r\nimport TimeSlot from \"./TimeSlot\";\r\n\r\n// Actions\r\nimport { classActions } from '../../redux/slices/classCoursesSlice';\r\n\r\nfunction CourseItem(props) {\r\n\r\n    const { id, courseName, lecturerName, courseCode, timeslots, isAnimatingDelete } = props.course;\r\n    const dispatch = useDispatch();\r\n\r\n    // There has been problems with ContentEditable on React. Here's why:\r\n    // Using <input>, it is unable to span multiple lines.\r\n    // Using <textarea>, I forgot why but is also not desired\r\n    // With ContentEditable, if we use it in React's controlled component way, it will keep resetting the caret position\r\n    // Therefore, I have no choice but to use Uncontrolled component\r\n    const courseNameRef = useRef();\r\n    const lecturerNameRef = useRef();\r\n    const courseCodeRef = useRef();\r\n\r\n    // We cannot put directly the values into the JSX as it triggers rerender and reset caret position.\r\n    // We only want to set initial value on mount, and subsequent edit is handled by DOM, only to be updated to Redux\r\n    // ? On component initial mount, set the courseName etc to the initial value. Anything after that is handled by the DOM.\r\n    useEffect(()=> {\r\n        courseNameRef.current.innerText = courseName;\r\n        lecturerNameRef.current.innerText = lecturerName;\r\n        courseCodeRef.current.innerText = courseCode;\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    // Generate Timeslots\r\n    const timeslotJSXList = [];\r\n    for (let key in timeslots) {\r\n        if (key === 'nextID') continue;\r\n        const timeslot = timeslots[key];\r\n        timeslotJSXList.push(\r\n            <TimeSlot key={timeslot.id} courseID={id} timeslot={timeslot} />\r\n        );\r\n    }\r\n\r\n\r\n    // JSX\r\n    return (\r\n    <li className={`class__courseitem ${isAnimatingDelete? 'deleting': ''}`} data-nth={ id % 10 }>\r\n\r\n        {/* Left side: Contains meta information and control on the course */}\r\n        <div className='class__courseitem--meta'>\r\n            {/* Course Name */}\r\n            <div role='textbox' contentEditable className='class__courseitem--input class__courseitem--coursename'\r\n                onInput={ ()=> dispatch(classActions.changeCourseName({ id, newCourseName: courseNameRef.current.innerText})) } \r\n                ref={courseNameRef} suppressContentEditableWarning>\r\n            </div>\r\n            {/* Lecturer Name */}\r\n            <div role='textbox' contentEditable className='class__courseitem--input class__courseitem--lecturername'\r\n                onInput={ ()=> dispatch(classActions.changeLecturerName({ id, newLecturerName: lecturerNameRef.current.innerText})) } \r\n                ref={lecturerNameRef} suppressContentEditableWarning >\r\n            </div>\r\n            {/* Course Code */}\r\n            <div role='textbox' contentEditable className='class__courseitem--input class__courseitem--coursecode'\r\n                onInput={ ()=> dispatch(classActions.changeCourseCode({ id, newCourseCode: courseCodeRef.current.innerText })) } \r\n                ref={courseCodeRef} suppressContentEditableWarning >\r\n            </div>\r\n\r\n            <div className='class__courseitem--btn-grp'>\r\n                <button type='button' aria-label='Add new time slot' title='Add new time slot' \r\n                    className='class__courseitem--btn class__courseitem--addtime'\r\n                    onClick={ ()=> dispatch(classActions.addTimeslot( id )) } >\r\n                        <i className=\"far fa-clock\"></i>\r\n                </button>\r\n\r\n                <button type='button' aria-label='Discard course' title='Discard course' \r\n                    className='class__courseitem--btn class__courseitem--delcourse'\r\n                    onClick={ ()=> dispatch(classActions.deleteCourse( id )) } >\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/* Right side: Contains time slots for the course */}\r\n        <ul className='class__timeslots'>\r\n            { timeslotJSXList }\r\n        </ul>\r\n    </li>\r\n    );\r\n}\r\n\r\n// Use memoization to optimize rendering - Expensive\r\nexport default memo(CourseItem);","import { useSelector } from 'react-redux';\r\n\r\nimport CourseItem from './CourseItem';\r\n\r\n// Contain a list of Course items\r\nfunction CourseList() {\r\n    const classCourses = useSelector((state)=> state.classCourses);\r\n\r\n    // JSX CourseItems - Inside contains a nextID, we don't want that\r\n    const courseItems = [];\r\n    for (let key in classCourses) {\r\n        if (key === 'nextID') continue;\r\n        const course = classCourses[key];\r\n        courseItems.push(\r\n            <CourseItem key={course.id} course={course} />\r\n        );\r\n    }\r\n\r\n    return (\r\n    <ul className='class__list'>\r\n        { courseItems }\r\n    </ul>\r\n    );\r\n}\r\n\r\nexport default CourseList;","import { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// Components\r\nimport CourseList from './CourseList';\r\n\r\n// Actions\r\nimport { classActions } from '../../redux/slices/classCoursesSlice';\r\n\r\n\r\n// The content shown on Class Route.\r\nfunction ClassRoute() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Classes 📖</h2>\r\n        <p className='main__desc'>\r\n            Add classes here from <Link to='/sections'>Sections 2️⃣</Link> page, or <strong>manually add classes yourself using ➕ button.</strong><br />\r\n            These classes will appear in your timetable. Go to <strong><Link to='/generate'>Generate 4️⃣</Link></strong> page to generate your timetable\r\n        </p>\r\n\r\n        <CourseList />\r\n    </div>\r\n\r\n    {/* Two buttons for loading and saving courses from/to local storage */}\r\n    <div className='class__savingbtn-grp'>\r\n        <button type='button' aria-label='Save courses into local storage' title='Save courses into local storage' className='class__btn class_save-course'\r\n            onClick={ ()=> dispatch(classActions.saveCoursesToLocalStorage()) } >\r\n                <i className=\"fas fa-save\"></i>\r\n        </button>\r\n        <button type='button' aria-label='Load saved courses from local storage' title='Load saved courses from local storage' className='class__btn class__load-course'\r\n            onClick={ ()=> dispatch(classActions.loadCoursesFromLocalStorage()) } >\r\n                <i className=\"fas fa-file-upload\"></i>\r\n        </button>\r\n    </div>\r\n\r\n    {/* Two buttons for Adding courses, one adds a blank course, one opens a window for selected courses */}\r\n    <div className='class__addbtn-grp'>\r\n        <button type='button' aria-label='Add new blank course' title='Add new blank course' className='class__btn class__add-blank-course'\r\n            onClick={ ()=> dispatch(classActions.addBlankCourse()) } >\r\n                <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default ClassRoute;","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n/**\r\n * @typedef {import('../../logic/timetable_clash_checker').ClashReport} ClashReport\r\n */\r\n\r\n// Logic\r\nimport { checkClash } from '../../logic/timetable_clash_checker';\r\nimport { getDayOfWeekName, getTimeString, scrollMainContainerTo } from '../../logic/utils';\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Outputs a div that displays the result of clash check nicely.\r\n * @param {?ClashReport} clashCheckResult Result of clash checking.\r\n */\r\nfunction getOutputDisplay(clashCheckResult) {\r\n    if (clashCheckResult === null) return null;\r\n    if (!clashCheckResult.isClashing)\r\n        return (\r\n        <div className='clashcheck__output'>\r\n            <strong className='clashcheck__output__title'>✅ No Clash Found ✅</strong>\r\n        </div>\r\n        );\r\n\r\n    const [ course1, course2 ] = clashCheckResult.clashDetails;\r\n\r\n    return (\r\n    <div className='clashcheck__output'>\r\n        <strong className='clashcheck__output__title'>⛔️ Clash Detected ⛔️</strong>\r\n        <div className='clashcheck__output__detail'>\r\n            Clash occur between\r\n            <strong className='clashcheck__output__detail--info'>\r\n                {`\"${course1.courseName}\" on ${getDayOfWeekName(course1.dayOfWeek)}`}\r\n            </strong>\r\n            and\r\n            <strong className='clashcheck__output__detail--info'>\r\n                {`\"${course2.courseName}\" on ${getDayOfWeekName(course2.dayOfWeek)}`}\r\n            </strong>\r\n            at\r\n            <strong className='clashcheck__output__detail--info'>\r\n                { `${getTimeString(course1.time)} - ${getTimeString(course1.time + 1)}` }\r\n            </strong>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n// Performs checking whether there is a clash in the timetable. Shows balloon messages, or set state to 1 - Scrolling to\r\n// Configure state.\r\nfunction performClashCheck( courses, setClashCheckResult, setState, dispatch ) {\r\n    const res = checkClash( courses );\r\n    setClashCheckResult(res);\r\n    if (!res.isClashing) {\r\n        setState(1);\r\n        scrollMainContainerTo('.configure');\r\n    }\r\n    else {\r\n        dispatch(setTypeAndMessage({ type:'danger', message: 'There is a clash in your timetable. Go back to Classes page to fix the clash.'} ));\r\n        dispatch(showBalloon());\r\n    }\r\n}\r\n\r\n\r\n// ? Step 1 - Check if there is any clashes in the timetable.\r\n// ? If there is, then display nicely to inform the user.\r\nfunction ClashCheckState(props) {\r\n    const classCourses = useSelector((state)=> state.classCourses);\r\n    const { setState } = props;\r\n    const [clashCheckResult, setClashCheckResult] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <section className='generate__section clashcheck'>\r\n        <h4 className='generate__title'>Step 1: Clash Check 💣</h4>\r\n        <p className='generate__desc'>Check your timetable for any clashes</p>\r\n\r\n        <button className='clashcheck__btn' type='button' aria-label='Trigger check the timetable for clashes'\r\n            label='Trigger check the timetable for clashes' disabled={clashCheckResult !== null}\r\n            onClick={ ()=> performClashCheck(classCourses, setClashCheckResult, setState, dispatch) } >\r\n                Check Clash\r\n        </button>\r\n\r\n        { getOutputDisplay(clashCheckResult) }\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default ClashCheckState;","// ?? Logic used to check whether a clash occurred or not.\r\n// ?? Pass in the timetable in the form same as in the state of classCoursesSlice.js\r\n\r\n\r\n/**\r\n * @typedef {import('../redux/slices/classCoursesSlice').ClassCoursesSliceState} ClassCoursesSliceState\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} TimeslotReserver\r\n * A 'reserver' used to reserve a 1-hour timeframe in the virtual timetable when checking for clashes\r\n * \r\n * @property {string} courseName The name of the course reserving this slot\r\n * @property {number} dayOfWeek Integer in range [0-6]. 0 is Sunday, 1 is Monday etc.\r\n * @property {number} time Integer in range [0-23]. Correspond to 24 hour format. The beginning time in which this course reserves\r\n */\r\n\r\n/**\r\n * @typedef {Object} ClashReport\r\n * An object reporting whether clash had occurred in the timetable.\r\n * \r\n * @property {boolean} isClashing Boolean. `true` if a clash had occurred. Detail of clash goes into `clashDetails`\r\n * @property {?TimeslotReserver[]} clashDetails If clashing occurred, this is an array of size 2 containing {@link TimeslotReserver}\r\n *      which is the 2 courses that clash against each other.\r\n */\r\n\r\n\r\n\r\n/**\r\n * Checks whether the timetable has clashing courses\r\n * @param {ClassCoursesSliceState} classCourses Redux state as defined in `src/components/redux/slices/classCoursesSlice.js`. See {@link ClassCoursesSliceState}\r\n * @return {ClashReport} An object containing a boolean `isClashing`. If `true`, also contains `clashedCourses` which is an array\r\n *                  containing details of first clashing course detected.\r\n */\r\nfunction checkClash(classCourses) {\r\n    // Step 1 - Initialize an 2D array of size 7 x 23. Rows represent dayOfWeek, Cols represent 1 hour timeframe.\r\n    // First row is Sunday, Second is Monday...\r\n    // First column is 00:00 to 01:00, second column is 01:00 to 02:00...\r\n    let timetable = new Array(7).fill(null);\r\n    timetable = timetable.map(()=> new Array(23).fill(null));\r\n\r\n    // Step 2 - Iterate through the courses and fill in timetable.\r\n    // If clash occurs, already can return the result\r\n    for (let coursekey in classCourses) {\r\n        if (coursekey === 'nextID') continue;\r\n        const course = classCourses[coursekey];\r\n        \r\n        for (let timekey in course.timeslots) {\r\n            if (timekey === 'nextID') continue;\r\n            const timeslot = course.timeslots[timekey];\r\n\r\n            for (let time = timeslot.startTime; time < timeslot.endTime; ++time) {\r\n\r\n                // Construct a timeslotInfo object\r\n                /** @type TimeslotReserver */\r\n                const timeslotReserver = {\r\n                    courseName: course.courseName,\r\n                    dayOfWeek: timeslot.dayOfWeek,\r\n                    time\r\n                };\r\n\r\n                // If the timetable slot is already occupied, report clash immediately\r\n                if ( timetable[timeslot.dayOfWeek][time] )\r\n                    return {\r\n                        isClashing: true,\r\n                        clashDetails: [timeslotReserver, timetable[timeslot.dayOfWeek][time] ]\r\n                    };\r\n                // Otherwise we can reserve this slot in timetable\r\n                timetable[timeslot.dayOfWeek][time] = timeslotReserver;\r\n            }\r\n        }\r\n    }\r\n\r\n    // So far no problemo. Report no clashes\r\n    return { isClashing: false, clashDetails: null };\r\n}\r\n\r\n\r\nexport { checkClash };","import { createSlice } from '@reduxjs/toolkit';\r\nimport FontFaceObserver from 'fontfaceobserver';\r\n\r\n\r\n/**\r\n * @typedef {Object} CustomCourseColors\r\n * @property {string} id\r\n * @property {string} name Course name\r\n * @property {string} fontColor Font color for this course\r\n * @property {string} backgroundColor Background color for this course\r\n */\r\n\r\n/**\r\n * The custom configuration object.\r\n * @typedef {Object} CustomConfig\r\n * @property {boolean} isCustom Boolean, indicates whether the user chooses custom theme or not. Decides whether <CustomConfiguration /> is shown\r\n *      or not\r\n * @property {string} backgroundColor Base color of the timetable\r\n * @property {string} fontFamily Font name to be used in the timetable\r\n * @property {string} labelGridColor The background color for the topleft most grid - Label grid\r\n * @property {string} labelGridFontColor The font color for the topleft most grid - Label grid\r\n * @property {string} timeGridColor The background color for the day of week and time grids\r\n * @property {string} timeGridFontColor The font color for the day of week and time grids\r\n * @property {string} evenRowColor The background color for every even rows\r\n * @property {string} oddRowColor The background color for every odd rows\r\n * @property {Object.<number, CustomCourseColors>} courseColors An object mapping id of courses to {@link CustomCourseColors}\r\n *      deciding what color they'll be drawn.\r\n * @property {{ fontColor: string, backgroundColor: string }} defaultCustomCourseColors An object containing default \r\n *      background color / font color to use if the course is not in `courseColors`\r\n */\r\n\r\n\r\n// Properties\r\nconst defaultCustomCourseColors = {\r\n    fontColor: \"#ffffff\",\r\n    backgroundColor: \"#3498db\"\r\n};\r\n\r\n\r\n// ! Fonts are added in `main.scss`\r\n// List of allowed font families. Will be shown as possible options in dropdown list\r\n// during configuration\r\nexport const allowedFontFamilies = [\r\n    \"Roboto\",\r\n    \"Orbitron\",\r\n    \"Grandstander\",\r\n    \"Marvel\",\r\n    \"Cantora One\",\r\n];\r\n\r\n// ? Loads in the webfonts - Initially the font are not loaded, until it is used in HTML\r\n// ? DOM elements will update automatically once loaded, but not for canvas.\r\nallowedFontFamilies.forEach((font)=> {\r\n    (new FontFaceObserver(font)).load().then(()=> {\r\n        console.log(`Loaded webfont ${font}`);\r\n    }).catch((err)=> {\r\n        console.log(`Failed loading webfont ${font}`);\r\n    });\r\n})\r\n\r\n\r\n\r\n\r\n// Slice\r\nexport const configurationSlice = createSlice({\r\n    name: 'config',\r\n    initialState: {\r\n        general: {\r\n            theme: 'default',\r\n            orientation: 'horizontal',\r\n            weekends: 'fri/sat',\r\n            timeframeBegin: 8,\r\n            timeframeEnd: 17,\r\n        },\r\n        grid: {\r\n            gridWidth: 250,\r\n            gridHeight: 200,\r\n            gap: 5,\r\n            courseNameFontSize: 25,\r\n            venueFontSize: 20,\r\n            lecturerNameFontSize: 18,\r\n            courseCodeFontSize: 16,\r\n        },\r\n        custom: {\r\n            isCustom: false,\r\n            backgroundColor: '#ffffff',\r\n            fontFamily: 'Roboto',\r\n            labelGridColor: '#7f8082',\r\n            labelGridFontColor: \"#ffffff\", \r\n            timeGridColor: '#70ad46',\r\n            timeGridFontColor: \"#ffffff\",\r\n            evenRowColor: '#c6e0b3',\r\n            oddRowColor: '#a9d08f',\r\n            courseColors: {},\r\n            // The default Custom Course Color used if not set\r\n            defaultCustomCourseColors,\r\n        },\r\n    },\r\n    reducers: {\r\n        // General Config\r\n        setTheme: (state, action)=> {\r\n            state.general.theme = action.payload;\r\n            state.custom.isCustom = (action.payload === 'custom');\r\n        },\r\n        setOrientation: (state, action)=> {\r\n            state.general.orientation = action.payload;\r\n        },\r\n        setWeekends: (state, action)=> {\r\n            state.general.weekends = action.payload;\r\n        },\r\n        setTimeframeBegin: (state, action)=> {\r\n            state.general.timeframeBegin = Number(action.payload);\r\n            state.general.timeframeEnd = Math.max( Number(action.payload) + 1, state.general.timeframeEnd );\r\n        },\r\n        setTimeframeEnd: (state, action)=> {\r\n            state.general.timeframeEnd = Number(action.payload);\r\n        },\r\n        \r\n        // Grid Config\r\n        setGridWidth: (state, action)=> {\r\n            state.grid.gridWidth = Math.max(0, Number(action.payload) );\r\n        },\r\n        setGridHeight: (state, action)=> {\r\n            state.grid.gridHeight = Math.max(0, Number(action.payload) );\r\n        },\r\n        setGap: (state, action)=> {\r\n            state.grid.gap = Math.max(0, Number(action.payload) );\r\n        },\r\n        setCourseNameFontSize: (state, action)=> {\r\n            state.grid.courseNameFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n        setVenueFontSize: (state, action)=> {\r\n            state.grid.venueFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n        setLecturerNameFontSize: (state, action)=> {\r\n            state.grid.lecturerNameFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n        setCourseCodeFontSize: (state, action)=> {\r\n            state.grid.courseCodeFontSize = Math.max(0, Number(action.payload) );\r\n        },\r\n\r\n        // Custom Configuration\r\n        // action.payload contains an object with the properties to change - AKA will overwrite properties while keeping\r\n        // others unchanged\r\n        modifyCustomConfiguration: (state, action)=> {\r\n            state.custom = Object.assign({}, state.custom, action.payload);\r\n        },\r\n        // Modifying `courseColors` with `modifyCustomConfiguration` above is too messy, use these instead \r\n        changeCourseBackgroundColor: (state, action)=> {\r\n            const {id, color} = action.payload;\r\n            if (!state.custom.courseColors[id]) return;\r\n            state.custom.courseColors[id].backgroundColor = color;\r\n        },\r\n        changeCourseFontColor: (state, action)=> {\r\n            const {id, color} = action.payload;\r\n            if (!state.custom.courseColors[id]) return;\r\n            state.custom.courseColors[id].fontColor = color;\r\n        },\r\n    },\r\n});\r\n\r\nexport const configurationActions = { \r\n    ...configurationSlice.actions,  \r\n};\r\n\r\nexport default configurationSlice.reducer;","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { configurationActions } from '../../redux/slices/configurationSlice';\r\n\r\n\r\nfunction GeneralConfiguration() {\r\n\r\n    const {\r\n        theme, orientation, weekends, timeframeBegin, timeframeEnd\r\n    } = useSelector((state)=> state.config.general);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n    <section className='configure__section'>\r\n        <h4 className='configure__grptitle'>General Configurations</h4>\r\n        <ul className='configure__grp'>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>\r\n                    Theme 🎨\r\n                    <br/><br/>\r\n                    <a href='https://raw.githubusercontent.com/AdmiJW/UTM-Timetable-Generator-V2/master/public/img/themes.jpg' target='_blank' style={{ fontSize: \"0.75em\", color: \"#fff\" }}>View Differences</a>\r\n                </span>\r\n                <select className='configure__iteminput' aria-label='Select the theme for the timetable generated'\r\n                    value={theme} onChange={(e)=> dispatch(configurationActions.setTheme(e.target.value)) }>\r\n                        <option value='default'>Default</option>\r\n                        <option value='futuristic'>Futuristic</option>\r\n                        <option value='cuteness'>Cuteness</option>\r\n                        <option value='spidey'>Spidey</option>\r\n                        <option value='nature'>Nature</option>\r\n                        <option value='custom'>Custom</option>\r\n                </select>\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Orientation 🔍</span>\r\n                <select className='configure__iteminput' aria-label='Select timetable orientation'\r\n                    title='Select timetable orientation'\r\n                    value={orientation} onChange={(e)=> dispatch(configurationActions.setOrientation(e.target.value)) }>\r\n                        <option value='horizontal'>Horizontal</option>\r\n                        <option value='vertical'>Vertical</option>\r\n                </select>\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Weekends 📆</span>\r\n                <select className='configure__iteminput' aria-label='Select to exclude/include the weekends on timetable'\r\n                    title='Select to exclude/include the weekends on timetable'\r\n                    value={weekends} onChange={(e)=> dispatch(configurationActions.setWeekends(e.target.value)) }>\r\n                        <option value='fri/sat'>Hide Fri/Sat</option>\r\n                        <option value='sat/sun'>Hide Sat/Sun</option>\r\n                        <option value='all'>i want all</option>\r\n                </select>\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Visible Timeframe ⌚️</span>\r\n                <select className='configure__iteminput' aria-label='Select the starting timeframe for the timetable generated'\r\n                    title='Select the starting timeframe for the timetable generated'\r\n                    value={timeframeBegin} onChange={(e)=> dispatch(configurationActions.setTimeframeBegin(e.target.value)) }>\r\n                        <option value='8'>02 (8:00 AM)</option>\r\n                        <option value='9'>03 (9:00 AM)</option>\r\n                        <option value='10'>04 (10:00 AM)</option>\r\n                        <option value='11'>05 (11:00 AM)</option>\r\n                        <option value='12'>06 (12:00 AM)</option>\r\n                        <option value='13'>07 (1:00 PM)</option>\r\n                        <option value='14'>08 (2:00 PM)</option>\r\n                        <option value='15'>09 (3:00 PM)</option>\r\n                        <option value='16'>10 (4:00 PM)</option>\r\n                        <option value='17'>11 (5:00 PM)</option>\r\n                        <option value='18'>12 (6:00 PM)</option>\r\n                        <option value='19'>13 (7:00 PM)</option>\r\n                </select>\r\n                to\r\n                <select className='configure__iteminput' aria-label='Select the ending timeframe for the timetable generated'\r\n                    title='Select the ending timeframe for the timetable generated'\r\n                    value={timeframeEnd} onChange={(e)=> dispatch(configurationActions.setTimeframeEnd(e.target.value)) }>\r\n                        <option value='9' disabled={ timeframeBegin > 8 } >03 (9:00 AM)</option>\r\n                        <option value='10' disabled={ timeframeBegin > 9 } >04 (10:00 AM)</option>\r\n                        <option value='11' disabled={ timeframeBegin > 10 } >05 (11:00 AM)</option>\r\n                        <option value='12' disabled={ timeframeBegin > 11 } >06 (12:00 AM)</option>\r\n                        <option value='13' disabled={ timeframeBegin > 12 } >07 (1:00 PM)</option>\r\n                        <option value='14' disabled={ timeframeBegin > 13 } >08 (2:00 PM)</option>\r\n                        <option value='15' disabled={ timeframeBegin > 14 } >09 (3:00 PM)</option>\r\n                        <option value='16' disabled={ timeframeBegin > 15 } >10 (4:00 PM)</option>\r\n                        <option value='17' disabled={ timeframeBegin > 16 } >11 (5:00 PM)</option>\r\n                        <option value='18' disabled={ timeframeBegin > 17 } >12 (6:00 PM)</option>\r\n                        <option value='19' disabled={ timeframeBegin > 18 } >13 (7:00 PM)</option>\r\n                        <option value='20' disabled={ timeframeBegin > 19 } >14 (8:00 PM)</option>\r\n                </select>\r\n            </li>\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default GeneralConfiguration;","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { configurationActions } from '../../redux/slices/configurationSlice';\r\n\r\n\r\nfunction GridConfiguration() {\r\n\r\n    const {\r\n        gridWidth, \r\n        gridHeight, \r\n        courseNameFontSize, \r\n        venueFontSize,\r\n        lecturerNameFontSize, \r\n        courseCodeFontSize, \r\n        gap\r\n    } = useSelector((state)=> state.config.grid);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n    <section className='configure__section'>\r\n        <h4 className='configure__grptitle'>Grid Configurations 📐</h4>\r\n\r\n        <img alt='guide to customization timetable' src='./img/grid_guide.jpg' className='configure__guidepic'/>\r\n\r\n        <ul className='configure__grp'>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Grid Width</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the width for each grid in timetable'\r\n                    title='Select the width for each grid in timetable'\r\n                    value={gridWidth} onChange={(e)=> dispatch(configurationActions.setGridWidth(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Grid Height</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the height for each grid in timetable'\r\n                    title='Select the height for each grid in timetable'\r\n                    value={gridHeight} onChange={(e)=> dispatch(configurationActions.setGridHeight(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Grid Gap</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the gap size (spacing between grids) in timetable'\r\n                    title='Select the gap size (spacing between grids) in timetable'\r\n                    value={gap} onChange={(e)=> dispatch(configurationActions.setGap(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Course Name Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for course names in timetable'\r\n                    title='Select the font size for course names in timetable'\r\n                    value={courseNameFontSize} onChange={(e)=> dispatch(configurationActions.setCourseNameFontSize(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Venue Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for venue in timetable'\r\n                    title='Select the font size for venue in timetable'\r\n                    value={venueFontSize} onChange={(e)=> dispatch(configurationActions.setVenueFontSize(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Lecturer Name Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for lecturer name in timetable'\r\n                    title='Select the font size for lecturer name in timetable'\r\n                    value={lecturerNameFontSize} onChange={(e)=> dispatch(configurationActions.setLecturerNameFontSize(e.target.value))} />\r\n            </li>\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Course Code Font Size</span>\r\n                <input type='number' min='0' step='1' className='configure__iteminput' aria-label='Select the font size for course code in timetable'\r\n                    title='Select the font size for course code in timetable'\r\n                    value={courseCodeFontSize} onChange={(e)=> dispatch(configurationActions.setCourseCodeFontSize(e.target.value))} />\r\n            </li>\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default GridConfiguration;","\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { configurationActions, allowedFontFamilies } from '../../redux/slices/configurationSlice';\r\n\r\n/**\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomCourseColors} CustomCourseColors\r\n */\r\n\r\n\r\nfunction CustomConfiguration() {\r\n\r\n    /** @type CustomConfig */\r\n    const customConfig = useSelector((state)=> state.config.custom);\r\n    const courses = useSelector((state)=> state.classCourses);\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const defConfigCourseColors = customConfig.defaultCustomCourseColors;\r\n    // When component mounts / course list in Classes page updates, we need to update the customCourseColors\r\n    useEffect(()=> {\r\n        const configCourseColors = {};\r\n\r\n        Object.values(courses).forEach((course)=> {\r\n            if ( typeof(course) !== 'object' ) return;  // SKip the 'nextID' property\r\n            configCourseColors[ course.id ] = {\r\n                id: course.id,\r\n                name: course.courseName,\r\n                ...defConfigCourseColors\r\n            };\r\n        });\r\n\r\n        dispatch(configurationActions.modifyCustomConfiguration({ courseColors: configCourseColors }));\r\n    }, [dispatch, courses, defConfigCourseColors]);\r\n\r\n\r\n    // The user didn't choose custom as theme option. Return nothing.\r\n    if (!customConfig.isCustom) return <Fragment></Fragment>;\r\n\r\n\r\n    // For each of the courses, provide with option to change background color and font color\r\n    const courseColorsListJSX = Object.values(customConfig.courseColors).map((course)=> {\r\n        return (\r\n        <li key={course.id} className='configure__item'>\r\n            <strong className='configure__itemtitle configure__coursename'>{ course.name }</strong>\r\n\r\n            {/* Background Color */}\r\n            <small className='configure__itemtitle'>Background Color</small>\r\n            <input type='color' className='configure__iteminput' aria-label='Select background color' title='Select background color' \r\n                value={ course.backgroundColor } \r\n                onChange={(e)=> dispatch(configurationActions.changeCourseBackgroundColor({\r\n                    id: course.id, color: e.target.value\r\n                }))} />\r\n\r\n            {/* Font Color */}\r\n            <small className='configure__itemtitle'>Font Color</small>\r\n            <input type='color' className='configure__iteminput' aria-label='Select font color' title='Select font color' \r\n                value={ course.fontColor } \r\n                onChange={(e)=> dispatch(configurationActions.changeCourseFontColor({\r\n                    id: course.id, color: e.target.value\r\n                }))} />\r\n        </li>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n    <section className='configure__section'>\r\n        <h4 className='configure__grptitle'>Customization 🧐</h4>\r\n\r\n        <img alt='guide to customization timetable' src='./img/custom_guide.png' className='configure__guidepic'/>\r\n\r\n        <ul className='configure__grp'>\r\n\r\n            {/* Background color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Background Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select background color' title='Select background color' \r\n                    value={customConfig.backgroundColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        backgroundColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Font Family */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Font</span> \r\n                <select className='configure__iteminput' aria-label='Select font style for timetable' title='Select font style for timetable'\r\n                    value={customConfig.fontFamily} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        fontFamily: e.target.value\r\n                    }))} >\r\n                        { allowedFontFamilies.map(e=> <option key={e} value={e}>{e}</option>) }\r\n                </select>\r\n            </li>\r\n\r\n            {/* Label grid color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Label Grid Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Label Grid Color' title='Select Label Grid Color' \r\n                    value={customConfig.labelGridColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        labelGridColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Time Grid Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Time Grid Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Timegrid Color' title='Select Timegrid Color' \r\n                    value={customConfig.timeGridColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        timeGridColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Label Grid Font Color*/}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Label Grid Font Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Label Grid Font Color' title='Select Label Grid Font Color' \r\n                    value={customConfig.labelGridFontColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        labelGridFontColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Time Grid Font Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Time Grid Font Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select Timegrid font color 2' title='Select Timegrid font color 2' \r\n                    value={customConfig.timeGridFontColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        timeGridFontColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Odd row Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Odd Row Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select odd row colors' title='Select odd row colors'\r\n                    value={customConfig.oddRowColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        oddRowColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n\r\n            {/* Even row Color */}\r\n            <li className='configure__item'>\r\n                <span className='configure__itemtitle'>Even Row Color</span>\r\n                <input type='color' className='configure__iteminput' aria-label='Select even row colors' title='Select even row colors'\r\n                    value={customConfig.evenRowColor} \r\n                    onChange={(e)=> dispatch(configurationActions.modifyCustomConfiguration({\r\n                        evenRowColor: e.target.value\r\n                    }))} />\r\n            </li>\r\n            \r\n        </ul>\r\n\r\n        {/* Provide user a way to choose their own color */}\r\n        <ul className='configure__grp'>\r\n            { courseColorsListJSX }\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default CustomConfiguration;","\r\nimport GeneralConfiguration from './GeneralConfiguration';\r\nimport GridConfiguration from './GridConfiguration';\r\nimport CustomConfiguration from './CustomConfiguration';\r\n\r\nimport { scrollMainContainerTo } from '../../logic/utils';\r\n\r\n\r\n\r\n// Simply set state to 2, and scrolls to the next container: creation\r\nfunction proceedToNextState(setState) {\r\n    setState(2);\r\n    scrollMainContainerTo('.creation');\r\n}\r\n\r\n\r\n\r\nfunction ConfigureState(props) {\r\n    const { setState } = props;\r\n    \r\n    return (\r\n    <section className='generate__section configure'>\r\n        <h4 className='generate__title'>Step 2: Configurations ⚙️</h4>\r\n        <p className='generate__desc'>Try changing the theme, and set how the timetable is rendered.</p>\r\n\r\n        {/* For lazy people that just want a timetable */}\r\n        <button type='button' aria-label='Proceed to Step 3 - Generate Timetable' title='Proceed to Step 3 - Create Timetable'\r\n            className='configure__btn configure__btnskip' onClick={()=> proceedToNextState(setState)}>\r\n                Skip 💨\r\n        </button>\r\n\r\n\r\n        {/* General Configurations */}\r\n        <GeneralConfiguration />\r\n\r\n        {/* Grid Configuration */}\r\n        <GridConfiguration />\r\n\r\n        {/* Custom Configuration */}\r\n        <CustomConfiguration />\r\n\r\n        {/* Previewer */}\r\n\r\n        {/* Go to step 3 */}\r\n        <button type='button' aria-label='Proceed to Step 3' title='Proceed to Step 3'\r\n            className='configure__btn configure__btnproceed' onClick={()=> proceedToNextState(setState)}>\r\n                Proceed 💪\r\n        </button>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default ConfigureState;","/**\r\n * ! To add a new theme:\r\n * !    1. Import font in `main.scss`\r\n * !    2. In `configurationSlice.js`, include the font as available option in custom configuration\r\n * !    3. Write up the theme mapping here below\r\n */\r\n/**\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n */\r\n\r\n\r\n/**\r\n * An object containing informations on how the timetable shall be drawn. This object is usually related to a specific theme.\r\n * Should resemble the same properties in reduxState.config.custom, so to maintain maximum compatibility between each other.\r\n * @typedef {Object} Theme\r\n * @property {string} theme Name of the theme. Easier debug perhaps?\r\n * @property {string} backgroundColor Base color of the timetable\r\n * @property {string} fontFamily Font name to be used in the timetable\r\n * @property {string} labelGridColor The background color for the topleft most grid - Label grid\r\n * @property {string} labelGridFontColor The font color for the topleft most grid - Label grid\r\n * @property {string} timeGridColor The background color for the day of week and time grids\r\n * @property {string} timeGridFontColor The font color for the day of week and time grids\r\n * @property {string} evenRowColor The background color for every even rows\r\n * @property {string} oddRowColor The background color for every odd rows\r\n * @property {string[]} courseBackgroundColors A list of colors that will be used as background of the courses\r\n * @property {string[]} courseFontColors A list of colors that will be used as font color of the course text\r\n * \r\n */\r\n\r\n\r\n/** An object that map theme strings to {@link Theme} objects. Used in step 1 - Get timetable properties from\r\n *  config file\r\n */\r\n/** @type {Object.<string, Theme>} */\r\nconst themeMapper = {\r\n    // Default Theme\r\n    'default': {\r\n        theme: 'default',\r\n        backgroundColor : '#ffffff',\r\n        labelGridColor : '#7f8082',\r\n        timeGridColor : '#70ad46',\r\n        oddRowColor : '#c6e0b3',\r\n        evenRowColor : '#a9d08f',\r\n        fontFamily: 'Roboto',\r\n        labelGridFontColor: '#ffffff',\r\n        timeGridFontColor: '#ffffff',\r\n        courseBackgroundColors: [\r\n            '#3498db',\r\n            '#6ab04c',\r\n            '#e74c3c',\r\n            '#9b59b6',\r\n            '#34495e',\r\n            '#f1c40f',\r\n            '#3a40b6',\r\n            '#2ecc71',\r\n            '#e67e22',\r\n            '#686de0'\r\n        ],\r\n        courseFontColors: [\r\n            '#ffffff'\r\n        ]\r\n    },\r\n\r\n    'futuristic': {\r\n        theme: 'futuristic',\r\n        backgroundColor : '#2ecc71',\r\n        labelGridColor : '#000000',\r\n        timeGridColor : '#000000',\r\n        oddRowColor : '#1b242e',\r\n        evenRowColor : '#212d3b',\r\n        fontFamily: 'Orbitron',\r\n        labelGridFontColor: '#29e679',\r\n        timeGridFontColor: '#29e679',\r\n        courseBackgroundColors : [\r\n            '#000000'\r\n        ],\r\n        courseFontColors: [\r\n            '#29e679'\r\n        ]\r\n    }, \r\n\r\n    'cuteness': {\r\n        theme: 'cuteness',\r\n        backgroundColor : '#ffffff',\r\n        labelGridColor : '#ff7199',\r\n        timeGridColor : '#ff7199',\r\n        oddRowColor : '#ffbada',\r\n        evenRowColor : '#ffe2ea',\r\n        fontFamily: 'Grandstander',\r\n        labelGridFontColor: '#ffffff',\r\n        timeGridFontColor : '#ffffff',\r\n        courseBackgroundColors : [\r\n            '#ff90c3'\r\n        ],\r\n        courseFontColors: [\r\n            '#ffffff'\r\n        ]\r\n    },\r\n\r\n    'spidey': {\r\n        theme: 'spidey',\r\n        backgroundColor : '#cccee3',\r\n        labelGridColor : '#0861a3',\r\n        timeGridColor : '#0268d7',\r\n        oddRowColor : '#ca141d',\r\n        evenRowColor : '#b31219',\r\n        fontFamily: 'Marvel',\r\n        labelGridFontColor: '#ffffff',\r\n        timeGridFontColor : '#ffffff',\r\n        courseBackgroundColors : [\r\n            '#8f0505'\r\n        ],\r\n        courseFontColors: [\r\n            '#ffffff'\r\n        ]\r\n    },\r\n\r\n    'nature': {\r\n        theme: 'nature',\r\n        backgroundColor : '#392c1d',\r\n        labelGridColor : '#55422b',\r\n        timeGridColor : '#907a48',\r\n        oddRowColor : '#4f6336',\r\n        evenRowColor : '#4b6b3c',\r\n        fontFamily: 'Cantora One',\r\n        labelGridFontColor: '#e6deb9',\r\n        timeGridFontColor : '#3b2e1e',\r\n        courseBackgroundColors : [\r\n            '#d4bf88'\r\n        ],\r\n        courseFontColors: [\r\n            '#3b2e1e'\r\n        ]\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @param {Object} config The state (slice) of `configurationSlice.js`. Used to map themes\r\n * @returns {(Theme | CustomConfig)} The theme details to be used to draw the timetable.\r\n */\r\nexport function mapToTheme(config) {\r\n    if (config.general.theme === 'custom')\r\n        return config.custom;\r\n    return themeMapper[config.general.theme];\r\n}","/**\r\n * @typedef {import('../../redux/slices/classCoursesSlice').ClassCoursesSliceState} ClassCoursesSliceState\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n */\r\n\r\n\r\n\r\n/**\r\n * @typedef {Object} TimeslotProperty\r\n * @property {string} name Course name\r\n * @property {string} lecturer Lecturer name\r\n * @property {string} code Course code\r\n * @property {number} dayOfWeek Day of week - Integer [0-6]\r\n * @property {number} startTime Starting time - Integer [0-23] \r\n * @property {number} endTime Ending time - Integer [0-23]\r\n * @property {string} venue Venue for the class\r\n * @property {string} theme The name of theme applied\r\n * @property {string} backgroundColor Background color of the grid of said timeslot\r\n * @property {string} fontColor Font color of the grid of said timeslot\r\n */\r\n\r\n\r\n/**\r\n * @param {ClassCoursesSliceState} courses The courses straight from the redux state.\r\n * @param {(Theme | CustomConfig)} theme The {@link Theme} or {@link CustomConfig} object returned from \r\n *      `mapToTheme` function (Step 1). Used to deduce the rendering information in the courses\r\n *      (IE: Background color and font color)\r\n * @returns {TimeslotProperty[]} An array of {@link TimeslotProperty} ready to be pass into the timeslot drawer\r\n */\r\nexport function reduceCoursesToTimeslotArray(courses, theme) {\r\n    if (theme.isCustom)\r\n        return customReduceCourseToTimeslotArrayStrategy(courses, theme);\r\n    return presetReduceCourseToTimeslotArrayStrategy(courses, theme);\r\n}\r\n\r\n\r\n\r\n/**\r\n * Strategy pattern 1 - Custom Theme - To get background color and font color straight from `theme` \r\n * which is {@link CustomConfig} itself.\r\n * \r\n * @param {ClassCoursesSliceState} courses \r\n * @param {CustomConfig} customConfig \r\n * @returns {TimeslotProperty[]} An array of {@link TimeslotProperty} ready to be pass into the timeslot drawer\r\n */\r\nfunction customReduceCourseToTimeslotArrayStrategy(courses, customConfig) {\r\n    /** @type {TimeslotProperty[]} */\r\n    const res = [];\r\n\r\n    // Nest iteration to obtain every timeslot object\r\n    for (let courseKey in courses) {\r\n        if (isNaN(courseKey)) continue;\r\n        const course = courses[courseKey];\r\n        const { id, courseName, lecturerName, courseCode } = course;\r\n\r\n        // * Obtains the course's custom set background color and font color from customConfig.courseColors\r\n        // * If the said id is not found from customConfig (Which shouldn't even happen, fallback to defaultCustomCourseColors)\r\n        const { fontColor, backgroundColor } = customConfig.courseColors[id] || customConfig.defaultCustomCourseColors;\r\n        \r\n        for (let timeKey in course.timeslots) {\r\n            if (isNaN(timeKey)) continue;\r\n            const time = course.timeslots[timeKey];\r\n            const { dayOfWeek, startTime, endTime, venue } = time;\r\n\r\n            res.push({\r\n                name: courseName,\r\n                lecturer: lecturerName,\r\n                code: courseCode,\r\n                dayOfWeek,\r\n                startTime,\r\n                endTime,\r\n                venue,\r\n                theme: 'custom',\r\n                backgroundColor,\r\n                fontColor,\r\n            });\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Strategy pattern 2 - Preset Theme - To get background color and font color from\r\n * {@link Theme}'s `courseBackgroundColors` and `courseFontColors` array. Involves counting\r\n * \r\n * \r\n * @param {ClassCoursesSliceState} courses \r\n * @param {Theme} theme \r\n * @returns {TimeslotProperty[]} An array of {@link TimeslotProperty} ready to be pass into the timeslot drawer\r\n */\r\nfunction presetReduceCourseToTimeslotArrayStrategy(courses, theme) {\r\n    /** @type {TimeslotProperty[]} */\r\n    const res = [];\r\n    // Counts the timeslot\r\n    let counter = 0;        \r\n    const { theme: themeName, courseBackgroundColors, courseFontColors } = theme;\r\n\r\n    // Nest iteration to obtain every timeslot object\r\n    for (let courseKey in courses) {\r\n        if (isNaN(courseKey)) continue;\r\n        const course = courses[courseKey];\r\n        const { courseName, lecturerName, courseCode } = course;\r\n\r\n        for (let timeKey in course.timeslots) {\r\n            if (isNaN(timeKey)) continue;\r\n            const time = course.timeslots[timeKey];\r\n            const { dayOfWeek, startTime, endTime, venue } = time;\r\n\r\n            res.push({\r\n                name: courseName,\r\n                lecturer: lecturerName,\r\n                code: courseCode,\r\n                dayOfWeek,\r\n                startTime,\r\n                endTime,\r\n                venue,\r\n                theme: themeName,\r\n                backgroundColor: courseBackgroundColors[ counter % courseBackgroundColors.length ], \r\n                fontColor: courseFontColors[ counter % courseFontColors.length ],\r\n            });\r\n        }\r\n        ++counter;  // Don't forget to update counter.\r\n    }\r\n    return res;\r\n}","import Konva from \"konva\";\r\n\r\n/**\r\n * \r\n * @param {Konva.Layer} layer The konva layer to append a rectangle onto\r\n * @param {Object} options options to initialize the rectangle. Eg: `fill`, `width`, `x`\r\n */\r\nexport function appendRect(layer, options) {\r\n    layer.add( new Konva.Rect({\r\n        preventDefault: false,          // ? Allow mobile device scrolling\r\n        ...options,\r\n    }));\r\n}\r\n\r\n\r\nexport function appendText(layer, options) {\r\n    layer.add( new Konva.Text({\r\n        preventDefault: false,          // ? Allow mobile device scrolling\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        ...options,\r\n    }));\r\n}","import Konva from 'konva';\r\nimport { appendRect } from './KonvaUtils'\r\n\r\n/**\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n */\r\n\r\n// ! Every shapes added by Konva should have preventDefault: false - To allow mobile scrolling. Otherwise\r\n// ! user will be unable to scroll by touch\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap` and most importantly `orientation`.\r\n * @param {Theme} theme Theme object to refer `oddRowColor`, `evenRowColor` and `backgroundColor`\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nexport function getBackgroundLayer(config, theme) {    \r\n    const { orientation } = config.general;\r\n\r\n    if (orientation === 'horizontal') \r\n        return getHorizontalBackgroundLayer(config, theme);\r\n    return getVerticalBackgroundLayer(config, theme);\r\n}\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap` and most importantly `orientation`.\r\n * @param {Theme} theme Theme object to refer `oddRowColor`, `evenRowColor` and `backgroundColor`\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nfunction getVerticalBackgroundLayer(config, theme) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { oddRowColor, evenRowColor, backgroundColor } = theme;\r\n    const width = 8 * gridWidth + 9 * gap;\r\n    const height = 25 * gridHeight + 26 * gap;\r\n\r\n    const layer = new Konva.Layer();\r\n\r\n    appendRect(layer, {\r\n        fill: backgroundColor,\r\n        width, height\r\n    });\r\n\r\n    // 24 rows\r\n    for (let i = 0; i < 25; ++i) {\r\n        // 8 columns\r\n        for (let j = 0; j < 8; ++j) {\r\n            appendRect(layer, {\r\n                fill: (j & 1)? oddRowColor: evenRowColor,\r\n                width: gridWidth, \r\n                height: gridHeight,\r\n                x: gap + ( gridWidth + gap ) * j,\r\n                y: gap + ( gridHeight + gap ) * i,\r\n            });\r\n        }\r\n    }\r\n    return layer;\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap` and most importantly `orientation`.\r\n * @param {Theme} theme Theme object to refer `oddRowColor`, `evenRowColor` and `backgroundColor`\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\n function getHorizontalBackgroundLayer(config, theme) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { oddRowColor, evenRowColor, backgroundColor } = theme;\r\n    const width = 25 * gridWidth + 26 * gap;\r\n    const height = 8 * gridHeight + 9 * gap;\r\n\r\n    const layer = new Konva.Layer();\r\n\r\n    // Background\r\n    appendRect( layer, {\r\n        fill: backgroundColor,\r\n        width, height,\r\n    });\r\n\r\n    // 8 rows\r\n    for (let i = 0; i < 8; ++i) {\r\n        // 24 columns\r\n        for (let j = 0; j < 25; ++j) {\r\n            appendRect(layer, {\r\n                fill: (i & 1)? oddRowColor: evenRowColor,\r\n                width: gridWidth,\r\n                height: gridHeight,\r\n                x: gap + ( gridWidth + gap ) * j,\r\n                y: gap + ( gridHeight + gap ) * i,\r\n            });\r\n        }\r\n    }\r\n\r\n    return layer;\r\n}","import Konva from 'konva';\r\nimport { appendRect, appendText } from './KonvaUtils';\r\nimport { getTimeString, getTimeCode } from '../utils';\r\n\r\n/**\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n */\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nexport function getLabelAndTimeLayer(config, theme) {\r\n    const { orientation } = config.general;\r\n\r\n    if (orientation === 'horizontal') \r\n        return getHorizontalLabelAndTimeLayer(config, theme);\r\n    return getVerticalLabelAndTimeLayer(config, theme);\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\nfunction getVerticalLabelAndTimeLayer(config, theme) {\r\n    const layer = new Konva.Layer();\r\n    drawDayOfWeekVertical(layer, config, theme);\r\n    drawLabelGridVertical(layer, config, theme);\r\n    drawTimeGridVertical(layer, config, theme);\r\n    return layer;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n * @returns {Konva.Layer} Konva layer containing the background, oddRows and evenRows\r\n */\r\n function getHorizontalLabelAndTimeLayer(config, theme) {\r\n    const layer = new Konva.Layer();\r\n    drawDayOfWeekHorizontal(layer, config, theme);\r\n    drawLabelGridHorizontal(layer, config, theme);\r\n    drawTimeGridHorizontal(layer, config, theme);\r\n    return layer;\r\n}\r\n\r\n\r\n// * =======================================\r\n// * Day Of Week\r\n// * =======================================\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\nfunction drawDayOfWeekHorizontal(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const x = gap + (gap + gridWidth) * timeframeBegin;\r\n\r\n    // Day of Weeks\r\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].forEach((v,i)=> {\r\n        if (i === 0 && weekends === 'sat/sun') return;\r\n        if (i === 5 && weekends === 'fri/sat') return;\r\n        if (i === 6 && weekends !== 'all') return;\r\n\r\n        const y = gap + (gap + gridHeight) * (i + 1);\r\n\r\n        // Background\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n        });\r\n\r\n        // Texts\r\n        appendText(layer, {\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            text: v,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `orientation`, `weekend`, `beginTime`\r\n *      `endTime` etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\n function drawDayOfWeekVertical(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const y = gap + (gap + gridHeight) * timeframeBegin;\r\n\r\n    // Day of Weeks\r\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].forEach((v,i)=> {\r\n        if (i === 0 && weekends === 'sat/sun') return;\r\n        if (i === 5 && weekends === 'fri/sat') return;\r\n        if (i === 6 && weekends !== 'all') return;\r\n\r\n        const x = gap + (gap + gridWidth) * (i + 1);\r\n\r\n        // Background\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n        })\r\n\r\n        // Texts\r\n        appendText(layer, {\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            text: v,\r\n            x, y,\r\n            width: gridWidth,\r\n            height: gridHeight,\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// * =======================================\r\n// * Label Grid\r\n// * =======================================\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\nfunction drawLabelGridHorizontal(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { backgroundColor, labelGridColor, labelGridFontColor, fontFamily } = theme;\r\n\r\n    const y = weekends === 'sat/sun'?\r\n        gap + gridHeight + gap:\r\n        gap;\r\n    const x = gap + (gridWidth + gap) * timeframeBegin;\r\n\r\n    // Cover with background color first\r\n    appendRect(layer, {\r\n        x, y,\r\n        width: gridWidth, height: gridHeight,\r\n        fill: backgroundColor\r\n    });\r\n\r\n    // Divide into 2 halves\r\n    const lowerY = y + (gridHeight / 2) + (gap / 2);\r\n    const halfHeight = (gridHeight / 2) - (gap / 2);\r\n\r\n    // Upper half\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Time',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n\r\n\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Day of Week',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\n function drawLabelGridVertical(layer, config, theme) {\r\n    const { weekends, timeframeBegin } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { backgroundColor, labelGridColor, labelGridFontColor, fontFamily } = theme;\r\n\r\n    const x = weekends === 'sat/sun'?\r\n        gap + gridWidth + gap:\r\n        gap;\r\n    const y = gap + (gridHeight + gap) * timeframeBegin;\r\n\r\n    // Cover with background color\r\n    appendRect(layer, {\r\n        x, y,\r\n        width: gridWidth, height: gridHeight,\r\n        fill: backgroundColor\r\n    });\r\n\r\n    // Divide into 2 halves\r\n    const lowerY = y + (gridHeight / 2) + (gap / 2);\r\n    const halfHeight = (gridHeight / 2) - (gap / 2);\r\n\r\n    // Upper half\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Day of Week',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n\r\n\r\n    appendRect(layer, {\r\n        fill: labelGridColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight\r\n    });\r\n    appendText(layer, {\r\n        text: 'Time',\r\n        fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        fontStyle: 'bold',\r\n        fill: labelGridFontColor,\r\n        x, y: lowerY,\r\n        width: gridWidth, height: halfHeight,\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// * =======================================\r\n// * Time Grid\r\n// * =======================================\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n */\r\nfunction drawTimeGridHorizontal(layer, config, theme) {\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { backgroundColor, timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const timeFontSize = courseNameFontSize * 0.75;\r\n\r\n    const y = weekends === 'sat/sun'? gap * 2 + gridHeight : gap;\r\n    const lowerY = y + (gridHeight / 2) + (gap / 2);\r\n    const halfHeight =  (gridHeight / 2) - (gap / 2);\r\n\r\n    for (let i = timeframeBegin; i < timeframeEnd; ++i) {\r\n        const x = gap + (i+1) * (gap + gridWidth);\r\n\r\n        // Fill with background first\r\n        appendRect(layer, {\r\n            fill: backgroundColor,\r\n            x, y,\r\n            height: gridHeight, width: gridWidth\r\n        });\r\n\r\n        // Upper half\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            height: halfHeight, width: gridWidth\r\n        });\r\n        appendText(layer, {\r\n            text: `${getTimeString(i)}\\n${getTimeString(i+1)}`,\r\n            fontFamily,\r\n            fontSize: timeFontSize,\r\n            fill: timeGridFontColor,\r\n            x, y,\r\n            height: halfHeight, width: gridWidth,\r\n            lineHeight: 1.6,\r\n        });\r\n\r\n        // Lower half\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y: lowerY,\r\n            height: halfHeight, width: gridWidth\r\n        });\r\n        appendText(layer, {\r\n            text: `${getTimeCode(i)}`,\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            x, y: lowerY,\r\n            height: halfHeight, width: gridWidth,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {Konva.Layer} layer The layer to draw on\r\n * @param {Object} config config object to refer `gridWidth`, `gridHeight`, `gap`, `weekend`, `beginTime`\r\n *      etc which dictates how the timetable label and timegrid position and drawn\r\n * @param {Theme} theme Theme object to refer background color, font color and font.\r\n*/\r\nfunction drawTimeGridVertical(layer, config, theme) {\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n    const { gridWidth, gridHeight, gap, courseNameFontSize } = config.grid;\r\n    const { timeGridColor, timeGridFontColor, fontFamily } = theme;\r\n    const timeFontSize = courseNameFontSize * 0.75;\r\n\r\n    const x = weekends === 'sat/sun'? gap * 2 + gridWidth : gap;\r\n    const quarterHeight = (gridHeight * 0.25);\r\n\r\n    for (let i = timeframeBegin; i < timeframeEnd; ++i) {\r\n        const y = gap + (i+1) * (gap + gridHeight);\r\n        const lowerY = y + (gridHeight * 0.75);\r\n\r\n        // Fill with background first\r\n        appendRect(layer, {\r\n            fill: timeGridColor,\r\n            x, y,\r\n            height: gridHeight, width: gridWidth\r\n        });\r\n\r\n        // Upper half\r\n        appendText(layer, {\r\n            text: `${getTimeString(i)}\\n${getTimeString(i+1)}`,\r\n            fontFamily,\r\n            fontSize: timeFontSize,\r\n            fill: timeGridFontColor,\r\n            x, y,\r\n            height: gridHeight - quarterHeight, width: gridWidth,\r\n            lineHeight: 1.6,\r\n        });\r\n\r\n        // Lower half\r\n        appendText(layer, {\r\n            text: `${getTimeCode(i)}`,\r\n            fontFamily,\r\n            fontSize: courseNameFontSize,\r\n            fontStyle: 'bold',\r\n            fill: timeGridFontColor,\r\n            x, y: lowerY,\r\n            height: quarterHeight, width: gridWidth,\r\n        });\r\n    }\r\n}","/**\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n * @typedef {import('./reduceCoursesToTimeslotProperties').TimeslotProperty} TimeslotProperty\r\n */\r\n\r\nimport Konva from 'konva';\r\nimport { appendRect, appendText } from './KonvaUtils';\r\n\r\n\r\n/**\r\n * @param {Object} config The config object from the `configurationSlice.js`, used to deduce information like\r\n *      `gridWidth`, `gap` etc\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {TimeslotProperty[]} timeslots Array of {@link TimeslotProperty} returned from step 2\r\n */\r\nexport function getCoursesLayer(config, theme, timeslots) {\r\n    const { orientation } = config.general;\r\n    if (orientation === 'horizontal')\r\n        return horizontalGetCoursesLayer(config, theme, timeslots);\r\n    return verticalGetCoursesLayer(config, theme, timeslots);\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} config The config object from the `configurationSlice.js`, used to deduce information like\r\n *      `gridWidth`, `gap` etc\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {TimeslotProperty[]} timeslots Array of {@link TimeslotProperty} returned from step 2\r\n */\r\nfunction horizontalGetCoursesLayer(config, theme, timeslots) {\r\n    const layer = new Konva.Layer();\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n\r\n    for (let timeslot of timeslots) {\r\n        const { dayOfWeek, startTime, endTime } = timeslot;\r\n        const y = gap + (dayOfWeek + 1) * (gap + gridHeight);\r\n        const x = gap + (startTime + 1) * (gap + gridWidth);\r\n        const width = (endTime - startTime) * (gridWidth + gap) - gap;\r\n        appendCourse(layer, timeslot, theme, config, x, y, width, gridHeight);\r\n    }\r\n    return layer;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {Object} config The config object from the `configurationSlice.js`, used to deduce information like\r\n *      `gridWidth`, `gap` etc\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {TimeslotProperty[]} timeslots Array of {@link TimeslotProperty} returned from step 2\r\n */\r\nfunction verticalGetCoursesLayer(config, theme, timeslots) {\r\n    const layer = new Konva.Layer();\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n\r\n    for (let timeslot of timeslots) {\r\n        const { dayOfWeek, startTime, endTime } = timeslot;\r\n        const x = gap + (dayOfWeek + 1) * (gap + gridWidth);\r\n        const y = gap + (startTime + 1) * (gap + gridHeight);\r\n        const height = (endTime - startTime) * (gridHeight + gap) - gap;\r\n        appendCourse(layer, timeslot, theme, config, x, y, gridWidth, height);\r\n    }\r\n    return layer;\r\n}\r\n\r\n\r\n/**\r\n * Draws a timeslot on the provided layer.\r\n * ! Here, the courseName:lecturerName:courseCode ratio is 60:20:20\r\n * ! If the lecturer name is absent, then the ratio goes to 75:25\r\n * ! The same goes if \r\n * \r\n * @param {Konva.Layer} layer Layer to draw course on\r\n * @param {TimeslotProperty} property The {@link TimeslotProperty} that contains information how to draw the course\r\n * @param {Theme} theme Theme object to deduce information on font family to use\r\n * @param {Object} config Config object from `configurationSlice.js`. Grid width, course font sizes etc obtainedd from it.\r\n * @param {number} x X offset to draw on the layer\r\n * @param {number} y Y offset to draw on layer\r\n * @param {number} width width of the grid\r\n * @param {number} height height of the grid\r\n */\r\nfunction appendCourse(layer, property, theme, config, x, y, width, height) {\r\n    const ratio = \r\n        (property.lecturer && property.code)? [0.6, 0.2, 0.2]:\r\n        (property.lecturer)? [0.75, 0.25, 0]:\r\n        (property.code)? [0.8, 0, 0.2]:\r\n        [1, 0, 0];\r\n\r\n    const { courseNameFontSize, lecturerNameFontSize, courseCodeFontSize, venueFontSize } = config.grid;\r\n\r\n    \r\n    // If venue is present, it will take from name's height\r\n    const nameHeight = height * (ratio[0] - (property.venue? 0.15: 0) );\r\n    const venueHeight = height * (property.venue? 0.15: 0);\r\n    const lecturerHeight = height * ratio[1];\r\n    const codeHeight = height * ratio[2];\r\n\r\n    // Background\r\n    appendRect(layer, {\r\n        x, y, width, height,\r\n        fill: property.backgroundColor\r\n    });\r\n\r\n    // Course name\r\n    appendText(layer, {\r\n        x, y,\r\n        width,\r\n        height: nameHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: courseNameFontSize,\r\n        text: property.name,\r\n        fontStyle: 'bold',\r\n    });\r\n\r\n    // Venue\r\n    appendText(layer, {\r\n        x, \r\n        y: y + nameHeight,\r\n        width,\r\n        height: venueHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: venueFontSize,\r\n        text: property.venue,\r\n        fontStyle: 'bold',\r\n    });\r\n\r\n    // Lecturer name\r\n    appendText(layer, {\r\n        x, \r\n        y: y + nameHeight + venueHeight,\r\n        width,\r\n        height: lecturerHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: lecturerNameFontSize,\r\n        text: property.lecturer\r\n    });\r\n\r\n    // Course code\r\n    appendText(layer, {\r\n        x, \r\n        y: y + nameHeight + venueHeight + lecturerHeight,\r\n        width,\r\n        height: codeHeight,\r\n        fill: property.fontColor,\r\n        fontFamily: theme.fontFamily,\r\n        fontSize: courseCodeFontSize,\r\n        text: property.code,\r\n    });\r\n}","/**\r\n * @typedef {import('../../redux/slices/configurationSlice').CustomConfig} CustomConfig\r\n * @typedef {import('../../redux/slices/classCoursesSlice').ClassCoursesSliceState} ClassCoursesSliceState\r\n * @typedef {import('./themeMapper').Theme} Theme\r\n * @typedef {import('./reduceCoursesToTimeslotProperties').TimeslotProperty} TimeslotProperty\r\n */\r\n\r\n\r\n\r\n/** Step 1 executor - Map theme to {@link Theme} */ \r\nimport { mapToTheme } from './themeMapper'; \r\n/** Step 2 executor - Reduce timeslots into {@link TimeslotProperty} */ \r\nimport { reduceCoursesToTimeslotArray } from './reduceCoursesToTimeslotProperties';\r\n/** Step 3 executor - Initialize the Konva.Stage to draw in */\r\nimport { initializeStage } from './initializeStage';\r\n/** Step 4 executor - Get layer with background color, evenrow and oddrows drawn */\r\nimport { getBackgroundLayer } from './getBackgroundLayer';\r\n/** Step 5 executor - Get layer with time grid and label grid */\r\nimport { getLabelAndTimeLayer } from './getLabelAndTimeLayer';\r\n/** Step 6 executor - Get layer with courses grid drawn */\r\nimport { getCoursesLayer } from './getCoursesLayer';\r\n/** Step 7 executor - Get DataURL from canvas with only visible portion */\r\nimport { dataURLExtractor } from './dataURLExtractor';\r\n\r\n\r\n\r\n// \r\n/**\r\n * This is the main function called when user clicks the 'Create' button.\r\n * The process of creating timetable is broken down into a series of steps\r\n * \r\n * @param {HTMLImageElement} img The image HTML element to contain the timetable \r\n * @param {ClassCoursesSliceState} courses The classCourses state straight from redux state. \r\n * @param {Object} config The config state straight from redux state.\r\n */\r\nexport function drawTimetable(img, courses, config) {\r\n    \r\n    // We won't actually draw out the canvas. Instead, draw it virtually first\r\n    const fakeDiv = document.createElement('div');\r\n\r\n    /** ==================================================================================================================\r\n    * Step 1 - Obtaining {@link Theme} object that contains information on how the timetable should be styled based on the\r\n    *            config's theme property\r\n    ================================================================================================================== */\r\n    const theme = mapToTheme(config);\r\n\r\n    /** ==================================================================================================================\r\n    * Step 2 - Reduce the courses into an array of {@link TimeslotProperty} objects that can be iterated when drawing the timetable\r\n    ================================================================================================================== */\r\n    const timeslots = reduceCoursesToTimeslotArray(courses, theme);\r\n\r\n    /** ==================================================================================================================\r\n    * Step 3 - Initalize the {@link Konva.Stage} to draw timetable on. The stage size will initialize based on orientation\r\n    * and other properties. Pass in the `config` object. The stage will always be 24x8 or 8x24 grids (Every hour in a week)\r\n    ================================================================================================================== */\r\n    const stage = initializeStage(fakeDiv, config);\r\n\r\n    /** ==================================================================================================================\r\n    * Step 4 - Draw the background and even / odd rows of the timetable. Obtain the Konva.Layer and add to stage.\r\n    ================================================================================================================== */\r\n    stage.add( getBackgroundLayer(config, theme) );\r\n\r\n    /** ==================================================================================================================\r\n    * Step 5 - Draw the time grid and label grid. Obtain the Konva.Layer and add to stage.\r\n    ================================================================================================================== */\r\n    stage.add( getLabelAndTimeLayer(config, theme) );\r\n\r\n    /** ==================================================================================================================\r\n    * Step 6 - Draw the courses. Obtain the Konva layer and add to stage\r\n    ================================================================================================================== */\r\n    stage.add( getCoursesLayer(config, theme, timeslots) );\r\n\r\n    const dataURL = dataURLExtractor(stage, config);\r\n    img.src = dataURL;\r\n}","import Konva from 'konva';\r\n\r\n\r\n/**\r\n * @param {HTMLDivElement} div The div for the Konva to initialize the stage at.\r\n * @param {Object} config The state from `configurationSlice.js` We want the gridWidth, gridHeight, gap, orientation from it.\r\n * @returns {Konva.Stage} Konva Stage\r\n */\r\nexport function initializeStage(div, config) {\r\n    const { orientation } = config.general;\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n\r\n    // HORIZONTAL\r\n    if (orientation === 'horizontal') {\r\n        const width = 25 * gridWidth + 26 * gap;\r\n        const height = 8 * gridHeight + 9 * gap;\r\n    \r\n        return new Konva.Stage({\r\n            container: div,\r\n            width, height\r\n        });\r\n    }\r\n    // VERTICAL\r\n    const width = 8 * gridWidth + 9 * gap;\r\n    const height = 25 * gridHeight + 26 * gap;\r\n\r\n    return new Konva.Stage({\r\n        container: div,\r\n        width, height\r\n    });\r\n}","\r\n/**\r\n *\r\n * @param {Konva.Stage} stage Konva stage to extract the timetable from into DataURL\r\n * @param {Object} config `configurationSlice.js`'s state - Used to extract informations like `gridHeight`, `gridWidth`\r\n *      etc\r\n * @returns {string} The DataURL of the extracted part.\r\n */\r\nexport function dataURLExtractor(stage, config) {\r\n    const { orientation } = config.general;\r\n    if (orientation === 'horizontal')\r\n        return horizontalDataURLExtractor(stage, config);\r\n    return verticalDataURLExtractor(stage, config);\r\n}\r\n\r\n\r\n/**\r\n * @param {Konva.Stage} stage Konva stage to extract the timetable from into DataURL\r\n * @param {Object} config `configurationSlice.js`'s state - Used to extract informations like `gridHeight`, `gridWidth`\r\n *      etc\r\n * @returns {string} The DataURL of the extracted part.\r\n */\r\nfunction horizontalDataURLExtractor(stage, config) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n\r\n    const y = weekends === 'sat/sun'?\r\n        gap + gridHeight:\r\n        0;\r\n    const height = weekends === 'all'?\r\n            (8 * gridHeight) + (9 * gap):\r\n            (6 * gridHeight) + (7 * gap);\r\n\r\n    const x = (gap + gridWidth) * timeframeBegin;\r\n    const width = gap + (timeframeEnd - timeframeBegin + 1) * (gridWidth + gap);\r\n        \r\n    return stage.toDataURL({\r\n        x, y, width, height\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {Konva.Stage} stage Konva stage to extract the timetable from into DataURL\r\n * @param {Object} config `configurationSlice.js`'s state - Used to extract informations like `gridHeight`, `gridWidth`\r\n *      etc\r\n * @returns {string} The DataURL of the extracted part.\r\n */\r\nfunction verticalDataURLExtractor(stage, config) {\r\n    const { gridWidth, gridHeight, gap } = config.grid;\r\n    const { weekends, timeframeBegin, timeframeEnd } = config.general;\r\n\r\n    const x = weekends === 'sat/sun'?\r\n        gap + gridWidth:\r\n        0;\r\n    const width = weekends === 'all'?\r\n            (8 * gridWidth) + (9 * gap):\r\n            (6 * gridWidth) + (7 * gap);\r\n\r\n    const y = (gap + gridHeight) * timeframeBegin;\r\n    const height = gap + (timeframeEnd - timeframeBegin + 1) * (gridHeight + gap);\r\n        \r\n    return stage.toDataURL({\r\n        x, y, width, height\r\n    });\r\n}","import { useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { drawTimetable } from '../../logic/Timetable Generation/drawTimetable';\r\nimport { scrollMainContainerTo } from '../../logic/utils';\r\n\r\n\r\n\r\n\r\n// Handles \"Create\" button click\r\nfunction handleCreateButtonClick(setIsTimetableDrawn, containerRef, courses, config) {\r\n    setIsTimetableDrawn(true);\r\n    drawTimetable(containerRef.current, courses, config);\r\n    scrollMainContainerTo('.creation');\r\n}\r\n\r\n// Handles 'Open in new tab' click\r\nfunction handleOpenInNewTab(containerRef) {\r\n    const w = window.open('');\r\n    w.document.write( containerRef.current.outerHTML );\r\n    w.document.close();\r\n}\r\n\r\n// Handles 'Download png' click\r\nfunction handleDownloadPng(containerRef) {\r\n    const anchor = document.createElement('a');\r\n    anchor.href = containerRef.current.src;\r\n    anchor.download = 'timetable.png';\r\n    anchor.click();\r\n}\r\n\r\n\r\n\r\nfunction CreationState() {\r\n    const config = useSelector((state)=> state.config);\r\n    const courses = useSelector((state)=> state.classCourses);\r\n    const [ isTimetableDrawn, setIsTimetableDrawn ] = useState(false);\r\n    const timetableImgRef = useRef(null);\r\n\r\n\r\n    return (\r\n    <section className='generate__section creation'>\r\n        <h4 className='generate__title'>Step 3: Rendering 🎇</h4>\r\n        <p className='generate__desc'>You will experience a minor lag (It's normal)</p>\r\n\r\n        <div className='creation__btngrp'>\r\n            <button className='creation__btn creation__create' type='button' aria-label='Create timetable' title='Create timetable' \r\n                onClick={()=> handleCreateButtonClick(setIsTimetableDrawn, timetableImgRef, courses, config) } >\r\n                    Create\r\n            </button>\r\n\r\n            {/* Export as png. SHown only after timetable is drawn */}\r\n            {\r\n                isTimetableDrawn?\r\n                <button className='creation__btn creation__png' type='button' aria-label='Download timetable as png image'\r\n                    title='Download timetable as png image' \r\n                    onClick={ ()=> handleDownloadPng(timetableImgRef) } >\r\n                        Download png\r\n                </button>\r\n                : null\r\n            }\r\n\r\n            {/* Open in new tab. SHown only after timetable is drawn */}\r\n            {\r\n                isTimetableDrawn?\r\n                <button className='creation__btn creation__newtab' type='button' aria-label='Open timetable in new tab' \r\n                    title='Open timetable in new tab' \r\n                    onClick={ ()=> handleOpenInNewTab(timetableImgRef) } >\r\n                        Open in new tab\r\n                </button>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n        <div className='creation__view'>\r\n            <img className='creation__img' alt='generated timetable' id='timetable-img' ref={timetableImgRef} \r\n                style={ isTimetableDrawn? null: { display: 'none'} } />\r\n        </div>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default CreationState;","import { useState } from 'react';\r\n\r\nimport ClashCheckState from './ClashCheckState';\r\nimport ConfigureState from './ConfigureState';\r\nimport CreationState from './CreationState';\r\n\r\n\r\n// The content shown on Generate Route.\r\nfunction GenerateRoute() {\r\n    // To generate a timetable, a user needs to go through 3 states:\r\n    // State 0 - Check for clashes\r\n    // State 1 - Configure / Customize timetable\r\n    // State 2 - Actual generation of timetable\r\n    const [state, setState] = useState(0);\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Generate Timetable 🏭</h2>\r\n        <p className='main__desc'>Here, you check clashes, customize, and finally generate your timetable</p>\r\n        \r\n        { state >= 0? <ClashCheckState setState={setState} />: null }\r\n        { state >= 1? <ConfigureState setState={setState} />: null }\r\n        { state >= 2? <CreationState />: null }\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default GenerateRoute;","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\nimport { showBalloon, setTypeAndMessage } from '../../redux/slices/balloonSlice';\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\n\r\n\r\nfunction TutorialRoute() {\r\n\r\n    const [ guides, setGuides ] = useState(['']);\r\n    const [ pageNo, setPageNo ] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( process.env.REACT_APP_TUTORIAL_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((guideLinks)=> Promise.all( [ ...guideLinks.map((link)=> fetch(link)) ] ))\r\n        .then((guideResponses)=> Promise.all( [ ...guideResponses.map((res)=> res.text()) ] ))\r\n        .then((guides)=> setGuides(guides))\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching tutorials. See console for more info\"} ));\r\n            dispatch(showBalloon());\r\n        })\r\n        .finally(()=> {\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Tutorial 📚</h2>\r\n\r\n        <div className='tutorial__btngrp'>\r\n            <button type='button' className='tutorial__btn tutorial__prev'\r\n                onClick={ ()=> setPageNo( Math.max(0, pageNo-1) ) }>\r\n                    <i className=\"fas fa-angle-left\"></i>\r\n            </button>\r\n            Page { pageNo + 1 } of { guides.length }\r\n            <button type='button' className='tutorial__btn tutorial__next'\r\n                onClick={ ()=> setPageNo( Math.min(pageNo+1, guides.length - 1) ) }>\r\n                    <i className=\"fas fa-angle-right\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        <ReactMarkdown className='tutorial__markdown'\r\n            children={ guides[pageNo] }\r\n            rehypePlugins={[rehypeRaw]}\r\n        />\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\n\r\nexport default TutorialRoute;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { sectionsActions } from '../../redux/slices/sectionsSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n\r\n// Handles add to Sections button\r\nfunction addToSections(dispatch, course) {\r\n    dispatch(sectionsActions.addCourseToSections(course));\r\n    dispatch(setTypeAndMessage({ type: 'success', message: `Successfully added \"${course.name}\" - ${course.code} into Sections 2️⃣!`}));\r\n    dispatch(showBalloon());\r\n}\r\n\r\n\r\n\r\nfunction CatalogItem(props) {\r\n    const { course } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <li className='catalog--item'>\r\n        <h4 className='catalog--item--name'>\r\n            { course.name }\r\n        </h4>\r\n\r\n        <p className='catalog--item--code'>\r\n            { course.code }\r\n        </p>\r\n\r\n        <button className='catalog--item--addtocart'\r\n            onClick={()=> addToSections(dispatch, course)}>\r\n                <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    </li>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(CatalogItem);","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\nimport CatalogItem from './CatalogItem';\r\n\r\n\r\nfunction Catalog(props) {\r\n    const { url } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const [ search, setSearch ] = useState('');\r\n    const [ courses, setCourses ] = useState({});\r\n    const [ searchResult, setSearchResult ] = useState([]);\r\n\r\n\r\n    // Fetch the list of courses\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( url )\r\n        .then((res)=> res.json())\r\n        .then((data)=> {\r\n            setCourses(data);\r\n            dispatch(setTypeAndMessage({ type:'success', message: `Succesfully fetched ${Object.keys(data).length} course(s)`} ));\r\n        })\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching courses. See console for more info\"} ));\r\n        })\r\n        .finally(()=> {\r\n            dispatch(showBalloon());\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [url, dispatch]);\r\n\r\n\r\n\r\n    // Update displayed catalog items based on search input\r\n    useEffect(()=> {\r\n        // Filtered CourseItem using Regular Expressions\r\n        const res = [];\r\n        const regexp = new RegExp( search, 'gi');\r\n\r\n        for (let key in courses) {\r\n            const course = courses[key];\r\n\r\n            if (\r\n                (search === '') ||\r\n                (course.name.match(regexp)) ||\r\n                (course.code.match(regexp))\r\n            ) \r\n                res.push( <CatalogItem key={key} course={course} /> );\r\n        }\r\n        setSearchResult(res);\r\n\r\n    }, [search, courses]);\r\n\r\n\r\n\r\n\r\n    return (\r\n    <div className='catalog'>\r\n        <h4 className='courses--title'>\r\n            Step 2: Select Courses\r\n        </h4>\r\n\r\n        {/* Search bar */}\r\n        <input type='text' aria-label='search/filter bar' value={search} className='catalog--search' placeholder='Search...'\r\n            onChange={(e)=> setSearch(e.target.value)} \r\n        />\r\n\r\n        {/* List of courses */}\r\n        <ul className='catalog--list'>\r\n            { searchResult }\r\n        </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Catalog;","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n\r\nimport Catalog from './Catalog';\r\n\r\n\r\nfunction CourseRoute() {\r\n\r\n    const [ schools, setSchools ] = useState([]);\r\n    const [ selectedSchool, setSelectedSchool ] = useState('');\r\n    const dispatch = useDispatch();\r\n    \r\n    // Fetch a list of available schools.\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        fetch( process.env.REACT_APP_SCHOOL_LIST_FETCH_URL )\r\n        .then((res)=> res.json())\r\n        .then((data)=> {\r\n            // Sort school name lexicographically\r\n            data = data.sort((x,y)=> x.name < y.name? -1: 1 );\r\n            setSchools(data);\r\n            dispatch(setTypeAndMessage({ type:'success', message: `Succesfully fetched ${data.length} school(s)`} ));\r\n        })\r\n        .catch((err)=> {\r\n            if (err.message === 'Unexpected token < in JSON at position 0')\r\n                console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n            console.error(err);\r\n\r\n            dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching list of schools. See console for more info\"} ));\r\n        })\r\n        .finally(()=> {\r\n            dispatch(showBalloon());\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper courses'>\r\n        <h2 className='main__title'>UTM Courses 📚</h2>\r\n        <p className='main__desc'>\r\n            Select from readily available UTM courses, which you can choose your section later in <strong><Link to='/sections'>Sections 2️⃣</Link></strong> page\r\n            <br/><br/>\r\n            <span style={{color: \"Red\"}}>You are advised to check with the actual timetable, in case of any mistakes in the course information.</span>\r\n            <br/>\r\n            <small style={{color: \"#ccc\", fontSize: \"0.75em\"}}>Please don't sue me if you missed your class due to this</small>\r\n        </p>\r\n\r\n        {/* Step 1 - Select school */}\r\n        <h4 className='courses--title'>\r\n            Step 1: Select School/Faculty\r\n        </h4>\r\n\r\n        <select aria-label='Select school/faculty' value={selectedSchool} className='courses--select'\r\n            onChange={(e)=> setSelectedSchool(e.target.value)} >\r\n                <option disabled={true} value=''> -- Select an option -- </option>\r\n                { schools.map((e)=> <option value={e.url} key={e.name}>{e.name}</option> ) }\r\n        </select>\r\n\r\n        { selectedSchool !== ''? <Catalog url={selectedSchool} />: null }\r\n    \r\n    </div>\r\n    </main>    \r\n    );\r\n}\r\n\r\nexport default CourseRoute;","import ReactMarkdown from 'react-markdown';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\nimport { showBlindfold, hideBlindfold } from '../../redux/slices/blindfoldSlice';\r\nimport { showLoadingScreen, hideLoadingScreen } from '../../redux/slices/loadingScreenSlice';\r\nimport { setTypeAndMessage, showBalloon } from '../../redux/slices/balloonSlice';\r\n\r\n\r\nfunction VenueRoute() {\r\n\r\n    const [annoucements, setAnnouncements] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    // Once mounted, attempt to fetch annoucements from /data/announcements.json\r\n    useEffect(()=> {\r\n        dispatch(showBlindfold());\r\n        dispatch(showLoadingScreen());\r\n\r\n        // fetch( process.env.REACT_APP_ANNOUCEMENT_FETCH_URL )\r\n        // .then((res)=> res.json())\r\n        // .then((announcementLinks)=> Promise.all( [...announcementLinks.map(link => fetch(link) )] ))\r\n        // .then((annoucementsResponse)=> Promise.all( [...annoucementsResponse.map(a => a.text() ) ] ))\r\n        // .then((annoucements)=> setAnnouncements(annoucements) )\r\n        // .catch((err)=> {\r\n        //     if (err.message === 'Unexpected token < in JSON at position 0')\r\n        //         console.error(\"JSON parsing failed. Most likely the resource is not found and responded with 404 not found page. See Network tab in devtools for verification\");\r\n        //     console.error(err);\r\n\r\n        //     dispatch(setTypeAndMessage({ type:'danger', message: \"Error occurred while fetching announcements. See console for more info\"} ));\r\n        //     dispatch(showBalloon());\r\n        // })\r\n        Promise.resolve(null)\r\n        .finally(()=> {\r\n            dispatch(hideBlindfold());\r\n            dispatch(hideLoadingScreen());\r\n        });\r\n    }, [dispatch]);\r\n\r\n\r\n    const annoucementListJSX = annoucements.map((e, i)=> {\r\n        return (\r\n        <article className='announcement' key={i} >\r\n            {/* <h4 className='annoucement--title'>{e.title}</h4>\r\n            <p className='announcement--date'>{e.date}</p> */}\r\n            <ReactMarkdown \r\n                className='announcement--content'\r\n                children={e}\r\n                rehypePlugins={[rehypeRaw]} \r\n            />\r\n        </article>\r\n        );\r\n    });\r\n\r\n    return (\r\n    <main>\r\n    <div className='main--scrollable-wrapper'>\r\n        <h2 className='main__title'>Where is my class? 📍</h2>\r\n\r\n        <div className='venue__content'>\r\n            <a \r\n                href={process.env.REACT_APP_VENUE_EXCEL_URL}\r\n                target='_blank' \r\n                rel='noreferrer' \r\n                className='venue__button' \r\n            >\r\n                Open Excel File\r\n            </a>\r\n\r\n            \r\n            <div className='venue__main'>\r\n                Not yet implemented... 🚧\r\n            </div>\r\n        </div>\r\n        \r\n\r\n    </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default VenueRoute;","import { HashRouter, Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport Balloon from './components/Balloon';\nimport Blindfold from './components/Blindfold';\nimport LoadScreen from './components/LoadScreen';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport SectionsRoute from './components/sectionsRoute/SectionsRoute';\n\nimport AnnouncementRoute from './components/annoucementRoute/AnnouncementRoute';\nimport ClassRoute from './components/classRoute/ClassRoute';\nimport GenerateRoute from './components/generateRoute/GenerateRoute';\nimport TutorialRoute from './components/tutorialRoute/TutorialRoute';\nimport CourseRoute from './components/courseRoute/CourseRoute';\nimport VenueRoute from './components/venueRoute/VenueRoute.js';\n\nimport { setTypeAndMessage, showBalloon } from './redux/slices/balloonSlice';\nimport { useEffect } from 'react';\n\n\n// Top level application React component.\nfunction App() {\n\n    const dispatch = useDispatch();\n    useEffect(()=> {\n        dispatch(setTypeAndMessage({ type:'primary', message:'Welcome! If you are new here, you can click tutorial button on top-right corner!'}));\n        dispatch(showBalloon());\n    }, [dispatch]);\n\n    \n    return (\n    <HashRouter>\n        <Blindfold />\n        <Balloon />\n        <LoadScreen />\n\n        {/* The Header + Nav + Content will AT LEAST take up screen height */}\n        <div className='min-height-screen-height'>\n            <Header />\n            <Nav />\n\n            <Switch>\n                <Route path='/courses'>\n                    <CourseRoute />\n                </Route>\n                <Route path='/sections'>\n                    <SectionsRoute />\n                </Route>\n                <Route path='/classes'>\n                    <ClassRoute />\n                </Route>\n                <Route path='/generate'>\n                    <GenerateRoute />\n                </Route>\n                <Route path='/tutorial'>\n                    <TutorialRoute />\n                </Route>\n                <Route path='/venue'>\n                    <VenueRoute />\n                </Route>\n                <Route path='/'>\n                    <AnnouncementRoute />\n                </Route>\n            </Switch>\n        </div>\n\n        <Footer />\n    </HashRouter>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\n// Reducer from slices\r\nimport balloonSliceReducer from './slices/balloonSlice';\r\nimport blindfoldSliceReducer from './slices/blindfoldSlice';\r\nimport loadingScreenSliceReducer from './slices/loadingScreenSlice';\r\nimport sectionSliceReducer from './slices/sectionsSlice';\r\nimport classCoursesSliceReducer from './slices/classCoursesSlice';\r\nimport configurationSliceReducer from './slices/configurationSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        balloon: balloonSliceReducer,\r\n        blindfold_showing: blindfoldSliceReducer,\r\n        loadingScreen_showing: loadingScreenSliceReducer,\r\n        config: configurationSliceReducer,\r\n        classCourses: classCoursesSliceReducer,\r\n        sections: sectionSliceReducer,\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Redux store\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// CSS\nimport \"./styles/main.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store} >\n        <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}